<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="vehicle__category_8cpp" kind="file" language="C++">
    <compoundname>vehicle_category.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="error_8hpp" local="no">openscenario_interpreter/error.hpp</includes>
    <includes refid="vehicle__category_8hpp" local="no">openscenario_interpreter/syntax/vehicle_category.hpp</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="23112">
        <label>list</label>
      </node>
      <node id="23108">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="23104">
        <label>iomanip</label>
      </node>
      <node id="23131">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="23101" relation="include">
        </childnode>
        <childnode refid="23118" relation="include">
        </childnode>
      </node>
      <node id="23105">
        <label>openscenario_interpreter/utility/demangle.hpp</label>
        <link refid="demangle_8hpp_source"/>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23107" relation="include">
        </childnode>
      </node>
      <node id="23122">
        <label>openscenario_interpreter/type_traits/if_has_member_function_description.hpp</label>
        <link refid="if__has__member__function__description_8hpp_source"/>
        <childnode refid="23123" relation="include">
        </childnode>
      </node>
      <node id="23111">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="23112" relation="include">
        </childnode>
        <childnode refid="23113" relation="include">
        </childnode>
        <childnode refid="23119" relation="include">
        </childnode>
        <childnode refid="23126" relation="include">
        </childnode>
      </node>
      <node id="23113">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="23114" relation="include">
        </childnode>
      </node>
      <node id="23109">
        <label>stdexcept</label>
      </node>
      <node id="23121">
        <label>openscenario_interpreter/type_traits/has_member_function_current_state.hpp</label>
        <link refid="has__member__function__current__state_8hpp_source"/>
        <childnode refid="23118" relation="include">
        </childnode>
      </node>
      <node id="23100">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/vehicle_category.cpp</label>
        <link refid="vehicle__category_8cpp"/>
        <childnode refid="23101" relation="include">
        </childnode>
        <childnode refid="23102" relation="include">
        </childnode>
        <childnode refid="23110" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
      </node>
      <node id="23106">
        <label>string</label>
      </node>
      <node id="23118">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="23119" relation="include">
        </childnode>
      </node>
      <node id="23114">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="23115" relation="include">
        </childnode>
        <childnode refid="23102" relation="include">
        </childnode>
        <childnode refid="23116" relation="include">
        </childnode>
        <childnode refid="23120" relation="include">
        </childnode>
        <childnode refid="23122" relation="include">
        </childnode>
        <childnode refid="23124" relation="include">
        </childnode>
        <childnode refid="23127" relation="include">
        </childnode>
        <childnode refid="23133" relation="include">
        </childnode>
        <childnode refid="23107" relation="include">
        </childnode>
        <childnode refid="23126" relation="include">
        </childnode>
      </node>
      <node id="23128">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="23129" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
      </node>
      <node id="23103">
        <label>exception</label>
      </node>
      <node id="23123">
        <label>openscenario_interpreter/type_traits/has_member_function_description.hpp</label>
        <link refid="has__member__function__description_8hpp_source"/>
        <childnode refid="23118" relation="include">
        </childnode>
      </node>
      <node id="23102">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="23103" relation="include">
        </childnode>
        <childnode refid="23104" relation="include">
        </childnode>
        <childnode refid="23105" relation="include">
        </childnode>
        <childnode refid="23108" relation="include">
        </childnode>
        <childnode refid="23109" relation="include">
        </childnode>
      </node>
      <node id="23124">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="23125" relation="include">
        </childnode>
        <childnode refid="23126" relation="include">
        </childnode>
      </node>
      <node id="23107">
        <label>typeinfo</label>
      </node>
      <node id="23120">
        <label>openscenario_interpreter/type_traits/if_has_member_function_current_state.hpp</label>
        <link refid="if__has__member__function__current__state_8hpp_source"/>
        <childnode refid="23102" relation="include">
        </childnode>
        <childnode refid="23121" relation="include">
        </childnode>
      </node>
      <node id="23117">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="23118" relation="include">
        </childnode>
      </node>
      <node id="23130">
        <label>unistd.h</label>
      </node>
      <node id="23126">
        <label>utility</label>
      </node>
      <node id="23125">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="23118" relation="include">
        </childnode>
      </node>
      <node id="23101">
        <label>iostream</label>
      </node>
      <node id="23116">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="23117" relation="include">
        </childnode>
      </node>
      <node id="23127">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="23128" relation="include">
        </childnode>
        <childnode refid="23131" relation="include">
        </childnode>
        <childnode refid="23105" relation="include">
        </childnode>
        <childnode refid="23132" relation="include">
        </childnode>
      </node>
      <node id="23119">
        <label>type_traits</label>
      </node>
      <node id="23129">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="23130" relation="include">
        </childnode>
        <childnode refid="23101" relation="include">
        </childnode>
      </node>
      <node id="23110">
        <label>openscenario_interpreter/syntax/vehicle_category.hpp</label>
        <link refid="vehicle__category_8hpp_source"/>
        <childnode refid="23111" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
        <childnode refid="23126" relation="include">
        </childnode>
      </node>
      <node id="23132">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="23101" relation="include">
        </childnode>
        <childnode refid="23106" relation="include">
        </childnode>
      </node>
      <node id="23115">
        <label>memory</label>
      </node>
      <node id="23133">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="23126" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="vehicle__category_8cpp_1a9c8f164b1af96f53e82a3e558461f33f" prot="public" static="no">
        <name>BOILERPLATE</name>
        <param><defname>IDENTIFIER</defname></param>
        <initializer>if (buffer == #IDENTIFIER) {                    \
    category.value = VehicleCategory::IDENTIFIER; \
    return is;                                    \
  }                                               \
  static_assert(true, &quot;&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/vehicle_category.cpp" line="30" column="9"/>
      </memberdef>
      <memberdef kind="define" id="vehicle__category_8cpp_1a9c8f164b1af96f53e82a3e558461f33f" prot="public" static="no">
        <name>BOILERPLATE</name>
        <param><defname>IDENTIFIER</defname></param>
        <initializer>if (buffer == #IDENTIFIER) {                                              \
    throw UNSUPPORTED_ENUMERATION_VALUE_SPECIFIED(VehicleCategory, buffer); \
  }                                                                         \
  static_assert(true, &quot;&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/vehicle_category.cpp" line="45" column="9"/>
      </memberdef>
      <memberdef kind="define" id="vehicle__category_8cpp_1a042387daeb4ef49d52ad4fb5f73a8f40" prot="public" static="no">
        <name>BOILERPLATE</name>
        <param><defname>NAME</defname></param>
        <initializer>case VehicleCategory::NAME: \
    return os &lt;&lt; #NAME;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/vehicle_category.cpp" line="64" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/vehicle_category.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal">std::istream<sp/>&amp;<sp/>operator&gt;&gt;(std::istream<sp/>&amp;<sp/>is,<sp/>VehicleCategory<sp/>&amp;<sp/>category)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>std::string<sp/>buffer;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>is<sp/>&gt;&gt;<sp/>buffer;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOILERPLATE(IDENTIFIER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/>if<sp/>(buffer<sp/>==<sp/>#IDENTIFIER)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>category.value<sp/>=<sp/>VehicleCategory::IDENTIFIER;<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>is;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/>static_assert(true,<sp/>&quot;&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>BOILERPLATE(bicycle);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>BOILERPLATE(bus);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>BOILERPLATE(car);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>BOILERPLATE(motorbike);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>BOILERPLATE(truck);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BOILERPLATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOILERPLATE(IDENTIFIER)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/>if<sp/>(buffer<sp/>==<sp/>#IDENTIFIER)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>throw<sp/>UNSUPPORTED_ENUMERATION_VALUE_SPECIFIED(VehicleCategory,<sp/>buffer);<sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>static_assert(true,<sp/>&quot;&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>BOILERPLATE(semitrailer);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>BOILERPLATE(trailer);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>BOILERPLATE(train);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>BOILERPLATE(tram);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>BOILERPLATE(van);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BOILERPLATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UNEXPECTED_ENUMERATION_VALUE_SPECIFIED(VehicleCategory,<sp/>buffer);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">std::ostream<sp/>&amp;<sp/>operator&lt;&lt;(std::ostream<sp/>&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VehicleCategory<sp/>&amp;<sp/>datum)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOILERPLATE(NAME)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/>case<sp/>VehicleCategory::NAME:<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>os<sp/>&lt;&lt;<sp/>#NAME;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(datum)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(bicycle);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(bus);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(car);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(motorbike);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(semitrailer);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(trailer);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(train);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(tram);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(truck);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>BOILERPLATE(van);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>UNEXPECTED_ENUMERATION_VALUE_ASSIGNED(VehicleCategory,<sp/>datum);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BOILERPLATE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/src/syntax/vehicle_category.cpp"/>
  </compounddef>
</doxygen>
