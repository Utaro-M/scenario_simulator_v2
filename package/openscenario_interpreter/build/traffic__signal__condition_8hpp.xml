<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="traffic__signal__condition_8hpp" kind="file" language="C++">
    <compoundname>traffic_signal_condition.hpp</compoundname>
    <includes refid="attribute_8hpp" local="no">openscenario_interpreter/reader/attribute.hpp</includes>
    <includes refid="scope_8hpp" local="no">openscenario_interpreter/scope.hpp</includes>
    <includes refid="string_8hpp" local="no">openscenario_interpreter/syntax/string.hpp</includes>
    <includes refid="traffic__signal__state_8hpp" local="no">openscenario_interpreter/syntax/traffic_signal_state.hpp</includes>
    <includedby refid="by__value__condition_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/by_value_condition.hpp</includedby>
    <incdepgraph>
      <node id="13164">
        <label>list</label>
      </node>
      <node id="13161">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="13204">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="13155">
        <label>iomanip</label>
      </node>
      <node id="13151">
        <label>functional</label>
      </node>
      <node id="13188">
        <label>limits</label>
      </node>
      <node id="13183">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="13153" relation="include">
        </childnode>
        <childnode refid="13170" relation="include">
        </childnode>
      </node>
      <node id="13187">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="13158">
        <label>openscenario_interpreter/utility/demangle.hpp</label>
        <link refid="demangle_8hpp_source"/>
        <childnode refid="13159" relation="include">
        </childnode>
        <childnode refid="13160" relation="include">
        </childnode>
      </node>
      <node id="13208">
        <label>openscenario_interpreter/syntax/traffic_signal_state.hpp</label>
        <link refid="traffic__signal__state_8hpp_source"/>
        <childnode refid="13209" relation="include">
        </childnode>
        <childnode refid="13149" relation="include">
        </childnode>
        <childnode refid="13211" relation="include">
        </childnode>
        <childnode refid="13214" relation="include">
        </childnode>
        <childnode refid="13192" relation="include">
        </childnode>
      </node>
      <node id="13206">
        <label>openscenario_interpreter/syntax/entity_ref.hpp</label>
        <link refid="entity__ref_8hpp_source"/>
        <childnode refid="13149" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
      </node>
      <node id="13211">
        <label>openscenario_interpreter/syntax/arrow.hpp</label>
        <link refid="arrow_8hpp_source"/>
        <childnode refid="13212" relation="include">
        </childnode>
        <childnode refid="13153" relation="include">
        </childnode>
        <childnode refid="13213" relation="include">
        </childnode>
      </node>
      <node id="13174">
        <label>openscenario_interpreter/type_traits/if_has_member_function_description.hpp</label>
        <link refid="if__has__member__function__description_8hpp_source"/>
        <childnode refid="13175" relation="include">
        </childnode>
      </node>
      <node id="13200">
        <label>pugixml.hpp</label>
      </node>
      <node id="13163">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="13164" relation="include">
        </childnode>
        <childnode refid="13165" relation="include">
        </childnode>
        <childnode refid="13171" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
      </node>
      <node id="13165">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="13166" relation="include">
        </childnode>
      </node>
      <node id="13162">
        <label>stdexcept</label>
      </node>
      <node id="13173">
        <label>openscenario_interpreter/type_traits/has_member_function_current_state.hpp</label>
        <link refid="has__member__function__current__state_8hpp_source"/>
        <childnode refid="13170" relation="include">
        </childnode>
      </node>
      <node id="13190">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="13187" relation="include">
        </childnode>
        <childnode refid="13156" relation="include">
        </childnode>
        <childnode refid="13191" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
      </node>
      <node id="13203">
        <label>openscenario_interpreter/scope.hpp</label>
        <link refid="scope_8hpp_source"/>
        <childnode refid="13204" relation="include">
        </childnode>
        <childnode refid="13205" relation="include">
        </childnode>
        <childnode refid="13188" relation="include">
        </childnode>
        <childnode refid="13167" relation="include">
        </childnode>
        <childnode refid="13206" relation="include">
        </childnode>
        <childnode refid="13161" relation="include">
        </childnode>
        <childnode refid="13202" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
        <childnode refid="13207" relation="include">
        </childnode>
      </node>
      <node id="13191">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="13159">
        <label>string</label>
      </node>
      <node id="13186">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="13187" relation="include">
        </childnode>
        <childnode refid="13188" relation="include">
        </childnode>
        <childnode refid="13156" relation="include">
        </childnode>
        <childnode refid="13189" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
      </node>
      <node id="13213">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
      </node>
      <node id="13170">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="13171" relation="include">
        </childnode>
      </node>
      <node id="13166">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="13167" relation="include">
        </childnode>
        <childnode refid="13156" relation="include">
        </childnode>
        <childnode refid="13168" relation="include">
        </childnode>
        <childnode refid="13172" relation="include">
        </childnode>
        <childnode refid="13174" relation="include">
        </childnode>
        <childnode refid="13176" relation="include">
        </childnode>
        <childnode refid="13179" relation="include">
        </childnode>
        <childnode refid="13185" relation="include">
        </childnode>
        <childnode refid="13160" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
      </node>
      <node id="13180">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="13181" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
      </node>
      <node id="13201">
        <label>regex</label>
      </node>
      <node id="13192">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="13159" relation="include">
        </childnode>
      </node>
      <node id="13210">
        <label>traffic_simulator/api/api.hpp</label>
      </node>
      <node id="13157">
        <label>exception</label>
      </node>
      <node id="13199">
        <label>ostream</label>
      </node>
      <node id="13196">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="13175">
        <label>openscenario_interpreter/type_traits/has_member_function_description.hpp</label>
        <link refid="has__member__function__description_8hpp_source"/>
        <childnode refid="13170" relation="include">
        </childnode>
      </node>
      <node id="13156">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="13157" relation="include">
        </childnode>
        <childnode refid="13155" relation="include">
        </childnode>
        <childnode refid="13158" relation="include">
        </childnode>
        <childnode refid="13161" relation="include">
        </childnode>
        <childnode refid="13162" relation="include">
        </childnode>
      </node>
      <node id="13214">
        <label>openscenario_interpreter/syntax/color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="13212" relation="include">
        </childnode>
        <childnode refid="13153" relation="include">
        </childnode>
        <childnode refid="13213" relation="include">
        </childnode>
      </node>
      <node id="13176">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="13177" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
      </node>
      <node id="13152">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="13153" relation="include">
        </childnode>
        <childnode refid="13154" relation="include">
        </childnode>
        <childnode refid="13186" relation="include">
        </childnode>
        <childnode refid="13190" relation="include">
        </childnode>
        <childnode refid="13192" relation="include">
        </childnode>
        <childnode refid="13193" relation="include">
        </childnode>
        <childnode refid="13195" relation="include">
        </childnode>
      </node>
      <node id="13149">
        <label>openscenario_interpreter/reader/attribute.hpp</label>
        <link refid="attribute_8hpp_source"/>
        <childnode refid="13150" relation="include">
        </childnode>
        <childnode refid="13151" relation="include">
        </childnode>
        <childnode refid="13152" relation="include">
        </childnode>
        <childnode refid="13197" relation="include">
        </childnode>
        <childnode refid="13198" relation="include">
        </childnode>
        <childnode refid="13201" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
        <childnode refid="13202" relation="include">
        </childnode>
      </node>
      <node id="13209">
        <label>openscenario_interpreter/procedure.hpp</label>
        <link refid="procedure_8hpp_source"/>
        <childnode refid="13188" relation="include">
        </childnode>
        <childnode refid="13167" relation="include">
        </childnode>
        <childnode refid="13156" relation="include">
        </childnode>
        <childnode refid="13210" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
      </node>
      <node id="13150">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="13160">
        <label>typeinfo</label>
      </node>
      <node id="13189">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="13172">
        <label>openscenario_interpreter/type_traits/if_has_member_function_current_state.hpp</label>
        <link refid="if__has__member__function__current__state_8hpp_source"/>
        <childnode refid="13156" relation="include">
        </childnode>
        <childnode refid="13173" relation="include">
        </childnode>
      </node>
      <node id="13169">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="13170" relation="include">
        </childnode>
      </node>
      <node id="13193">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="13187" relation="include">
        </childnode>
        <childnode refid="13156" relation="include">
        </childnode>
        <childnode refid="13194" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
      </node>
      <node id="13182">
        <label>unistd.h</label>
      </node>
      <node id="13207">
        <label>vector</label>
      </node>
      <node id="13154">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="13155" relation="include">
        </childnode>
        <childnode refid="13153" relation="include">
        </childnode>
        <childnode refid="13156" relation="include">
        </childnode>
        <childnode refid="13163" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
      </node>
      <node id="13205">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="13198">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="13199" relation="include">
        </childnode>
        <childnode refid="13200" relation="include">
        </childnode>
      </node>
      <node id="13178">
        <label>utility</label>
      </node>
      <node id="13197">
        <label>openscenario_interpreter/utility/highlighter.hpp</label>
        <link refid="highlighter_8hpp_source"/>
        <childnode refid="13153" relation="include">
        </childnode>
        <childnode refid="13183" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
        <childnode refid="13178" relation="include">
        </childnode>
      </node>
      <node id="13177">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="13170" relation="include">
        </childnode>
      </node>
      <node id="13153">
        <label>iostream</label>
      </node>
      <node id="13194">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="13202">
        <label>unordered_map</label>
      </node>
      <node id="13212">
        <label>boost/optional.hpp</label>
      </node>
      <node id="13168">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="13169" relation="include">
        </childnode>
      </node>
      <node id="13179">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="13180" relation="include">
        </childnode>
        <childnode refid="13183" relation="include">
        </childnode>
        <childnode refid="13158" relation="include">
        </childnode>
        <childnode refid="13184" relation="include">
        </childnode>
      </node>
      <node id="13171">
        <label>type_traits</label>
      </node>
      <node id="13148">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_condition.hpp</label>
        <link refid="traffic__signal__condition_8hpp"/>
        <childnode refid="13149" relation="include">
        </childnode>
        <childnode refid="13203" relation="include">
        </childnode>
        <childnode refid="13192" relation="include">
        </childnode>
        <childnode refid="13208" relation="include">
        </childnode>
      </node>
      <node id="13181">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="13182" relation="include">
        </childnode>
        <childnode refid="13153" relation="include">
        </childnode>
      </node>
      <node id="13195">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="13187" relation="include">
        </childnode>
        <childnode refid="13153" relation="include">
        </childnode>
        <childnode refid="13156" relation="include">
        </childnode>
        <childnode refid="13196" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
      </node>
      <node id="13184">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="13153" relation="include">
        </childnode>
        <childnode refid="13159" relation="include">
        </childnode>
      </node>
      <node id="13167">
        <label>memory</label>
      </node>
      <node id="13185">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="13178" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13222">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver_group.hpp</label>
        <link refid="maneuver__group_8hpp_source"/>
        <childnode refid="13223" relation="include">
        </childnode>
      </node>
      <node id="13216">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/by_value_condition.hpp</label>
        <link refid="by__value__condition_8hpp_source"/>
        <childnode refid="13217" relation="include">
        </childnode>
      </node>
      <node id="13218">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_group.hpp</label>
        <link refid="condition__group_8hpp_source"/>
        <childnode refid="13219" relation="include">
        </childnode>
      </node>
      <node id="13217">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition.hpp</label>
        <link refid="condition_8hpp_source"/>
        <childnode refid="13218" relation="include">
        </childnode>
      </node>
      <node id="13225">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard.hpp</label>
        <link refid="storyboard_8hpp_source"/>
        <childnode refid="13226" relation="include">
        </childnode>
      </node>
      <node id="13229">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="13220">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/event.hpp</label>
        <link refid="event_8hpp_source"/>
        <childnode refid="13221" relation="include">
        </childnode>
      </node>
      <node id="13223">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/act.hpp</label>
        <link refid="act_8hpp_source"/>
        <childnode refid="13224" relation="include">
        </childnode>
      </node>
      <node id="13228">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="13229" relation="include">
        </childnode>
      </node>
      <node id="13227">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/open_scenario_category.hpp</label>
        <link refid="open__scenario__category_8hpp_source"/>
        <childnode refid="13228" relation="include">
        </childnode>
      </node>
      <node id="13224">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/story.hpp</label>
        <link refid="story_8hpp_source"/>
        <childnode refid="13225" relation="include">
        </childnode>
      </node>
      <node id="13221">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver.hpp</label>
        <link refid="maneuver_8hpp_source"/>
        <childnode refid="13222" relation="include">
        </childnode>
      </node>
      <node id="13215">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_condition.hpp</label>
        <link refid="traffic__signal__condition_8hpp"/>
        <childnode refid="13216" relation="include">
        </childnode>
      </node>
      <node id="13226">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_definition.hpp</label>
        <link refid="scenario__definition_8hpp_source"/>
        <childnode refid="13227" relation="include">
        </childnode>
      </node>
      <node id="13219">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/trigger.hpp</label>
        <link refid="trigger_8hpp_source"/>
        <childnode refid="13220" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalCondition" prot="public">openscenario_interpreter::syntax::TrafficSignalCondition</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_CONDITION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_CONDITION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/reader/attribute.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/scope.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/traffic_signal_state.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>TrafficSignalCondition<sp/>-------------------------------------------------</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>Considered<sp/>true<sp/>if<sp/>a<sp/>referenced<sp/>traffic<sp/>signal<sp/>(e.g.<sp/>from<sp/>an<sp/>OpenDRIVE</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>file)<sp/>reaches<sp/>a<sp/>specific<sp/>states.<sp/>Signal<sp/>IDs<sp/>are<sp/>listed<sp/>in<sp/>the<sp/>TrafficSignal</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>list<sp/>of<sp/>the<sp/>RoadNetwork<sp/>together<sp/>with<sp/>their<sp/>states<sp/>and<sp/>their<sp/>controllers<sp/>to</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>enable<sp/>dynamic<sp/>signal<sp/>modelling.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;TrafficSignalCondition&quot;&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;name&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;state&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalCondition" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalCondition" kindref="compound">TrafficSignalCondition</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>name;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>state;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>LaneletId<sp/>=<sp/>TrafficSignalState::LaneletId;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalCondition" kindref="compound">TrafficSignalCondition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="classopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>scope)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>:<sp/>name(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>scope)),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>state(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;state&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>scope))</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Arrow" kindref="compound">Arrow</ref><sp/>current_arrow;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Color" kindref="compound">Color</ref><sp/>current_color;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluate()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>current_arrow<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1Arrow" kindref="compound">Arrow</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(getTrafficSignalArrow(boost::lexical_cast&lt;LaneletId&gt;(name)));</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>current_color<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1Color" kindref="compound">Color</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(getTrafficSignalColor(boost::lexical_cast&lt;LaneletId&gt;(name)));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asBoolean(current_arrow<sp/>==<sp/>Arrow::none<sp/>and<sp/>current_color<sp/>==<sp/>Color::none);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asBoolean(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::lexical_cast&lt;String&gt;(current_arrow)<sp/>==<sp/>state<sp/>or</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::lexical_cast&lt;String&gt;(current_color)<sp/>==<sp/>state);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>description()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>description;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>description<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Is<sp/>TrafficSignal<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::quoted(name)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(Arrow<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>current_arrow</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Color<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>current_color<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>in<sp/>state<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::quoted(state)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>description.str();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNAL_CONDITION_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signal_condition.hpp"/>
  </compounddef>
</doxygen>
