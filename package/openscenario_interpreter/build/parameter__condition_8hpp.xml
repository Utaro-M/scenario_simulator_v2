<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="parameter__condition_8hpp" kind="file" language="C++">
    <compoundname>parameter_condition.hpp</compoundname>
    <includes local="no">iomanip</includes>
    <includes refid="scope_8hpp" local="no">openscenario_interpreter/scope.hpp</includes>
    <includes refid="rule_8hpp" local="no">openscenario_interpreter/syntax/rule.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">typeindex</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includedby refid="by__value__condition_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/by_value_condition.hpp</includedby>
    <incdepgraph>
      <node id="8820">
        <label>list</label>
      </node>
      <node id="8817">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="8801">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="8808">
        <label>functional</label>
      </node>
      <node id="8799">
        <label>iomanip</label>
      </node>
      <node id="8803">
        <label>limits</label>
      </node>
      <node id="8840">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="8810" relation="include">
        </childnode>
        <childnode refid="8825" relation="include">
        </childnode>
      </node>
      <node id="8844">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="8814">
        <label>openscenario_interpreter/utility/demangle.hpp</label>
        <link refid="demangle_8hpp_source"/>
        <childnode refid="8815" relation="include">
        </childnode>
        <childnode refid="8816" relation="include">
        </childnode>
      </node>
      <node id="8798">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_condition.hpp</label>
        <link refid="parameter__condition_8hpp"/>
        <childnode refid="8799" relation="include">
        </childnode>
        <childnode refid="8800" relation="include">
        </childnode>
        <childnode refid="8860" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
        <childnode refid="8863" relation="include">
        </childnode>
        <childnode refid="8858" relation="include">
        </childnode>
        <childnode refid="8833" relation="include">
        </childnode>
      </node>
      <node id="8805">
        <label>openscenario_interpreter/syntax/entity_ref.hpp</label>
        <link refid="entity__ref_8hpp_source"/>
        <childnode refid="8806" relation="include">
        </childnode>
        <childnode refid="8833" relation="include">
        </childnode>
      </node>
      <node id="8860">
        <label>openscenario_interpreter/syntax/rule.hpp</label>
        <link refid="rule_8hpp_source"/>
        <childnode refid="8808" relation="include">
        </childnode>
        <childnode refid="8861" relation="include">
        </childnode>
        <childnode refid="8806" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
        <childnode refid="8833" relation="include">
        </childnode>
      </node>
      <node id="8829">
        <label>openscenario_interpreter/type_traits/if_has_member_function_description.hpp</label>
        <link refid="if__has__member__function__description_8hpp_source"/>
        <childnode refid="8830" relation="include">
        </childnode>
      </node>
      <node id="8856">
        <label>pugixml.hpp</label>
      </node>
      <node id="8819">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="8820" relation="include">
        </childnode>
        <childnode refid="8821" relation="include">
        </childnode>
        <childnode refid="8826" relation="include">
        </childnode>
        <childnode refid="8833" relation="include">
        </childnode>
      </node>
      <node id="8821">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="8822" relation="include">
        </childnode>
      </node>
      <node id="8862">
        <label>cmath</label>
      </node>
      <node id="8818">
        <label>stdexcept</label>
      </node>
      <node id="8828">
        <label>openscenario_interpreter/type_traits/has_member_function_current_state.hpp</label>
        <link refid="has__member__function__current__state_8hpp_source"/>
        <childnode refid="8825" relation="include">
        </childnode>
      </node>
      <node id="8846">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="8844" relation="include">
        </childnode>
        <childnode refid="8812" relation="include">
        </childnode>
        <childnode refid="8847" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
      </node>
      <node id="8847">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="8800">
        <label>openscenario_interpreter/scope.hpp</label>
        <link refid="scope_8hpp_source"/>
        <childnode refid="8801" relation="include">
        </childnode>
        <childnode refid="8802" relation="include">
        </childnode>
        <childnode refid="8803" relation="include">
        </childnode>
        <childnode refid="8804" relation="include">
        </childnode>
        <childnode refid="8805" relation="include">
        </childnode>
        <childnode refid="8817" relation="include">
        </childnode>
        <childnode refid="8858" relation="include">
        </childnode>
        <childnode refid="8833" relation="include">
        </childnode>
        <childnode refid="8859" relation="include">
        </childnode>
      </node>
      <node id="8815">
        <label>string</label>
      </node>
      <node id="8843">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="8844" relation="include">
        </childnode>
        <childnode refid="8803" relation="include">
        </childnode>
        <childnode refid="8812" relation="include">
        </childnode>
        <childnode refid="8845" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
      </node>
      <node id="8825">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="8826" relation="include">
        </childnode>
      </node>
      <node id="8822">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="8804" relation="include">
        </childnode>
        <childnode refid="8812" relation="include">
        </childnode>
        <childnode refid="8823" relation="include">
        </childnode>
        <childnode refid="8827" relation="include">
        </childnode>
        <childnode refid="8829" relation="include">
        </childnode>
        <childnode refid="8831" relation="include">
        </childnode>
        <childnode refid="8834" relation="include">
        </childnode>
        <childnode refid="8836" relation="include">
        </childnode>
        <childnode refid="8842" relation="include">
        </childnode>
        <childnode refid="8816" relation="include">
        </childnode>
        <childnode refid="8833" relation="include">
        </childnode>
      </node>
      <node id="8837">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="8838" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
      </node>
      <node id="8857">
        <label>regex</label>
      </node>
      <node id="8834">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="8835" relation="include">
        </childnode>
      </node>
      <node id="8848">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="8815" relation="include">
        </childnode>
      </node>
      <node id="8813">
        <label>exception</label>
      </node>
      <node id="8855">
        <label>ostream</label>
      </node>
      <node id="8852">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="8830">
        <label>openscenario_interpreter/type_traits/has_member_function_description.hpp</label>
        <link refid="has__member__function__description_8hpp_source"/>
        <childnode refid="8825" relation="include">
        </childnode>
      </node>
      <node id="8812">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="8813" relation="include">
        </childnode>
        <childnode refid="8799" relation="include">
        </childnode>
        <childnode refid="8814" relation="include">
        </childnode>
        <childnode refid="8817" relation="include">
        </childnode>
        <childnode refid="8818" relation="include">
        </childnode>
      </node>
      <node id="8831">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="8832" relation="include">
        </childnode>
        <childnode refid="8833" relation="include">
        </childnode>
      </node>
      <node id="8809">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="8810" relation="include">
        </childnode>
        <childnode refid="8811" relation="include">
        </childnode>
        <childnode refid="8843" relation="include">
        </childnode>
        <childnode refid="8846" relation="include">
        </childnode>
        <childnode refid="8848" relation="include">
        </childnode>
        <childnode refid="8849" relation="include">
        </childnode>
        <childnode refid="8851" relation="include">
        </childnode>
      </node>
      <node id="8806">
        <label>openscenario_interpreter/reader/attribute.hpp</label>
        <link refid="attribute_8hpp_source"/>
        <childnode refid="8807" relation="include">
        </childnode>
        <childnode refid="8808" relation="include">
        </childnode>
        <childnode refid="8809" relation="include">
        </childnode>
        <childnode refid="8853" relation="include">
        </childnode>
        <childnode refid="8854" relation="include">
        </childnode>
        <childnode refid="8857" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
        <childnode refid="8858" relation="include">
        </childnode>
      </node>
      <node id="8807">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="8816">
        <label>typeinfo</label>
      </node>
      <node id="8835">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="8825" relation="include">
        </childnode>
      </node>
      <node id="8845">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="8827">
        <label>openscenario_interpreter/type_traits/if_has_member_function_current_state.hpp</label>
        <link refid="if__has__member__function__current__state_8hpp_source"/>
        <childnode refid="8812" relation="include">
        </childnode>
        <childnode refid="8828" relation="include">
        </childnode>
      </node>
      <node id="8824">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="8825" relation="include">
        </childnode>
      </node>
      <node id="8849">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="8844" relation="include">
        </childnode>
        <childnode refid="8812" relation="include">
        </childnode>
        <childnode refid="8850" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
      </node>
      <node id="8839">
        <label>unistd.h</label>
      </node>
      <node id="8859">
        <label>vector</label>
      </node>
      <node id="8811">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="8799" relation="include">
        </childnode>
        <childnode refid="8810" relation="include">
        </childnode>
        <childnode refid="8812" relation="include">
        </childnode>
        <childnode refid="8819" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
      </node>
      <node id="8802">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="8861">
        <label>openscenario_interpreter/functional/equal_to.hpp</label>
        <link refid="equal__to_8hpp_source"/>
        <childnode refid="8862" relation="include">
        </childnode>
        <childnode refid="8808" relation="include">
        </childnode>
        <childnode refid="8803" relation="include">
        </childnode>
        <childnode refid="8826" relation="include">
        </childnode>
      </node>
      <node id="8854">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="8855" relation="include">
        </childnode>
        <childnode refid="8856" relation="include">
        </childnode>
      </node>
      <node id="8833">
        <label>utility</label>
      </node>
      <node id="8853">
        <label>openscenario_interpreter/utility/highlighter.hpp</label>
        <link refid="highlighter_8hpp_source"/>
        <childnode refid="8810" relation="include">
        </childnode>
        <childnode refid="8840" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
        <childnode refid="8833" relation="include">
        </childnode>
      </node>
      <node id="8832">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="8825" relation="include">
        </childnode>
      </node>
      <node id="8810">
        <label>iostream</label>
      </node>
      <node id="8850">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="8858">
        <label>unordered_map</label>
      </node>
      <node id="8823">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="8824" relation="include">
        </childnode>
      </node>
      <node id="8836">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="8837" relation="include">
        </childnode>
        <childnode refid="8840" relation="include">
        </childnode>
        <childnode refid="8814" relation="include">
        </childnode>
        <childnode refid="8841" relation="include">
        </childnode>
      </node>
      <node id="8826">
        <label>type_traits</label>
      </node>
      <node id="8838">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="8839" relation="include">
        </childnode>
        <childnode refid="8810" relation="include">
        </childnode>
      </node>
      <node id="8851">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="8844" relation="include">
        </childnode>
        <childnode refid="8810" relation="include">
        </childnode>
        <childnode refid="8812" relation="include">
        </childnode>
        <childnode refid="8852" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
      </node>
      <node id="8841">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="8810" relation="include">
        </childnode>
        <childnode refid="8815" relation="include">
        </childnode>
      </node>
      <node id="8804">
        <label>memory</label>
      </node>
      <node id="8863">
        <label>typeindex</label>
      </node>
      <node id="8842">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="8833" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8871">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver_group.hpp</label>
        <link refid="maneuver__group_8hpp_source"/>
        <childnode refid="8872" relation="include">
        </childnode>
      </node>
      <node id="8864">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_condition.hpp</label>
        <link refid="parameter__condition_8hpp"/>
        <childnode refid="8865" relation="include">
        </childnode>
      </node>
      <node id="8865">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/by_value_condition.hpp</label>
        <link refid="by__value__condition_8hpp_source"/>
        <childnode refid="8866" relation="include">
        </childnode>
      </node>
      <node id="8867">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition_group.hpp</label>
        <link refid="condition__group_8hpp_source"/>
        <childnode refid="8868" relation="include">
        </childnode>
      </node>
      <node id="8866">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/condition.hpp</label>
        <link refid="condition_8hpp_source"/>
        <childnode refid="8867" relation="include">
        </childnode>
      </node>
      <node id="8874">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/storyboard.hpp</label>
        <link refid="storyboard_8hpp_source"/>
        <childnode refid="8875" relation="include">
        </childnode>
      </node>
      <node id="8878">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="8869">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/event.hpp</label>
        <link refid="event_8hpp_source"/>
        <childnode refid="8870" relation="include">
        </childnode>
      </node>
      <node id="8872">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/act.hpp</label>
        <link refid="act_8hpp_source"/>
        <childnode refid="8873" relation="include">
        </childnode>
      </node>
      <node id="8877">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="8878" relation="include">
        </childnode>
      </node>
      <node id="8876">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/open_scenario_category.hpp</label>
        <link refid="open__scenario__category_8hpp_source"/>
        <childnode refid="8877" relation="include">
        </childnode>
      </node>
      <node id="8873">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/story.hpp</label>
        <link refid="story_8hpp_source"/>
        <childnode refid="8874" relation="include">
        </childnode>
      </node>
      <node id="8870">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/maneuver.hpp</label>
        <link refid="maneuver_8hpp_source"/>
        <childnode refid="8871" relation="include">
        </childnode>
      </node>
      <node id="8875">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_definition.hpp</label>
        <link refid="scenario__definition_8hpp_source"/>
        <childnode refid="8876" relation="include">
        </childnode>
      </node>
      <node id="8868">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/trigger.hpp</label>
        <link refid="trigger_8hpp_source"/>
        <childnode refid="8869" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1ParameterCondition" prot="public">openscenario_interpreter::syntax::ParameterCondition</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__PARAMETER_CONDITION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__PARAMETER_CONDITION_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/scope.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/rule.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeindex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>ParameterCondition<sp/>-----------------------------------------------------</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;ParameterCondition&quot;&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;parameterRef&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;value&quot;<sp/>type=&quot;String&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:attribute<sp/>name=&quot;rule&quot;<sp/>type=&quot;Rule&quot;<sp/>use=&quot;required&quot;/&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structopenscenario__interpreter_1_1syntax_1_1ParameterCondition" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1ParameterCondition" kindref="compound">ParameterCondition</ref><sp/>:<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="classopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>parameter_ref;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String<sp/>value;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1Rule" kindref="compound">Rule</ref><sp/>compare;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1ParameterCondition" kindref="compound">ParameterCondition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="classopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>current_scope)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="classopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref>(current_scope),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>parameter_ref(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;parameterRef&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>localScope())),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(readAttribute&lt;String&gt;(</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node,<sp/>localScope())),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>compare<sp/><sp/><sp/><sp/><sp/><sp/>(readAttribute&lt;Rule&gt;<sp/><sp/>(</highlight><highlight class="stringliteral">&quot;rule&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node,<sp/>localScope()))</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>description()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="59"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>description;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>description<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>value<sp/>of<sp/>parameter<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::quoted(parameter_ref)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>localScope().findElement(parameter_ref)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>compare<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>value<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>description.str();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluate()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::type_index,<sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;bool(const<sp/>Rule,<sp/>const<sp/>Element<sp/>&amp;,<sp/>const<sp/>String<sp/>&amp;)&gt;&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>overloads{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="structopenscenario__interpreter_1_1syntax_1_1Boolean" kindref="compound">Boolean</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>compare,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare(lhs.template<sp/>as&lt;Boolean<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(),<sp/>boost::lexical_cast&lt;Boolean<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(rhs));<sp/>}<sp/>},</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="structopenscenario__interpreter_1_1syntax_1_1Double" kindref="compound">Double</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>compare,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare(lhs.template<sp/>as&lt;Double<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(),<sp/>boost::lexical_cast&lt;Double<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(rhs));<sp/>}<sp/>},</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="structopenscenario__interpreter_1_1syntax_1_1Integer" kindref="compound">Integer</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>compare,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare(lhs.template<sp/>as&lt;Integer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(),<sp/>boost::lexical_cast&lt;Integer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(rhs));<sp/>}<sp/>},</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(String<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>),<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>compare,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare(lhs.template<sp/>as&lt;String<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/>);<sp/>}<sp/>},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedInteger" kindref="compound">UnsignedInteger</ref>),<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>compare,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare(lhs.template<sp/>as&lt;UnsignedInteger&gt;(),<sp/>boost::lexical_cast&lt;UnsignedInteger&gt;(rhs));<sp/>}<sp/>},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="structopenscenario__interpreter_1_1syntax_1_1UnsignedShort" kindref="compound">UnsignedShort</ref><sp/><sp/>),<sp/>[](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>compare,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>rhs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compare(lhs.template<sp/>as&lt;UnsignedShort<sp/><sp/>&gt;(),<sp/>boost::lexical_cast&lt;UnsignedShort<sp/><sp/>&gt;(rhs));<sp/>}<sp/>},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>parameter<sp/>=<sp/>localScope().findElement(parameter_ref);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parameter)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>THROW_SYNTAX_ERROR(parameter_ref,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>cannot<sp/>be<sp/>found<sp/>from<sp/>this<sp/>scope&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>asBoolean(overloads.at(parameter.type())(compare,<sp/>parameter,<sp/>value));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::out_of_range<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SemanticError(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>viable<sp/>operation<sp/>&quot;</highlight><highlight class="normal">,<sp/>std::quoted(boost::lexical_cast&lt;String&gt;(compare)),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>parameter<sp/>&quot;</highlight><highlight class="normal">,<sp/>std::quoted(parameter_ref),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>and<sp/>value<sp/>&quot;</highlight><highlight class="normal">,<sp/>std::quoted(value));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::out_of_range<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>SemanticError(</highlight><highlight class="stringliteral">&quot;No<sp/>such<sp/>parameter<sp/>&quot;</highlight><highlight class="normal">,<sp/>std::quoted(parameter_ref));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__PARAMETER_CONDITION_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/parameter_condition.hpp"/>
  </compounddef>
</doxygen>
