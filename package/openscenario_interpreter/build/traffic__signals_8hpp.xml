<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="traffic__signals_8hpp" kind="file" language="C++">
    <compoundname>traffic_signals.hpp</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">memory</includes>
    <includes refid="error_8hpp" local="no">openscenario_interpreter/error.hpp</includes>
    <includes refid="scope_8hpp" local="no">openscenario_interpreter/scope.hpp</includes>
    <includes refid="traffic__signal__controller_8hpp" local="no">openscenario_interpreter/syntax/traffic_signal_controller.hpp</includes>
    <includes refid="circular__check_8hpp" local="no">openscenario_interpreter/utility/circular_check.hpp</includes>
    <includedby refid="road__network_8hpp" local="no">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp</includedby>
    <incdepgraph>
      <node id="13081">
        <label>list</label>
      </node>
      <node id="13067">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="13070">
        <label>boost/algorithm/string.hpp</label>
      </node>
      <node id="13076">
        <label>functional</label>
      </node>
      <node id="13063">
        <label>iomanip</label>
      </node>
      <node id="13072">
        <label>limits</label>
      </node>
      <node id="13123">
        <label>iterator</label>
      </node>
      <node id="13101">
        <label>openscenario_interpreter/type_traits/has_stream_output_operator.hpp</label>
        <link refid="has__stream__output__operator_8hpp_source"/>
        <childnode refid="13078" relation="include">
        </childnode>
        <childnode refid="13086" relation="include">
        </childnode>
      </node>
      <node id="13105">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="13064">
        <label>openscenario_interpreter/utility/demangle.hpp</label>
        <link refid="demangle_8hpp_source"/>
        <childnode refid="13065" relation="include">
        </childnode>
        <childnode refid="13066" relation="include">
        </childnode>
      </node>
      <node id="13128">
        <label>openscenario_interpreter/syntax/traffic_signal_state.hpp</label>
        <link refid="traffic__signal__state_8hpp_source"/>
        <childnode refid="13129" relation="include">
        </childnode>
        <childnode refid="13074" relation="include">
        </childnode>
        <childnode refid="13131" relation="include">
        </childnode>
        <childnode refid="13134" relation="include">
        </childnode>
        <childnode refid="13109" relation="include">
        </childnode>
      </node>
      <node id="13073">
        <label>openscenario_interpreter/syntax/entity_ref.hpp</label>
        <link refid="entity__ref_8hpp_source"/>
        <childnode refid="13074" relation="include">
        </childnode>
        <childnode refid="13094" relation="include">
        </childnode>
      </node>
      <node id="13131">
        <label>openscenario_interpreter/syntax/arrow.hpp</label>
        <link refid="arrow_8hpp_source"/>
        <childnode refid="13132" relation="include">
        </childnode>
        <childnode refid="13078" relation="include">
        </childnode>
        <childnode refid="13133" relation="include">
        </childnode>
      </node>
      <node id="13090">
        <label>openscenario_interpreter/type_traits/if_has_member_function_description.hpp</label>
        <link refid="if__has__member__function__description_8hpp_source"/>
        <childnode refid="13091" relation="include">
        </childnode>
      </node>
      <node id="13117">
        <label>pugixml.hpp</label>
      </node>
      <node id="13080">
        <label>openscenario_interpreter/object.hpp</label>
        <link refid="object_8hpp_source"/>
        <childnode refid="13081" relation="include">
        </childnode>
        <childnode refid="13082" relation="include">
        </childnode>
        <childnode refid="13087" relation="include">
        </childnode>
        <childnode refid="13094" relation="include">
        </childnode>
      </node>
      <node id="13082">
        <label>openscenario_interpreter/expression.hpp</label>
        <link refid="expression_8hpp_source"/>
        <childnode refid="13083" relation="include">
        </childnode>
      </node>
      <node id="13122">
        <label>openscenario_interpreter/iterator/circular_iterator.hpp</label>
        <link refid="circular__iterator_8hpp_source"/>
        <childnode refid="13123" relation="include">
        </childnode>
        <childnode refid="13087" relation="include">
        </childnode>
      </node>
      <node id="13060">
        <label>cassert</label>
      </node>
      <node id="13068">
        <label>stdexcept</label>
      </node>
      <node id="13089">
        <label>openscenario_interpreter/type_traits/has_member_function_current_state.hpp</label>
        <link refid="has__member__function__current__state_8hpp_source"/>
        <childnode refid="13086" relation="include">
        </childnode>
      </node>
      <node id="13107">
        <label>openscenario_interpreter/syntax/integer.hpp</label>
        <link refid="integer_8hpp_source"/>
        <childnode refid="13105" relation="include">
        </childnode>
        <childnode refid="13062" relation="include">
        </childnode>
        <childnode refid="13108" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
      </node>
      <node id="13108">
        <label>std_msgs/msg/int64.hpp</label>
      </node>
      <node id="13069">
        <label>openscenario_interpreter/scope.hpp</label>
        <link refid="scope_8hpp_source"/>
        <childnode refid="13070" relation="include">
        </childnode>
        <childnode refid="13071" relation="include">
        </childnode>
        <childnode refid="13072" relation="include">
        </childnode>
        <childnode refid="13061" relation="include">
        </childnode>
        <childnode refid="13073" relation="include">
        </childnode>
        <childnode refid="13067" relation="include">
        </childnode>
        <childnode refid="13119" relation="include">
        </childnode>
        <childnode refid="13094" relation="include">
        </childnode>
        <childnode refid="13120" relation="include">
        </childnode>
      </node>
      <node id="13065">
        <label>string</label>
      </node>
      <node id="13104">
        <label>openscenario_interpreter/syntax/double.hpp</label>
        <link refid="double_8hpp_source"/>
        <childnode refid="13105" relation="include">
        </childnode>
        <childnode refid="13072" relation="include">
        </childnode>
        <childnode refid="13062" relation="include">
        </childnode>
        <childnode refid="13106" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
      </node>
      <node id="13133">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
      </node>
      <node id="13086">
        <label>openscenario_interpreter/type_traits/void_t.hpp</label>
        <link refid="void__t_8hpp_source"/>
        <childnode refid="13087" relation="include">
        </childnode>
      </node>
      <node id="13083">
        <label>openscenario_interpreter/pointer.hpp</label>
        <link refid="pointer_8hpp_source"/>
        <childnode refid="13061" relation="include">
        </childnode>
        <childnode refid="13062" relation="include">
        </childnode>
        <childnode refid="13084" relation="include">
        </childnode>
        <childnode refid="13088" relation="include">
        </childnode>
        <childnode refid="13090" relation="include">
        </childnode>
        <childnode refid="13092" relation="include">
        </childnode>
        <childnode refid="13095" relation="include">
        </childnode>
        <childnode refid="13097" relation="include">
        </childnode>
        <childnode refid="13103" relation="include">
        </childnode>
        <childnode refid="13066" relation="include">
        </childnode>
        <childnode refid="13094" relation="include">
        </childnode>
      </node>
      <node id="13098">
        <label>openscenario_interpreter/console/escape_sequence.hpp</label>
        <link refid="escape__sequence_8hpp_source"/>
        <childnode refid="13099" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
      </node>
      <node id="13118">
        <label>regex</label>
      </node>
      <node id="13095">
        <label>openscenario_interpreter/type_traits/if_has_member_function_start.hpp</label>
        <link refid="if__has__member__function__start_8hpp_source"/>
        <childnode refid="13096" relation="include">
        </childnode>
      </node>
      <node id="13127">
        <label>openscenario_interpreter/type_traits/must_be_default_constructible.hpp</label>
        <link refid="must__be__default__constructible_8hpp_source"/>
        <childnode refid="13062" relation="include">
        </childnode>
        <childnode refid="13087" relation="include">
        </childnode>
      </node>
      <node id="13109">
        <label>openscenario_interpreter/syntax/string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="13065" relation="include">
        </childnode>
      </node>
      <node id="13130">
        <label>traffic_simulator/api/api.hpp</label>
      </node>
      <node id="13116">
        <label>ostream</label>
      </node>
      <node id="13113">
        <label>std_msgs/msg/u_int16.hpp</label>
      </node>
      <node id="13091">
        <label>openscenario_interpreter/type_traits/has_member_function_description.hpp</label>
        <link refid="has__member__function__description_8hpp_source"/>
        <childnode refid="13086" relation="include">
        </childnode>
      </node>
      <node id="13062">
        <label>openscenario_interpreter/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="13063" relation="include">
        </childnode>
        <childnode refid="13064" relation="include">
        </childnode>
        <childnode refid="13067" relation="include">
        </childnode>
        <childnode refid="13068" relation="include">
        </childnode>
      </node>
      <node id="13134">
        <label>openscenario_interpreter/syntax/color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="13132" relation="include">
        </childnode>
        <childnode refid="13078" relation="include">
        </childnode>
        <childnode refid="13133" relation="include">
        </childnode>
      </node>
      <node id="13135">
        <label>openscenario_interpreter/utility/circular_check.hpp</label>
        <link refid="circular__check_8hpp_source"/>
        <childnode refid="13119" relation="include">
        </childnode>
        <childnode refid="13094" relation="include">
        </childnode>
      </node>
      <node id="13092">
        <label>openscenario_interpreter/type_traits/if_has_member_function_evaluate.hpp</label>
        <link refid="if__has__member__function__evaluate_8hpp_source"/>
        <childnode refid="13093" relation="include">
        </childnode>
        <childnode refid="13094" relation="include">
        </childnode>
      </node>
      <node id="13077">
        <label>openscenario_interpreter/syntax/parameter_type.hpp</label>
        <link refid="parameter__type_8hpp_source"/>
        <childnode refid="13078" relation="include">
        </childnode>
        <childnode refid="13079" relation="include">
        </childnode>
        <childnode refid="13104" relation="include">
        </childnode>
        <childnode refid="13107" relation="include">
        </childnode>
        <childnode refid="13109" relation="include">
        </childnode>
        <childnode refid="13110" relation="include">
        </childnode>
        <childnode refid="13112" relation="include">
        </childnode>
      </node>
      <node id="13074">
        <label>openscenario_interpreter/reader/attribute.hpp</label>
        <link refid="attribute_8hpp_source"/>
        <childnode refid="13075" relation="include">
        </childnode>
        <childnode refid="13076" relation="include">
        </childnode>
        <childnode refid="13077" relation="include">
        </childnode>
        <childnode refid="13114" relation="include">
        </childnode>
        <childnode refid="13115" relation="include">
        </childnode>
        <childnode refid="13118" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
        <childnode refid="13119" relation="include">
        </childnode>
      </node>
      <node id="13129">
        <label>openscenario_interpreter/procedure.hpp</label>
        <link refid="procedure_8hpp_source"/>
        <childnode refid="13072" relation="include">
        </childnode>
        <childnode refid="13061" relation="include">
        </childnode>
        <childnode refid="13062" relation="include">
        </childnode>
        <childnode refid="13130" relation="include">
        </childnode>
        <childnode refid="13094" relation="include">
        </childnode>
      </node>
      <node id="13075">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="13066">
        <label>typeinfo</label>
      </node>
      <node id="13096">
        <label>openscenario_interpreter/type_traits/has_member_function_start.hpp</label>
        <link refid="has__member__function__start_8hpp_source"/>
        <childnode refid="13086" relation="include">
        </childnode>
      </node>
      <node id="13106">
        <label>std_msgs/msg/float64.hpp</label>
      </node>
      <node id="13088">
        <label>openscenario_interpreter/type_traits/if_has_member_function_current_state.hpp</label>
        <link refid="if__has__member__function__current__state_8hpp_source"/>
        <childnode refid="13062" relation="include">
        </childnode>
        <childnode refid="13089" relation="include">
        </childnode>
      </node>
      <node id="13085">
        <label>openscenario_interpreter/type_traits/has_member_function_accomplished.hpp</label>
        <link refid="has__member__function__accomplished_8hpp_source"/>
        <childnode refid="13086" relation="include">
        </childnode>
      </node>
      <node id="13110">
        <label>openscenario_interpreter/syntax/unsigned_integer.hpp</label>
        <link refid="unsigned__integer_8hpp_source"/>
        <childnode refid="13105" relation="include">
        </childnode>
        <childnode refid="13062" relation="include">
        </childnode>
        <childnode refid="13111" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
      </node>
      <node id="13100">
        <label>unistd.h</label>
      </node>
      <node id="13120">
        <label>vector</label>
      </node>
      <node id="13079">
        <label>openscenario_interpreter/syntax/boolean.hpp</label>
        <link refid="boolean_8hpp_source"/>
        <childnode refid="13063" relation="include">
        </childnode>
        <childnode refid="13078" relation="include">
        </childnode>
        <childnode refid="13062" relation="include">
        </childnode>
        <childnode refid="13080" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
      </node>
      <node id="13071">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="13115">
        <label>openscenario_interpreter/utility/pugi_extension.hpp</label>
        <link refid="pugi__extension_8hpp_source"/>
        <childnode refid="13116" relation="include">
        </childnode>
        <childnode refid="13117" relation="include">
        </childnode>
      </node>
      <node id="13094">
        <label>utility</label>
      </node>
      <node id="13114">
        <label>openscenario_interpreter/utility/highlighter.hpp</label>
        <link refid="highlighter_8hpp_source"/>
        <childnode refid="13078" relation="include">
        </childnode>
        <childnode refid="13101" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
        <childnode refid="13094" relation="include">
        </childnode>
      </node>
      <node id="13126">
        <label>openscenario_interpreter/iterator/size.hpp</label>
        <link refid="size_8hpp_source"/>
        <childnode refid="13123" relation="include">
        </childnode>
      </node>
      <node id="13093">
        <label>openscenario_interpreter/type_traits/has_member_function_evaluate.hpp</label>
        <link refid="has__member__function__evaluate_8hpp_source"/>
        <childnode refid="13086" relation="include">
        </childnode>
      </node>
      <node id="13121">
        <label>openscenario_interpreter/syntax/traffic_signal_controller.hpp</label>
        <link refid="traffic__signal__controller_8hpp_source"/>
        <childnode refid="13122" relation="include">
        </childnode>
        <childnode refid="13069" relation="include">
        </childnode>
        <childnode refid="13104" relation="include">
        </childnode>
        <childnode refid="13124" relation="include">
        </childnode>
        <childnode refid="13109" relation="include">
        </childnode>
      </node>
      <node id="13124">
        <label>openscenario_interpreter/syntax/phase.hpp</label>
        <link refid="phase_8hpp_source"/>
        <childnode refid="13125" relation="include">
        </childnode>
        <childnode refid="13104" relation="include">
        </childnode>
        <childnode refid="13109" relation="include">
        </childnode>
        <childnode refid="13128" relation="include">
        </childnode>
      </node>
      <node id="13078">
        <label>iostream</label>
      </node>
      <node id="13111">
        <label>std_msgs/msg/u_int64.hpp</label>
      </node>
      <node id="13119">
        <label>unordered_map</label>
      </node>
      <node id="13132">
        <label>boost/optional.hpp</label>
      </node>
      <node id="13125">
        <label>openscenario_interpreter/reader/element.hpp</label>
        <link refid="element_8hpp_source"/>
        <childnode refid="13076" relation="include">
        </childnode>
        <childnode refid="13123" relation="include">
        </childnode>
        <childnode refid="13072" relation="include">
        </childnode>
        <childnode refid="13126" relation="include">
        </childnode>
        <childnode refid="13080" relation="include">
        </childnode>
        <childnode refid="13127" relation="include">
        </childnode>
        <childnode refid="13115" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
        <childnode refid="13119" relation="include">
        </childnode>
        <childnode refid="13094" relation="include">
        </childnode>
      </node>
      <node id="13084">
        <label>openscenario_interpreter/type_traits/if_has_member_function_accomplished.hpp</label>
        <link refid="if__has__member__function__accomplished_8hpp_source"/>
        <childnode refid="13085" relation="include">
        </childnode>
      </node>
      <node id="13097">
        <label>openscenario_interpreter/type_traits/if_has_stream_output_operator.hpp</label>
        <link refid="if__has__stream__output__operator_8hpp_source"/>
        <childnode refid="13098" relation="include">
        </childnode>
        <childnode refid="13101" relation="include">
        </childnode>
        <childnode refid="13064" relation="include">
        </childnode>
        <childnode refid="13102" relation="include">
        </childnode>
      </node>
      <node id="13087">
        <label>type_traits</label>
      </node>
      <node id="13099">
        <label>openscenario_interpreter/console/is_console.hpp</label>
        <link refid="is__console_8hpp_source"/>
        <childnode refid="13100" relation="include">
        </childnode>
        <childnode refid="13078" relation="include">
        </childnode>
      </node>
      <node id="13112">
        <label>openscenario_interpreter/syntax/unsigned_short.hpp</label>
        <link refid="unsigned__short_8hpp_source"/>
        <childnode refid="13105" relation="include">
        </childnode>
        <childnode refid="13078" relation="include">
        </childnode>
        <childnode refid="13062" relation="include">
        </childnode>
        <childnode refid="13113" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
      </node>
      <node id="13102">
        <label>openscenario_interpreter/utility/indent.hpp</label>
        <link refid="indent_8hpp_source"/>
        <childnode refid="13078" relation="include">
        </childnode>
        <childnode refid="13065" relation="include">
        </childnode>
      </node>
      <node id="13059">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signals.hpp</label>
        <link refid="traffic__signals_8hpp"/>
        <childnode refid="13060" relation="include">
        </childnode>
        <childnode refid="13061" relation="include">
        </childnode>
        <childnode refid="13062" relation="include">
        </childnode>
        <childnode refid="13069" relation="include">
        </childnode>
        <childnode refid="13121" relation="include">
        </childnode>
        <childnode refid="13135" relation="include">
        </childnode>
      </node>
      <node id="13061">
        <label>memory</label>
      </node>
      <node id="13103">
        <label>openscenario_interpreter/utility/pair.hpp</label>
        <link refid="pair_8hpp_source"/>
        <childnode refid="13094" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13141">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/openscenario_interpreter.hpp</label>
        <link refid="openscenario__interpreter_8hpp_source"/>
      </node>
      <node id="13137">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/road_network.hpp</label>
        <link refid="road__network_8hpp_source"/>
        <childnode refid="13138" relation="include">
        </childnode>
      </node>
      <node id="13140">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/openscenario.hpp</label>
        <link refid="openscenario_8hpp_source"/>
        <childnode refid="13141" relation="include">
        </childnode>
      </node>
      <node id="13139">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/open_scenario_category.hpp</label>
        <link refid="open__scenario__category_8hpp_source"/>
        <childnode refid="13140" relation="include">
        </childnode>
      </node>
      <node id="13138">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/scenario_definition.hpp</label>
        <link refid="scenario__definition_8hpp_source"/>
        <childnode refid="13139" relation="include">
        </childnode>
      </node>
      <node id="13136">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signals.hpp</label>
        <link refid="traffic__signals_8hpp"/>
        <childnode refid="13137" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" prot="public">openscenario_interpreter::syntax::TrafficSignals</innerclass>
    <innernamespace refid="namespaceopenscenario__interpreter">openscenario_interpreter</innernamespace>
    <innernamespace refid="namespaceopenscenario__interpreter_1_1syntax">openscenario_interpreter::syntax</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNALS_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNALS_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/scope.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/syntax/traffic_signal_controller.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openscenario_interpreter/utility/circular_check.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenscenario__interpreter" kindref="compound">openscenario_interpreter</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">syntax</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----<sp/>TrafficSignals<sp/>---------------------------------------------------------</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/><sp/>&lt;xsd:complexType<sp/>name=&quot;TrafficSignals&quot;&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;xsd:sequence&gt;</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>&lt;xsd:element<sp/>name=&quot;TrafficSignalController&quot;<sp/>minOccurs=&quot;0&quot;<sp/>maxOccurs=&quot;unbounded&quot;<sp/>type=&quot;TrafficSignalController&quot;/&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>&lt;/xsd:sequence&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/xsd:complexType&gt;</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" kindref="compound">TrafficSignals</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>std::list&lt;std::shared_ptr&lt;TrafficSignalController&gt;&gt;<sp/>traffic_signal_controllers;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" kindref="compound">TrafficSignals</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Node&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignals" kindref="compound">TrafficSignals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Node<sp/>&amp;<sp/>node,<sp/><ref refid="classopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>outer_scope)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classopenscenario__interpreter_1_1Pointer" kindref="compound">Element</ref><sp/>element<sp/>:<sp/>readElementsAsElement&lt;TrafficSignalController,<sp/>0&gt;(</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;TrafficSignalController&quot;</highlight><highlight class="normal">,<sp/>node,<sp/>outer_scope))<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>controller<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref>&gt;(element);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outer_scope.addElement(controller-&gt;name,<sp/>element);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>traffic_signal_controllers.push_back(std::move(controller));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>resolve_reference(outer_scope);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluate()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>controller<sp/>:<sp/>traffic_signal_controllers)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>controller-&gt;evaluate();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unspecified;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resolve_reference(<ref refid="classopenscenario__interpreter_1_1Scope" kindref="compound">Scope</ref><sp/>&amp;<sp/>scope)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>each<sp/>:<sp/>traffic_signal_controllers)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!each-&gt;reference.empty())<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>reference<sp/>=<sp/>scope.findElement(each-&gt;reference).as&lt;<ref refid="structopenscenario__interpreter_1_1syntax_1_1TrafficSignalController" kindref="compound">TrafficSignalController</ref>&gt;();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(each-&gt;cycleTime()<sp/>!=<sp/>reference.cycleTime())<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>THROW_SEMANTIC_ERROR(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;The<sp/>cycle<sp/>time<sp/>of<sp/>&quot;</highlight><highlight class="normal">,<sp/>each-&gt;name,<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">,<sp/>each-&gt;cycleTime(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sec)<sp/>and<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>each-&gt;reference,<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">,<sp/>reference.cycleTime(),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sec)<sp/>is<sp/>different&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reference.observers.push_back(each);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::out_of_range<sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>THROW_SYNTAX_ERROR(each-&gt;reference,<sp/></highlight><highlight class="stringliteral">&quot;is<sp/>not<sp/>declared<sp/>in<sp/>the<sp/>TrafficSignals.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openscenario_interpreter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>OPENSCENARIO_INTERPRETER__SYNTAX__TRAFFIC_SIGNALS_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/openscenario/openscenario_interpreter/include/openscenario_interpreter/syntax/traffic_signals.hpp"/>
  </compounddef>
</doxygen>
