<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="traffic__light_8cpp" kind="file" language="C++">
    <compoundname>traffic_light.cpp</compoundname>
    <includes local="no">limits</includes>
    <includes local="no">scenario_simulator_exception/exception.hpp</includes>
    <includes local="no">string</includes>
    <includes refid="color__utils_8hpp" local="no">traffic_simulator/color_utils/color_utils.hpp</includes>
    <includes refid="traffic__light_8hpp" local="no">traffic_simulator/traffic_lights/traffic_light.hpp</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="7273">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="7323">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
        <link refid="traffic__light__state_8hpp_source"/>
        <childnode refid="7324" relation="include">
        </childnode>
        <childnode refid="7282" relation="include">
        </childnode>
        <childnode refid="7283" relation="include">
        </childnode>
      </node>
      <node id="7272">
        <label>limits</label>
      </node>
      <node id="7302">
        <label>geometry_msgs/msg/pose_stamped.hpp</label>
      </node>
      <node id="7279">
        <label>std_msgs/msg/color_rgba.hpp</label>
      </node>
      <node id="7301">
        <label>geographic_msgs/msg/geo_point.hpp</label>
      </node>
      <node id="7293">
        <label>lanelet2_routing/RoutingGraph.h</label>
      </node>
      <node id="7284">
        <label>traffic_simulator/traffic_lights/traffic_light_phase.hpp</label>
        <link refid="traffic__light__phase_8hpp_source"/>
        <childnode refid="7272" relation="include">
        </childnode>
        <childnode refid="7273" relation="include">
        </childnode>
        <childnode refid="7285" relation="include">
        </childnode>
        <childnode refid="7321" relation="include">
        </childnode>
        <childnode refid="7320" relation="include">
        </childnode>
      </node>
      <node id="7288">
        <label>lanelet2_core/geometry/Lanelet.h</label>
      </node>
      <node id="7307">
        <label>openscenario_msgs/msg/entity_status.hpp</label>
      </node>
      <node id="7324">
        <label>autoware_perception_msgs/msg/lamp_state.hpp</label>
      </node>
      <node id="7317">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="7271">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/traffic_lights/traffic_light.cpp</label>
        <link refid="traffic__light_8cpp"/>
        <childnode refid="7272" relation="include">
        </childnode>
        <childnode refid="7273" relation="include">
        </childnode>
        <childnode refid="7274" relation="include">
        </childnode>
        <childnode refid="7275" relation="include">
        </childnode>
        <childnode refid="7280" relation="include">
        </childnode>
        <childnode refid="7322" relation="include">
        </childnode>
        <childnode refid="7321" relation="include">
        </childnode>
        <childnode refid="7320" relation="include">
        </childnode>
      </node>
      <node id="7276">
        <label>cassert</label>
      </node>
      <node id="7283">
        <label>stdexcept</label>
      </node>
      <node id="7274">
        <label>string</label>
      </node>
      <node id="7305">
        <label>lanelet2_extension_psim/utility/utilities.hpp</label>
      </node>
      <node id="7309">
        <label>traffic_simulator/hdmap_utils/cache.hpp</label>
        <link refid="cache_8hpp_source"/>
        <childnode refid="7300" relation="include">
        </childnode>
        <childnode refid="7310" relation="include">
        </childnode>
        <childnode refid="7311" relation="include">
        </childnode>
        <childnode refid="7273" relation="include">
        </childnode>
        <childnode refid="7312" relation="include">
        </childnode>
        <childnode refid="7322" relation="include">
        </childnode>
        <childnode refid="7320" relation="include">
        </childnode>
      </node>
      <node id="7278">
        <label>map</label>
      </node>
      <node id="7314">
        <label>traffic_simulator/math/hermite_curve.hpp</label>
        <link refid="hermite__curve_8hpp_source"/>
        <childnode refid="7315" relation="include">
        </childnode>
        <childnode refid="7316" relation="include">
        </childnode>
        <childnode refid="7300" relation="include">
        </childnode>
        <childnode refid="7310" relation="include">
        </childnode>
        <childnode refid="7317" relation="include">
        </childnode>
        <childnode refid="7318" relation="include">
        </childnode>
        <childnode refid="7319" relation="include">
        </childnode>
        <childnode refid="7320" relation="include">
        </childnode>
      </node>
      <node id="7275">
        <label>traffic_simulator/color_utils/color_utils.hpp</label>
        <link refid="color__utils_8hpp_source"/>
        <childnode refid="7276" relation="include">
        </childnode>
        <childnode refid="7277" relation="include">
        </childnode>
        <childnode refid="7278" relation="include">
        </childnode>
        <childnode refid="7279" relation="include">
        </childnode>
        <childnode refid="7274" relation="include">
        </childnode>
      </node>
      <node id="7308">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="7292">
        <label>lanelet2_routing/RoutingCost.h</label>
      </node>
      <node id="7297">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="7285">
        <label>traffic_simulator/hdmap_utils/hdmap_utils.hpp</label>
        <link refid="hdmap__utils_8hpp_source"/>
        <childnode refid="7286" relation="include">
        </childnode>
        <childnode refid="7287" relation="include">
        </childnode>
        <childnode refid="7288" relation="include">
        </childnode>
        <childnode refid="7289" relation="include">
        </childnode>
        <childnode refid="7290" relation="include">
        </childnode>
        <childnode refid="7291" relation="include">
        </childnode>
        <childnode refid="7292" relation="include">
        </childnode>
        <childnode refid="7293" relation="include">
        </childnode>
        <childnode refid="7294" relation="include">
        </childnode>
        <childnode refid="7295" relation="include">
        </childnode>
        <childnode refid="7296" relation="include">
        </childnode>
        <childnode refid="7297" relation="include">
        </childnode>
        <childnode refid="7298" relation="include">
        </childnode>
        <childnode refid="7299" relation="include">
        </childnode>
        <childnode refid="7300" relation="include">
        </childnode>
        <childnode refid="7301" relation="include">
        </childnode>
        <childnode refid="7302" relation="include">
        </childnode>
        <childnode refid="7303" relation="include">
        </childnode>
        <childnode refid="7304" relation="include">
        </childnode>
        <childnode refid="7305" relation="include">
        </childnode>
        <childnode refid="7278" relation="include">
        </childnode>
        <childnode refid="7306" relation="include">
        </childnode>
        <childnode refid="7307" relation="include">
        </childnode>
        <childnode refid="7308" relation="include">
        </childnode>
        <childnode refid="7274" relation="include">
        </childnode>
        <childnode refid="7309" relation="include">
        </childnode>
        <childnode refid="7314" relation="include">
        </childnode>
        <childnode refid="7323" relation="include">
        </childnode>
        <childnode refid="7322" relation="include">
        </childnode>
        <childnode refid="7321" relation="include">
        </childnode>
        <childnode refid="7320" relation="include">
        </childnode>
        <childnode refid="7325" relation="include">
        </childnode>
      </node>
      <node id="7313">
        <label>exception</label>
      </node>
      <node id="7286">
        <label>geometry_msgs/msg/vector3.h</label>
      </node>
      <node id="7318">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="7281">
        <label>autoware_perception_msgs/msg/traffic_light_state.hpp</label>
      </node>
      <node id="7291">
        <label>lanelet2_routing/Route.h</label>
      </node>
      <node id="7304">
        <label>lanelet2_extension_psim/utility/query.hpp</label>
      </node>
      <node id="7316">
        <label>quaternion_operation/quaternion_operation.h</label>
      </node>
      <node id="7303">
        <label>lanelet2_extension_psim/utility/message_conversion.hpp</label>
      </node>
      <node id="7310">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="7277">
        <label>cstdio</label>
      </node>
      <node id="7320">
        <label>vector</label>
      </node>
      <node id="7299">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="7315">
        <label>gtest/gtest.h</label>
      </node>
      <node id="7321">
        <label>utility</label>
      </node>
      <node id="7319">
        <label>traffic_simulator/math/polynomial_solver.hpp</label>
        <link refid="polynomial__solver_8hpp_source"/>
        <childnode refid="7320" relation="include">
        </childnode>
      </node>
      <node id="7295">
        <label>lanelet2_traffic_rules/TrafficRulesFactory.h</label>
      </node>
      <node id="7312">
        <label>traffic_simulator/math/catmull_rom_spline.hpp</label>
        <link refid="catmull__rom__spline_8hpp_source"/>
        <childnode refid="7313" relation="include">
        </childnode>
        <childnode refid="7310" relation="include">
        </childnode>
        <childnode refid="7274" relation="include">
        </childnode>
        <childnode refid="7314" relation="include">
        </childnode>
        <childnode refid="7321" relation="include">
        </childnode>
        <childnode refid="7320" relation="include">
        </childnode>
      </node>
      <node id="7290">
        <label>lanelet2_core/primitives/LaneletSequence.h</label>
      </node>
      <node id="7282">
        <label>iostream</label>
      </node>
      <node id="7287">
        <label>lanelet2_core/LaneletMap.h</label>
      </node>
      <node id="7322">
        <label>unordered_map</label>
      </node>
      <node id="7280">
        <label>traffic_simulator/traffic_lights/traffic_light.hpp</label>
        <link refid="traffic__light_8hpp_source"/>
        <childnode refid="7281" relation="include">
        </childnode>
        <childnode refid="7282" relation="include">
        </childnode>
        <childnode refid="7272" relation="include">
        </childnode>
        <childnode refid="7283" relation="include">
        </childnode>
        <childnode refid="7275" relation="include">
        </childnode>
        <childnode refid="7284" relation="include">
        </childnode>
        <childnode refid="7323" relation="include">
        </childnode>
        <childnode refid="7322" relation="include">
        </childnode>
        <childnode refid="7321" relation="include">
        </childnode>
        <childnode refid="7320" relation="include">
        </childnode>
      </node>
      <node id="7298">
        <label>autoware_auto_msgs/msg/had_map_bin.hpp</label>
      </node>
      <node id="7325">
        <label>visualization_msgs/msg/marker_array.hpp</label>
      </node>
      <node id="7311">
        <label>mutex</label>
      </node>
      <node id="7289">
        <label>lanelet2_core/primitives/BasicRegulatoryElements.h</label>
      </node>
      <node id="7294">
        <label>lanelet2_routing/RoutingGraphContainer.h</label>
      </node>
      <node id="7300">
        <label>boost/optional.hpp</label>
      </node>
      <node id="7296">
        <label>tf2/LinearMath/Matrix3x3.h</label>
      </node>
      <node id="7306">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetraffic__simulator">traffic_simulator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;scenario_simulator_exception/exception.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/color_utils/color_utils.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/traffic_lights/traffic_light.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetraffic__simulator" kindref="compound">traffic_simulator</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal">TrafficLight::TrafficLight(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::int64_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;TrafficLightColor,<sp/>geometry_msgs::msg::Point&gt;<sp/>&amp;<sp/>color_positions,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;TrafficLightArrow,<sp/>geometry_msgs::msg::Point&gt;<sp/>&amp;<sp/>arrow_positions)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">:<sp/>id(id),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>color_positions_(color_positions),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>arrow_positions_(arrow_positions),</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>color_changed_(true),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>arrow_changed_(true)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>color_phase_.setState(TrafficLightColor::NONE);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>arrow_phase_.setState(TrafficLightArrow::NONE);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrafficLight::setColor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrafficLightColor<sp/>color)<sp/>{<sp/>color_phase_.setState(color);<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrafficLight::setArrow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrafficLightArrow<sp/>arrow)<sp/>{<sp/>arrow_phase_.setState(arrow);<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TrafficLight::getColorPhaseDuration()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>color_phase_.getPhaseDuration();<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>TrafficLight::getArrowPhaseDuration()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arrow_phase_.getPhaseDuration();<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">TrafficLightColor<sp/>TrafficLight::getColor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>color_phase_.getState();<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">TrafficLightArrow<sp/>TrafficLight::getArrow()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arrow_phase_.getState();<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrafficLight::update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_time)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>previous_arrow<sp/>=<sp/>getArrow();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>arrow_phase_.update(step_time);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>arrow_changed_<sp/>=<sp/>(previous_arrow<sp/>!=<sp/>getArrow());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>previous_color<sp/>=<sp/>getColor();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>color_phase_.update(step_time);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_color<sp/>!=<sp/>getColor())<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>color_changed_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>color_changed_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::msg::Point<sp/>&amp;<sp/>TrafficLight::getPosition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrafficLightColor<sp/>&amp;<sp/>color)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="65"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color_positions_.count(color)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>THROW_SEMANTIC_ERROR(</highlight><highlight class="stringliteral">&quot;target<sp/>color<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>color_positions_.at(color);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>geometry_msgs::msg::Point<sp/>&amp;<sp/>TrafficLight::getPosition(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrafficLightArrow<sp/>&amp;<sp/>arrow)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="73"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arrow_positions_.count(arrow)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>THROW_SEMANTIC_ERROR(</highlight><highlight class="stringliteral">&quot;target<sp/>arrow<sp/>does<sp/>not<sp/>exist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>arrow_positions_.at(arrow);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>traffic_simulator</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/traffic_lights/traffic_light.cpp"/>
  </compounddef>
</doxygen>
