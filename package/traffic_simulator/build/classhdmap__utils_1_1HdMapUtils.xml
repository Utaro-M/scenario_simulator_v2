<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhdmap__utils_1_1HdMapUtils" kind="class" language="C++" prot="public">
    <compoundname>hdmap_utils::HdMapUtils</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhdmap__utils_1_1HdMapUtils_1a2e5ae92a0e8c601dd9873facccf8991e" prot="private" static="no" mutable="no">
        <type><ref refid="classhdmap__utils_1_1RouteCache" kindref="compound">RouteCache</ref></type>
        <definition>RouteCache hdmap_utils::HdMapUtils::route_cache_</definition>
        <argsstring></argsstring>
        <name>route_cache_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="143" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhdmap__utils_1_1HdMapUtils_1abb0c71208be35b5fa7fb8d15b6df8765" prot="private" static="no" mutable="no">
        <type><ref refid="classhdmap__utils_1_1CenterPointsCache" kindref="compound">CenterPointsCache</ref></type>
        <definition>CenterPointsCache hdmap_utils::HdMapUtils::center_points_cache_</definition>
        <argsstring></argsstring>
        <name>center_points_cache_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="144" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhdmap__utils_1_1HdMapUtils_1a9d2e7b27304e9c3238b5fd73740d0039" prot="private" static="no" mutable="no">
        <type><ref refid="classhdmap__utils_1_1LaneletLengthCache" kindref="compound">LaneletLengthCache</ref></type>
        <definition>LaneletLengthCache hdmap_utils::HdMapUtils::lanelet_length_cache_</definition>
        <argsstring></argsstring>
        <name>lanelet_length_cache_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="145" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhdmap__utils_1_1HdMapUtils_1a2503f7ddbdb1bc5ce0d30c7a50273ea4" prot="private" static="no" mutable="no">
        <type>lanelet::LaneletMapPtr</type>
        <definition>lanelet::LaneletMapPtr hdmap_utils::HdMapUtils::lanelet_map_ptr_</definition>
        <argsstring></argsstring>
        <name>lanelet_map_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="156" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhdmap__utils_1_1HdMapUtils_1ae59be95d1d2a3bb3256690fe519e7d06" prot="private" static="no" mutable="no">
        <type>lanelet::routing::RoutingGraphConstPtr</type>
        <definition>lanelet::routing::RoutingGraphConstPtr hdmap_utils::HdMapUtils::vehicle_routing_graph_ptr_</definition>
        <argsstring></argsstring>
        <name>vehicle_routing_graph_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="157" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhdmap__utils_1_1HdMapUtils_1ae8004d15ae917c91f7365e1b4a2f3123" prot="private" static="no" mutable="no">
        <type>lanelet::traffic_rules::TrafficRulesPtr</type>
        <definition>lanelet::traffic_rules::TrafficRulesPtr hdmap_utils::HdMapUtils::traffic_rules_vehicle_ptr_</definition>
        <argsstring></argsstring>
        <name>traffic_rules_vehicle_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="158" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhdmap__utils_1_1HdMapUtils_1a8e2edeff74482f7be543a2389ff28448" prot="private" static="no" mutable="no">
        <type>lanelet::routing::RoutingGraphConstPtr</type>
        <definition>lanelet::routing::RoutingGraphConstPtr hdmap_utils::HdMapUtils::pedestrian_routing_graph_ptr_</definition>
        <argsstring></argsstring>
        <name>pedestrian_routing_graph_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="159" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhdmap__utils_1_1HdMapUtils_1a3c3b992f745c2fd2e111c82e0b243c02" prot="private" static="no" mutable="no">
        <type>lanelet::traffic_rules::TrafficRulesPtr</type>
        <definition>lanelet::traffic_rules::TrafficRulesPtr hdmap_utils::HdMapUtils::traffic_rules_pedestrian_ptr_</definition>
        <argsstring></argsstring>
        <name>traffic_rules_pedestrian_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="160" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a15fdecdda2cf1dfad17786071f5277e0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>hdmap_utils::HdMapUtils::HdMapUtils</definition>
        <argsstring>(const boost::filesystem::path &amp;, const geographic_msgs::msg::GeoPoint &amp;)</argsstring>
        <name>HdMapUtils</name>
        <param>
          <type>const boost::filesystem::path &amp;</type>
          <defname>lanelet2_map_path</defname>
        </param>
        <param>
          <type>const geographic_msgs::msg::GeoPoint &amp;</type>
          <defname>origin</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="57" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="51" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a7e0f3b53892c0b9b7e824e307d9660bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const autoware_auto_msgs::msg::HADMapBin</type>
        <definition>const autoware_auto_msgs::msg::HADMapBin hdmap_utils::HdMapUtils::toMapBin</definition>
        <argsstring>()</argsstring>
        <name>toMapBin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="59" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="810" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a5f00f2fd1398b6a58e695f5b880a34f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hdmap_utils::HdMapUtils::insertMarkerArray</definition>
        <argsstring>(visualization_msgs::msg::MarkerArray &amp;a1, const visualization_msgs::msg::MarkerArray &amp;a2) const</argsstring>
        <name>insertMarkerArray</name>
        <param>
          <type>visualization_msgs::msg::MarkerArray &amp;</type>
          <declname>a1</declname>
        </param>
        <param>
          <type>const visualization_msgs::msg::MarkerArray &amp;</type>
          <declname>a2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="60" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="826" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a890f6e4058b9704ba7b21bf7e9ba7cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; geometry_msgs::msg::Point &gt;</type>
        <definition>std::vector&lt; geometry_msgs::msg::Point &gt; hdmap_utils::HdMapUtils::toMapPoints</definition>
        <argsstring>(std::int64_t lanelet_id, std::vector&lt; double &gt; s)</argsstring>
        <name>toMapPoints</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="63" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="715" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a662e687d18c55609cd97ca312bde6466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; openscenario_msgs::msg::LaneletPose &gt;</type>
        <definition>boost::optional&lt; openscenario_msgs::msg::LaneletPose &gt; hdmap_utils::HdMapUtils::toLaneletPose</definition>
        <argsstring>(geometry_msgs::msg::Pose pose)</argsstring>
        <name>toLaneletPose</name>
        <param>
          <type>geometry_msgs::msg::Pose</type>
          <declname>pose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="65" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="241" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a8ff28117a37d1b2c18a3d6e0e05bd44d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>geometry_msgs::msg::PoseStamped</type>
        <definition>geometry_msgs::msg::PoseStamped hdmap_utils::HdMapUtils::toMapPose</definition>
        <argsstring>(std::int64_t lanelet_id, double s, double offset, geometry_msgs::msg::Quaternion quat)</argsstring>
        <name>toMapPose</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>geometry_msgs::msg::Quaternion</type>
          <declname>quat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="67" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="726" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a71174da99952e42a5416c160e3053060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>geometry_msgs::msg::PoseStamped</type>
        <definition>geometry_msgs::msg::PoseStamped hdmap_utils::HdMapUtils::toMapPose</definition>
        <argsstring>(openscenario_msgs::msg::LaneletPose lanelet_pose)</argsstring>
        <name>toMapPose</name>
        <param>
          <type>openscenario_msgs::msg::LaneletPose</type>
          <declname>lanelet_pose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="69" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="746" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a016c6a485712b3b1fcd2f3b450bb0f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>geometry_msgs::msg::PoseStamped</type>
        <definition>geometry_msgs::msg::PoseStamped hdmap_utils::HdMapUtils::toMapPose</definition>
        <argsstring>(std::int64_t lanelet_id, double s, double offset)</argsstring>
        <name>toMapPose</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="70" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="754" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1aa35bd4e350e420693590923a23da0946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double hdmap_utils::HdMapUtils::getHeight</definition>
        <argsstring>(const openscenario_msgs::msg::LaneletPose &amp;lanelet_pose)</argsstring>
        <name>getHeight</name>
        <param>
          <type>const openscenario_msgs::msg::LaneletPose &amp;</type>
          <declname>lanelet_pose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="72" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ae4209f9e7210d321adfee8a59c8a5ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::int64_t &gt;</type>
        <definition>const std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getLaneletIds</definition>
        <argsstring>()</argsstring>
        <name>getLaneletIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="74" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="83" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a50e8fe42679f6401fa0ffbed41fea943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int64_t &gt;</type>
        <definition>std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getNextLaneletIds</definition>
        <argsstring>(std::int64_t lanelet_id, std::string turn_direction)</argsstring>
        <name>getNextLaneletIds</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>turn_direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="75" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="553" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1add27d75106d2d9aa08cd477d3740ff0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int64_t &gt;</type>
        <definition>std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getNextLaneletIds</definition>
        <argsstring>(std::int64_t lanelet_id) const</argsstring>
        <name>getNextLaneletIds</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="76" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="542" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a81086c2c4abc3542b97959ca8c99551c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int64_t &gt;</type>
        <definition>std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getPreviousLaneletIds</definition>
        <argsstring>(std::int64_t lanelet_id, std::string turn_direction)</argsstring>
        <name>getPreviousLaneletIds</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>turn_direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="77" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="527" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1acec4c5b7331fb02b4a0bda5364e5bb41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int64_t &gt;</type>
        <definition>std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getPreviousLaneletIds</definition>
        <argsstring>(std::int64_t lanelet_id) const</argsstring>
        <name>getPreviousLaneletIds</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="79" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="516" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1aa698a9e1df68695e47e37bf14b0cd15c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; int &gt;</type>
        <definition>boost::optional&lt; int &gt; hdmap_utils::HdMapUtils::getLaneChangeableLaneletId</definition>
        <argsstring>(std::int64_t lanelet_id, std::string direction)</argsstring>
        <name>getLaneChangeableLaneletId</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="80" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="298" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a68ce25f523b3d394dda32cdab779e9db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; double &gt;</type>
        <definition>boost::optional&lt; double &gt; hdmap_utils::HdMapUtils::getDistanceToStopLine</definition>
        <argsstring>(const std::vector&lt; std::int64_t &gt; &amp;route_lanelets, const std::vector&lt; geometry_msgs::msg::Point &gt; &amp;waypoints)</argsstring>
        <name>getDistanceToStopLine</name>
        <param>
          <type>const std::vector&lt; std::int64_t &gt; &amp;</type>
          <declname>route_lanelets</declname>
        </param>
        <param>
          <type>const std::vector&lt; geometry_msgs::msg::Point &gt; &amp;</type>
          <declname>waypoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="81" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1114" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a9608d3eb2763fcb19c4835a1e0967c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double hdmap_utils::HdMapUtils::getLaneletLength</definition>
        <argsstring>(std::int64_t lanelet_id)</argsstring>
        <name>getLaneletLength</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="84" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="506" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1aa63b1b12321bab453ad6e2d9cf53bd06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hdmap_utils::HdMapUtils::isInLanelet</definition>
        <argsstring>(std::int64_t lanelet_id, double s)</argsstring>
        <name>isInLanelet</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="85" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="703" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ad3c18262465e99e4b1179582afa55548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; double &gt;</type>
        <definition>boost::optional&lt; double &gt; hdmap_utils::HdMapUtils::getLongitudinalDistance</definition>
        <argsstring>(openscenario_msgs::msg::LaneletPose from, openscenario_msgs::msg::LaneletPose to)</argsstring>
        <name>getLongitudinalDistance</name>
        <param>
          <type>openscenario_msgs::msg::LaneletPose</type>
          <declname>from</declname>
        </param>
        <param>
          <type>openscenario_msgs::msg::LaneletPose</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="86" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="777" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ab19d2c04d59532fa200e770c7c34913f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; double &gt;</type>
        <definition>boost::optional&lt; double &gt; hdmap_utils::HdMapUtils::getLongitudinalDistance</definition>
        <argsstring>(std::int64_t from_lanelet_id, double from_s, std::int64_t to_lanelet_id, double to_s)</argsstring>
        <name>getLongitudinalDistance</name>
        <param>
          <type>std::int64_t</type>
          <declname>from_lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>from_s</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>to_lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>to_s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="88" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="783" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a705101d2d8e2e0a981a6fa405f3bdb89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double hdmap_utils::HdMapUtils::getSpeedLimit</definition>
        <argsstring>(std::vector&lt; std::int64_t &gt; lanelet_ids)</argsstring>
        <name>getSpeedLimit</name>
        <param>
          <type>std::vector&lt; std::int64_t &gt;</type>
          <declname>lanelet_ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="90" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="284" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a6ffad0c394dde3d4ff0a04fe415d11cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hdmap_utils::HdMapUtils::isInRoute</definition>
        <argsstring>(std::int64_t lanelet_id, std::vector&lt; std::int64_t &gt; route) const</argsstring>
        <name>isInRoute</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>std::vector&lt; std::int64_t &gt;</type>
          <declname>route</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="91" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="344" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1aba130625102cc0edf6ba616ced61d759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int64_t &gt;</type>
        <definition>std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getFollowingLanelets</definition>
        <argsstring>(std::int64_t lanelet_id, double distance=100, bool include_self=true)</argsstring>
        <name>getFollowingLanelets</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>distance</declname>
          <defval>100</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>include_self</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="92" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="391" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ab206fd5dc3b72d3c571999eb7f49a50b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int64_t &gt;</type>
        <definition>std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getFollowingLanelets</definition>
        <argsstring>(std::int64_t lanelet_id, std::vector&lt; std::int64_t &gt; candidate_lanelet_ids, double distance=100, bool include_self=true)</argsstring>
        <name>getFollowingLanelets</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>std::vector&lt; std::int64_t &gt;</type>
          <declname>candidate_lanelet_ids</declname>
        </param>
        <param>
          <type>double</type>
          <declname>distance</declname>
          <defval>100</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>include_self</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="94" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="354" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1afc73f75893fe3a4d181e971f23401c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int64_t &gt;</type>
        <definition>std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getPreviousLanelets</definition>
        <argsstring>(std::int64_t lanelet_id, double distance=100)</argsstring>
        <name>getPreviousLanelets</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>distance</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="97" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="317" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a880579321ca7cb649cbd8b416b61bf5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; geometry_msgs::msg::Point &gt;</type>
        <definition>std::vector&lt; geometry_msgs::msg::Point &gt; hdmap_utils::HdMapUtils::getCenterPoints</definition>
        <argsstring>(std::int64_t lanelet_id)</argsstring>
        <name>getCenterPoints</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="98" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="468" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ad0c632adb1d18b094e96648a8d80542e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; geometry_msgs::msg::Point &gt;</type>
        <definition>std::vector&lt; geometry_msgs::msg::Point &gt; hdmap_utils::HdMapUtils::getCenterPoints</definition>
        <argsstring>(std::vector&lt; std::int64_t &gt; lanelet_ids)</argsstring>
        <name>getCenterPoints</name>
        <param>
          <type>std::vector&lt; std::int64_t &gt;</type>
          <declname>lanelet_ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="99" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="454" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a4dbcc69645f97b4964942bcfbdfc8c1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classtraffic__simulator_1_1math_1_1CatmullRomSpline" kindref="compound">traffic_simulator::math::CatmullRomSpline</ref> &gt;</type>
        <definition>std::shared_ptr&lt; traffic_simulator::math::CatmullRomSpline &gt; hdmap_utils::HdMapUtils::getCenterPointsSpline</definition>
        <argsstring>(std::int64_t lanelet_id)</argsstring>
        <name>getCenterPointsSpline</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="100" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="447" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a40fa24534a3a21637640c40571509441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; geometry_msgs::msg::Point &gt;</type>
        <definition>std::vector&lt; geometry_msgs::msg::Point &gt; hdmap_utils::HdMapUtils::clipTrajectoryFromLaneletIds</definition>
        <argsstring>(std::int64_t lanelet_id, double s, std::vector&lt; std::int64_t &gt; lanelet_ids, double forward_distance=20)</argsstring>
        <name>clipTrajectoryFromLaneletIds</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::vector&lt; std::int64_t &gt;</type>
          <declname>lanelet_ids</declname>
        </param>
        <param>
          <type>double</type>
          <declname>forward_distance</declname>
          <defval>20</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="102" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="181" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a74e7d1c4fbf11b9f8949f40a982aae10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool hdmap_utils::HdMapUtils::canChangeLane</definition>
        <argsstring>(std::int64_t from_lanelet_id, std::int64_t to_lanelet_id)</argsstring>
        <name>canChangeLane</name>
        <param>
          <type>std::int64_t</type>
          <declname>from_lanelet_id</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>to_lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="105" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="770" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a64f95a8e12bd8e471ffbcaf380501ad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; std::pair&lt; <ref refid="classtraffic__simulator_1_1math_1_1HermiteCurve" kindref="compound">traffic_simulator::math::HermiteCurve</ref>, double &gt; &gt;</type>
        <definition>boost::optional&lt; std::pair&lt; traffic_simulator::math::HermiteCurve, double &gt; &gt; hdmap_utils::HdMapUtils::getLaneChangeTrajectory</definition>
        <argsstring>(geometry_msgs::msg::Pose from_pose, std::int64_t to_lanelet_id, double maximum_curvature_threshold, double target_trajectory_length, double forward_distance_threashold)</argsstring>
        <name>getLaneChangeTrajectory</name>
        <param>
          <type>geometry_msgs::msg::Pose</type>
          <declname>from_pose</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>to_lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maximum_curvature_threshold</declname>
        </param>
        <param>
          <type>double</type>
          <declname>target_trajectory_length</declname>
        </param>
        <param>
          <type>double</type>
          <declname>forward_distance_threashold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="106" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="639" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1acc87ede109f43af450d07e3876cc21b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtraffic__simulator_1_1math_1_1HermiteCurve" kindref="compound">traffic_simulator::math::HermiteCurve</ref></type>
        <definition>traffic_simulator::math::HermiteCurve hdmap_utils::HdMapUtils::getLaneChangeTrajectory</definition>
        <argsstring>(geometry_msgs::msg::Pose from_pose, std::int64_t to_lanelet_id, double to_s, double tangent_vector_size=100)</argsstring>
        <name>getLaneChangeTrajectory</name>
        <param>
          <type>geometry_msgs::msg::Pose</type>
          <declname>from_pose</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>to_lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>to_s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tangent_vector_size</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="110" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="675" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1af90ae8bff96aeaf305348487ad3a9d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; geometry_msgs::msg::Vector3 &gt;</type>
        <definition>boost::optional&lt; geometry_msgs::msg::Vector3 &gt; hdmap_utils::HdMapUtils::getTangentVector</definition>
        <argsstring>(std::int64_t lanelet_id, double s)</argsstring>
        <name>getTangentVector</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="113" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="764" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1aaec29af041148541c5de5ae0cfcba494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int64_t &gt;</type>
        <definition>std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getRoute</definition>
        <argsstring>(std::int64_t from_lanelet_id, std::int64_t to_lanelet_id)</argsstring>
        <name>getRoute</name>
        <param>
          <type>std::int64_t</type>
          <declname>from_lanelet_id</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>to_lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="114" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="420" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a388da431962ae88547ca753eac42054f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::int64_t &gt;</type>
        <definition>std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getConflictingCrosswalkIds</definition>
        <argsstring>(std::vector&lt; std::int64_t &gt; lanelet_ids) const</argsstring>
        <name>getConflictingCrosswalkIds</name>
        <param>
          <type>std::vector&lt; std::int64_t &gt;</type>
          <declname>lanelet_ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="115" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="160" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ab807c4fe26355728beed8222132189b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; double &gt;</type>
        <definition>boost::optional&lt; double &gt; hdmap_utils::HdMapUtils::getCollisionPointInLaneCoordinate</definition>
        <argsstring>(std::int64_t lanelet_id, std::int64_t crossing_lanelet_id)</argsstring>
        <name>getCollisionPointInLaneCoordinate</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <param>
          <type>std::int64_t</type>
          <declname>crossing_lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="116" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="112" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1abcbb3443e352b352773e08f3b8d9db73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const visualization_msgs::msg::MarkerArray</type>
        <definition>const visualization_msgs::msg::MarkerArray hdmap_utils::HdMapUtils::generateMarker</definition>
        <argsstring>() const</argsstring>
        <name>generateMarker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="118" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="832" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1af2dd81ca4051851c81494bfbe08fed8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::int64_t &gt;</type>
        <definition>const std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getRightOfWayLaneletIds</definition>
        <argsstring>(std::int64_t lanelet_id) const</argsstring>
        <name>getRightOfWayLaneletIds</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="119" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="940" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a2f2091800f6dba7990eb819a46a8d457" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::unordered_map&lt; std::int64_t, std::vector&lt; std::int64_t &gt; &gt;</type>
        <definition>const std::unordered_map&lt; std::int64_t, std::vector&lt; std::int64_t &gt; &gt; hdmap_utils::HdMapUtils::getRightOfWayLaneletIds</definition>
        <argsstring>(std::vector&lt; std::int64_t &gt; lanelet_ids) const</argsstring>
        <name>getRightOfWayLaneletIds</name>
        <param>
          <type>std::vector&lt; std::int64_t &gt;</type>
          <declname>lanelet_ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="120" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="931" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a53cfc778f9d76d81fdebd66b17e80290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::optional&lt; std::int64_t &gt;</type>
        <definition>boost::optional&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getClosetLaneletId</definition>
        <argsstring>(geometry_msgs::msg::Pose pose, double distance_thresh=30.0)</argsstring>
        <name>getClosetLaneletId</name>
        <param>
          <type>geometry_msgs::msg::Pose</type>
          <declname>pose</declname>
        </param>
        <param>
          <type>double</type>
          <declname>distance_thresh</declname>
          <defval>30.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="122" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="265" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1aa73ca234cb0979f1c113624508395823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; geometry_msgs::msg::Point &gt;</type>
        <definition>const std::vector&lt; geometry_msgs::msg::Point &gt; hdmap_utils::HdMapUtils::getLaneletPolygon</definition>
        <argsstring>(std::int64_t lanelet_id)</argsstring>
        <name>getLaneletPolygon</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="124" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="92" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a71203a3037207afec9c31fc70c0ec5a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; geometry_msgs::msg::Point &gt;</type>
        <definition>const std::vector&lt; geometry_msgs::msg::Point &gt; hdmap_utils::HdMapUtils::getStopLinePolygon</definition>
        <argsstring>(std::int64_t lanelet_id)</argsstring>
        <name>getStopLinePolygon</name>
        <param>
          <type>std::int64_t</type>
          <declname>lanelet_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="125" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1045" bodyend="1057"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a57108c20cc4accbcac79bdaf07f5ece5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::int64_t &gt;</type>
        <definition>const std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getTrafficLightIds</definition>
        <argsstring>() const</argsstring>
        <name>getTrafficLightIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="126" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="568" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ad21294b308f008386bedd52d181b0950" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::optional&lt; geometry_msgs::msg::Point &gt;</type>
        <definition>const boost::optional&lt; geometry_msgs::msg::Point &gt; hdmap_utils::HdMapUtils::getTrafficLightBulbPosition</definition>
        <argsstring>(std::int64_t traffic_light_id, traffic_simulator::TrafficLightColor color) const</argsstring>
        <name>getTrafficLightBulbPosition</name>
        <param>
          <type>std::int64_t</type>
          <declname>traffic_light_id</declname>
        </param>
        <param>
          <type>traffic_simulator::TrafficLightColor</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="127" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="586" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a7589fc716703486baea9339d3d346866" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::optional&lt; std::int64_t &gt;</type>
        <definition>const boost::optional&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getTrafficLightStopLineId</definition>
        <argsstring>(const std::int64_t &amp;traffic_light_id) const</argsstring>
        <name>getTrafficLightStopLineId</name>
        <param>
          <type>const std::int64_t &amp;</type>
          <declname>traffic_light_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="129" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1017" bodyend="1025"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a2efceb7ba7e507433e2b8fd63a2fecb6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; geometry_msgs::msg::Point &gt;</type>
        <definition>const std::vector&lt; geometry_msgs::msg::Point &gt; hdmap_utils::HdMapUtils::getTrafficLightStopLinePoints</definition>
        <argsstring>(std::int64_t traffic_light_id) const</argsstring>
        <name>getTrafficLightStopLinePoints</name>
        <param>
          <type>std::int64_t</type>
          <declname>traffic_light_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="131" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1027" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a1d42a9ddfa338ba463ef8e37b7ed764e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::optional&lt; double &gt;</type>
        <definition>const boost::optional&lt; double &gt; hdmap_utils::HdMapUtils::getDistanceToTrafficLightStopLine</definition>
        <argsstring>(const std::vector&lt; geometry_msgs::msg::Point &gt; &amp;waypoints, const std::int64_t &amp;traffic_light_id) const</argsstring>
        <name>getDistanceToTrafficLightStopLine</name>
        <param>
          <type>const std::vector&lt; geometry_msgs::msg::Point &gt; &amp;</type>
          <declname>waypoints</declname>
        </param>
        <param>
          <type>const std::int64_t &amp;</type>
          <declname>traffic_light_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="133" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1098" bodyend="1112"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a35c16298c33b23f0ddb4e17952f4522d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const boost::optional&lt; double &gt;</type>
        <definition>const boost::optional&lt; double &gt; hdmap_utils::HdMapUtils::getDistanceToTrafficLightStopLine</definition>
        <argsstring>(const std::vector&lt; std::int64_t &gt; &amp;route_lanelets, const std::vector&lt; geometry_msgs::msg::Point &gt; &amp;waypoints) const</argsstring>
        <name>getDistanceToTrafficLightStopLine</name>
        <param>
          <type>const std::vector&lt; std::int64_t &gt; &amp;</type>
          <declname>route_lanelets</declname>
        </param>
        <param>
          <type>const std::vector&lt; geometry_msgs::msg::Point &gt; &amp;</type>
          <declname>waypoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="136" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1077" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a28b40fdb07396f56007602f350e14fc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::int64_t &gt;</type>
        <definition>const std::vector&lt; std::int64_t &gt; hdmap_utils::HdMapUtils::getTrafficLightIdsOnPath</definition>
        <argsstring>(const std::vector&lt; std::int64_t &gt; &amp;route_lanelets) const</argsstring>
        <name>getTrafficLightIdsOnPath</name>
        <param>
          <type>const std::vector&lt; std::int64_t &gt; &amp;</type>
          <declname>route_lanelets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="139" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1059" bodyend="1075"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1adc98cc60a7f3a2064c86f8114bac05c1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>lanelet::AutowareTrafficLightConstPtr</type>
        <definition>lanelet::AutowareTrafficLightConstPtr hdmap_utils::HdMapUtils::getTrafficLight</definition>
        <argsstring>(const std::int64_t traffic_light_id) const</argsstring>
        <name>getTrafficLight</name>
        <param>
          <type>const std::int64_t</type>
          <declname>traffic_light_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="146" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="999" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a43d8ccd6702d631c1172f1cbc824194a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; double, lanelet::Lanelet &gt; &gt;</type>
        <definition>std::vector&lt; std::pair&lt; double, lanelet::Lanelet &gt; &gt; hdmap_utils::HdMapUtils::excludeSubtypeLaneletsWithDistance</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; double, lanelet::Lanelet &gt;&gt; &amp;lls, const char subtype[])</argsstring>
        <name>excludeSubtypeLaneletsWithDistance</name>
        <param>
          <type>const std::vector&lt; std::pair&lt; double, lanelet::Lanelet &gt;&gt; &amp;</type>
          <declname>lls</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>subtype</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="147" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="226" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ae55996fd36eadf015644f947a2d25823" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; const lanelet::autoware::AutowareTrafficLight &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; const lanelet::autoware::AutowareTrafficLight &gt; &gt; hdmap_utils::HdMapUtils::getTrafficLightRegElementsOnPath</definition>
        <argsstring>(const std::vector&lt; std::int64_t &gt; &amp;lanelet_ids) const</argsstring>
        <name>getTrafficLightRegElementsOnPath</name>
        <param>
          <type>const std::vector&lt; std::int64_t &gt; &amp;</type>
          <declname>lanelet_ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="150" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="969" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ac84592a96434afe9ecce35c18908ed72" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; const lanelet::TrafficSign &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt; const lanelet::TrafficSign &gt; &gt; hdmap_utils::HdMapUtils::getTrafficSignRegElementsOnPath</definition>
        <argsstring>(std::vector&lt; std::int64_t &gt; lanelet_ids)</argsstring>
        <name>getTrafficSignRegElementsOnPath</name>
        <param>
          <type>std::vector&lt; std::int64_t &gt;</type>
          <declname>lanelet_ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="151" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="955" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a36469111d528986618e019c77891047a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; lanelet::ConstLineString3d &gt;</type>
        <definition>std::vector&lt; lanelet::ConstLineString3d &gt; hdmap_utils::HdMapUtils::getStopLinesOnPath</definition>
        <argsstring>(std::vector&lt; std::int64_t &gt; lanelet_ids)</argsstring>
        <name>getStopLinesOnPath</name>
        <param>
          <type>std::vector&lt; std::int64_t &gt;</type>
          <declname>lanelet_ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="153" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="983" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a3b35657ec2cb8f2e6f98a0542718a3f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>geometry_msgs::msg::Vector3</type>
        <definition>geometry_msgs::msg::Vector3 hdmap_utils::HdMapUtils::getVectorFromPose</definition>
        <argsstring>(geometry_msgs::msg::Pose pose, double magnitude)</argsstring>
        <name>getVectorFromPose</name>
        <param>
          <type>geometry_msgs::msg::Pose</type>
          <declname>pose</declname>
        </param>
        <param>
          <type>double</type>
          <declname>magnitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="154" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="691" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a2cf12c782d0309d681629821db425a76" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hdmap_utils::HdMapUtils::mapCallback</definition>
        <argsstring>(const autoware_auto_msgs::msg::HADMapBin &amp;msg)</argsstring>
        <name>mapCallback</name>
        <param>
          <type>const autoware_auto_msgs::msg::HADMapBin &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1aed565e092ba4578b2e3c537740583399" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; hdmap_utils::HdMapUtils::calcEuclidDist</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;x, const std::vector&lt; double &gt; &amp;y, const std::vector&lt; double &gt; &amp;z)</argsstring>
        <name>calcEuclidDist</name>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="161" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1235" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1a28a06784d8b820437dcbac7e665b6561" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hdmap_utils::HdMapUtils::overwriteLaneletsCenterline</definition>
        <argsstring>()</argsstring>
        <name>overwriteLaneletsCenterline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="163" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="893" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ae226d6ae5e49da337e1e953d14711301" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lanelet::LineString3d</type>
        <definition>lanelet::LineString3d hdmap_utils::HdMapUtils::generateFineCenterline</definition>
        <argsstring>(const lanelet::ConstLanelet &amp;lanelet_obj, const double resolution)</argsstring>
        <name>generateFineCenterline</name>
        <param>
          <type>const lanelet::ConstLanelet &amp;</type>
          <declname>lanelet_obj</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="164" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1206" bodyend="1233"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1aa474212785de0bde2e3def3d6227f4d8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; lanelet::BasicPoint3d &gt;</type>
        <definition>std::vector&lt; lanelet::BasicPoint3d &gt; hdmap_utils::HdMapUtils::resamplePoints</definition>
        <argsstring>(const lanelet::ConstLineString3d &amp;line_string, const int32_t num_segments)</argsstring>
        <name>resamplePoints</name>
        <param>
          <type>const lanelet::ConstLineString3d &amp;</type>
          <declname>line_string</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>num_segments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="166" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1172" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ace6c6549dab73fb6f8638d3ffecbe297" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; size_t, size_t &gt;</type>
        <definition>std::pair&lt; size_t, size_t &gt; hdmap_utils::HdMapUtils::findNearestIndexPair</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;accumulated_lengths, const double target_length)</argsstring>
        <name>findNearestIndexPair</name>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>accumulated_lengths</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>target_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="168" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="903" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1ac55345f3c4e73884fcd56af3b9b42050" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; hdmap_utils::HdMapUtils::calculateAccumulatedLengths</definition>
        <argsstring>(const lanelet::ConstLineString3d &amp;line_string)</argsstring>
        <name>calculateAccumulatedLengths</name>
        <param>
          <type>const lanelet::ConstLineString3d &amp;</type>
          <declname>line_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="170" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1159" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="classhdmap__utils_1_1HdMapUtils_1aacdd04f3efb1e4324b7c0822d4cebb17" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; hdmap_utils::HdMapUtils::calculateSegmentDistances</definition>
        <argsstring>(const lanelet::ConstLineString3d &amp;line_string)</argsstring>
        <name>calculateSegmentDistances</name>
        <param>
          <type>const lanelet::ConstLineString3d &amp;</type>
          <declname>line_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="171" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/hdmap_utils/hdmap_utils.cpp" bodystart="1147" bodyend="1157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" line="55" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/include/traffic_simulator/hdmap_utils/hdmap_utils.hpp" bodystart="54" bodyend="172"/>
    <listofallmembers>
      <member refid="classhdmap__utils_1_1HdMapUtils_1aed565e092ba4578b2e3c537740583399" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>calcEuclidDist</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ac55345f3c4e73884fcd56af3b9b42050" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>calculateAccumulatedLengths</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1aacdd04f3efb1e4324b7c0822d4cebb17" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>calculateSegmentDistances</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a74e7d1c4fbf11b9f8949f40a982aae10" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>canChangeLane</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1abb0c71208be35b5fa7fb8d15b6df8765" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>center_points_cache_</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a40fa24534a3a21637640c40571509441" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>clipTrajectoryFromLaneletIds</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a43d8ccd6702d631c1172f1cbc824194a" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>excludeSubtypeLaneletsWithDistance</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ace6c6549dab73fb6f8638d3ffecbe297" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>findNearestIndexPair</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ae226d6ae5e49da337e1e953d14711301" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>generateFineCenterline</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1abcbb3443e352b352773e08f3b8d9db73" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>generateMarker</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a880579321ca7cb649cbd8b416b61bf5a" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getCenterPoints</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ad0c632adb1d18b094e96648a8d80542e" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getCenterPoints</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a4dbcc69645f97b4964942bcfbdfc8c1d" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getCenterPointsSpline</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a53cfc778f9d76d81fdebd66b17e80290" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getClosetLaneletId</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ab807c4fe26355728beed8222132189b4" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getCollisionPointInLaneCoordinate</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a388da431962ae88547ca753eac42054f" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getConflictingCrosswalkIds</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a68ce25f523b3d394dda32cdab779e9db" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getDistanceToStopLine</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a1d42a9ddfa338ba463ef8e37b7ed764e" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getDistanceToTrafficLightStopLine</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a35c16298c33b23f0ddb4e17952f4522d" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getDistanceToTrafficLightStopLine</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1aba130625102cc0edf6ba616ced61d759" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getFollowingLanelets</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ab206fd5dc3b72d3c571999eb7f49a50b" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getFollowingLanelets</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1aa35bd4e350e420693590923a23da0946" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getHeight</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1aa698a9e1df68695e47e37bf14b0cd15c" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getLaneChangeableLaneletId</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a64f95a8e12bd8e471ffbcaf380501ad5" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getLaneChangeTrajectory</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1acc87ede109f43af450d07e3876cc21b2" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getLaneChangeTrajectory</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ae4209f9e7210d321adfee8a59c8a5ee9" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getLaneletIds</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a9608d3eb2763fcb19c4835a1e0967c42" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getLaneletLength</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1aa73ca234cb0979f1c113624508395823" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getLaneletPolygon</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ad3c18262465e99e4b1179582afa55548" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getLongitudinalDistance</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ab19d2c04d59532fa200e770c7c34913f" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getLongitudinalDistance</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a50e8fe42679f6401fa0ffbed41fea943" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getNextLaneletIds</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1add27d75106d2d9aa08cd477d3740ff0c" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getNextLaneletIds</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a81086c2c4abc3542b97959ca8c99551c" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getPreviousLaneletIds</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1acec4c5b7331fb02b4a0bda5364e5bb41" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getPreviousLaneletIds</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1afc73f75893fe3a4d181e971f23401c86" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getPreviousLanelets</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1af2dd81ca4051851c81494bfbe08fed8d" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getRightOfWayLaneletIds</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a2f2091800f6dba7990eb819a46a8d457" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getRightOfWayLaneletIds</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1aaec29af041148541c5de5ae0cfcba494" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getRoute</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a705101d2d8e2e0a981a6fa405f3bdb89" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getSpeedLimit</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a71203a3037207afec9c31fc70c0ec5a3" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getStopLinePolygon</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a36469111d528986618e019c77891047a" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getStopLinesOnPath</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1af90ae8bff96aeaf305348487ad3a9d79" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getTangentVector</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1adc98cc60a7f3a2064c86f8114bac05c1" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getTrafficLight</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ad21294b308f008386bedd52d181b0950" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getTrafficLightBulbPosition</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a57108c20cc4accbcac79bdaf07f5ece5" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getTrafficLightIds</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a28b40fdb07396f56007602f350e14fc5" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getTrafficLightIdsOnPath</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ae55996fd36eadf015644f947a2d25823" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getTrafficLightRegElementsOnPath</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a7589fc716703486baea9339d3d346866" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getTrafficLightStopLineId</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a2efceb7ba7e507433e2b8fd63a2fecb6" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getTrafficLightStopLinePoints</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ac84592a96434afe9ecce35c18908ed72" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getTrafficSignRegElementsOnPath</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a3b35657ec2cb8f2e6f98a0542718a3f1" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>getVectorFromPose</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a15fdecdda2cf1dfad17786071f5277e0" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>HdMapUtils</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a5f00f2fd1398b6a58e695f5b880a34f6" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>insertMarkerArray</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1aa63b1b12321bab453ad6e2d9cf53bd06" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>isInLanelet</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a6ffad0c394dde3d4ff0a04fe415d11cf" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>isInRoute</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a9d2e7b27304e9c3238b5fd73740d0039" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>lanelet_length_cache_</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a2503f7ddbdb1bc5ce0d30c7a50273ea4" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>lanelet_map_ptr_</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a2cf12c782d0309d681629821db425a76" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>mapCallback</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a28a06784d8b820437dcbac7e665b6561" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>overwriteLaneletsCenterline</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a8e2edeff74482f7be543a2389ff28448" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>pedestrian_routing_graph_ptr_</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1aa474212785de0bde2e3def3d6227f4d8" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>resamplePoints</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a2e5ae92a0e8c601dd9873facccf8991e" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>route_cache_</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a662e687d18c55609cd97ca312bde6466" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>toLaneletPose</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a7e0f3b53892c0b9b7e824e307d9660bc" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>toMapBin</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a890f6e4058b9704ba7b21bf7e9ba7cfe" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>toMapPoints</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a8ff28117a37d1b2c18a3d6e0e05bd44d" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>toMapPose</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a71174da99952e42a5416c160e3053060" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>toMapPose</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a016c6a485712b3b1fcd2f3b450bb0f97" prot="public" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>toMapPose</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1a3c3b992f745c2fd2e111c82e0b243c02" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>traffic_rules_pedestrian_ptr_</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ae8004d15ae917c91f7365e1b4a2f3123" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>traffic_rules_vehicle_ptr_</name></member>
      <member refid="classhdmap__utils_1_1HdMapUtils_1ae59be95d1d2a3bb3256690fe519e7d06" prot="private" virt="non-virtual"><scope>hdmap_utils::HdMapUtils</scope><name>vehicle_routing_graph_ptr_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
