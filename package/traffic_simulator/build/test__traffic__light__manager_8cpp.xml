<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="test__traffic__light__manager_8cpp" kind="file" language="C++">
    <compoundname>test_traffic_light_manager.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes local="no">ament_index_cpp/get_package_share_directory.hpp</includes>
    <includes local="no">scenario_simulator_exception/exception.hpp</includes>
    <includes refid="traffic__light__manager_8hpp" local="no">traffic_simulator/traffic_lights/traffic_light_manager.hpp</includes>
    <incdepgraph>
      <node id="7434">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="7478">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
        <link refid="traffic__light__state_8hpp_source"/>
        <childnode refid="7479" relation="include">
        </childnode>
        <childnode refid="7480" relation="include">
        </childnode>
        <childnode refid="7440" relation="include">
        </childnode>
      </node>
      <node id="7437">
        <label>iomanip</label>
      </node>
      <node id="7484">
        <label>limits</label>
      </node>
      <node id="7459">
        <label>geometry_msgs/msg/pose_stamped.hpp</label>
      </node>
      <node id="7488">
        <label>std_msgs/msg/color_rgba.hpp</label>
      </node>
      <node id="7458">
        <label>geographic_msgs/msg/geo_point.hpp</label>
      </node>
      <node id="7450">
        <label>lanelet2_routing/RoutingGraph.h</label>
      </node>
      <node id="7489">
        <label>traffic_simulator/traffic_lights/traffic_light_phase.hpp</label>
        <link refid="traffic__light__phase_8hpp_source"/>
        <childnode refid="7484" relation="include">
        </childnode>
        <childnode refid="7434" relation="include">
        </childnode>
        <childnode refid="7442" relation="include">
        </childnode>
        <childnode refid="7476" relation="include">
        </childnode>
        <childnode refid="7475" relation="include">
        </childnode>
      </node>
      <node id="7445">
        <label>lanelet2_core/geometry/Lanelet.h</label>
      </node>
      <node id="7436">
        <label>autoware_perception_msgs/msg/traffic_light_state_array.hpp</label>
      </node>
      <node id="7464">
        <label>openscenario_msgs/msg/entity_status.hpp</label>
      </node>
      <node id="7479">
        <label>autoware_perception_msgs/msg/lamp_state.hpp</label>
      </node>
      <node id="7472">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="7486">
        <label>cassert</label>
      </node>
      <node id="7440">
        <label>stdexcept</label>
      </node>
      <node id="7441">
        <label>string</label>
      </node>
      <node id="7462">
        <label>lanelet2_extension_psim/utility/utilities.hpp</label>
      </node>
      <node id="7465">
        <label>traffic_simulator/hdmap_utils/cache.hpp</label>
        <link refid="cache_8hpp_source"/>
        <childnode refid="7457" relation="include">
        </childnode>
        <childnode refid="7466" relation="include">
        </childnode>
        <childnode refid="7467" relation="include">
        </childnode>
        <childnode refid="7434" relation="include">
        </childnode>
        <childnode refid="7468" relation="include">
        </childnode>
        <childnode refid="7477" relation="include">
        </childnode>
        <childnode refid="7475" relation="include">
        </childnode>
      </node>
      <node id="7463">
        <label>map</label>
      </node>
      <node id="7470">
        <label>traffic_simulator/math/hermite_curve.hpp</label>
        <link refid="hermite__curve_8hpp_source"/>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7471" relation="include">
        </childnode>
        <childnode refid="7457" relation="include">
        </childnode>
        <childnode refid="7466" relation="include">
        </childnode>
        <childnode refid="7472" relation="include">
        </childnode>
        <childnode refid="7473" relation="include">
        </childnode>
        <childnode refid="7474" relation="include">
        </childnode>
        <childnode refid="7475" relation="include">
        </childnode>
      </node>
      <node id="7485">
        <label>traffic_simulator/color_utils/color_utils.hpp</label>
        <link refid="color__utils_8hpp_source"/>
        <childnode refid="7486" relation="include">
        </childnode>
        <childnode refid="7487" relation="include">
        </childnode>
        <childnode refid="7463" relation="include">
        </childnode>
        <childnode refid="7488" relation="include">
        </childnode>
        <childnode refid="7441" relation="include">
        </childnode>
      </node>
      <node id="7439">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="7449">
        <label>lanelet2_routing/RoutingCost.h</label>
      </node>
      <node id="7454">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="7442">
        <label>traffic_simulator/hdmap_utils/hdmap_utils.hpp</label>
        <link refid="hdmap__utils_8hpp_source"/>
        <childnode refid="7443" relation="include">
        </childnode>
        <childnode refid="7444" relation="include">
        </childnode>
        <childnode refid="7445" relation="include">
        </childnode>
        <childnode refid="7446" relation="include">
        </childnode>
        <childnode refid="7447" relation="include">
        </childnode>
        <childnode refid="7448" relation="include">
        </childnode>
        <childnode refid="7449" relation="include">
        </childnode>
        <childnode refid="7450" relation="include">
        </childnode>
        <childnode refid="7451" relation="include">
        </childnode>
        <childnode refid="7452" relation="include">
        </childnode>
        <childnode refid="7453" relation="include">
        </childnode>
        <childnode refid="7454" relation="include">
        </childnode>
        <childnode refid="7455" relation="include">
        </childnode>
        <childnode refid="7456" relation="include">
        </childnode>
        <childnode refid="7457" relation="include">
        </childnode>
        <childnode refid="7458" relation="include">
        </childnode>
        <childnode refid="7459" relation="include">
        </childnode>
        <childnode refid="7460" relation="include">
        </childnode>
        <childnode refid="7461" relation="include">
        </childnode>
        <childnode refid="7462" relation="include">
        </childnode>
        <childnode refid="7463" relation="include">
        </childnode>
        <childnode refid="7438" relation="include">
        </childnode>
        <childnode refid="7464" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7441" relation="include">
        </childnode>
        <childnode refid="7465" relation="include">
        </childnode>
        <childnode refid="7470" relation="include">
        </childnode>
        <childnode refid="7478" relation="include">
        </childnode>
        <childnode refid="7477" relation="include">
        </childnode>
        <childnode refid="7476" relation="include">
        </childnode>
        <childnode refid="7475" relation="include">
        </childnode>
        <childnode refid="7481" relation="include">
        </childnode>
      </node>
      <node id="7469">
        <label>exception</label>
      </node>
      <node id="7431">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/traffic_lights/test_traffic_light_manager.cpp</label>
        <link refid="test__traffic__light__manager_8cpp"/>
        <childnode refid="7432" relation="include">
        </childnode>
        <childnode refid="7433" relation="include">
        </childnode>
        <childnode refid="7434" relation="include">
        </childnode>
        <childnode refid="7435" relation="include">
        </childnode>
      </node>
      <node id="7443">
        <label>geometry_msgs/msg/vector3.h</label>
      </node>
      <node id="7473">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="7483">
        <label>autoware_perception_msgs/msg/traffic_light_state.hpp</label>
      </node>
      <node id="7448">
        <label>lanelet2_routing/Route.h</label>
      </node>
      <node id="7461">
        <label>lanelet2_extension_psim/utility/query.hpp</label>
      </node>
      <node id="7471">
        <label>quaternion_operation/quaternion_operation.h</label>
      </node>
      <node id="7460">
        <label>lanelet2_extension_psim/utility/message_conversion.hpp</label>
      </node>
      <node id="7466">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="7433">
        <label>ament_index_cpp/get_package_share_directory.hpp</label>
      </node>
      <node id="7487">
        <label>cstdio</label>
      </node>
      <node id="7475">
        <label>vector</label>
      </node>
      <node id="7456">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="7432">
        <label>gtest/gtest.h</label>
      </node>
      <node id="7476">
        <label>utility</label>
      </node>
      <node id="7474">
        <label>traffic_simulator/math/polynomial_solver.hpp</label>
        <link refid="polynomial__solver_8hpp_source"/>
        <childnode refid="7475" relation="include">
        </childnode>
      </node>
      <node id="7452">
        <label>lanelet2_traffic_rules/TrafficRulesFactory.h</label>
      </node>
      <node id="7468">
        <label>traffic_simulator/math/catmull_rom_spline.hpp</label>
        <link refid="catmull__rom__spline_8hpp_source"/>
        <childnode refid="7469" relation="include">
        </childnode>
        <childnode refid="7466" relation="include">
        </childnode>
        <childnode refid="7441" relation="include">
        </childnode>
        <childnode refid="7470" relation="include">
        </childnode>
        <childnode refid="7476" relation="include">
        </childnode>
        <childnode refid="7475" relation="include">
        </childnode>
      </node>
      <node id="7447">
        <label>lanelet2_core/primitives/LaneletSequence.h</label>
      </node>
      <node id="7480">
        <label>iostream</label>
      </node>
      <node id="7444">
        <label>lanelet2_core/LaneletMap.h</label>
      </node>
      <node id="7482">
        <label>traffic_simulator/traffic_lights/traffic_light.hpp</label>
        <link refid="traffic__light_8hpp_source"/>
        <childnode refid="7483" relation="include">
        </childnode>
        <childnode refid="7480" relation="include">
        </childnode>
        <childnode refid="7484" relation="include">
        </childnode>
        <childnode refid="7440" relation="include">
        </childnode>
        <childnode refid="7485" relation="include">
        </childnode>
        <childnode refid="7489" relation="include">
        </childnode>
        <childnode refid="7478" relation="include">
        </childnode>
        <childnode refid="7477" relation="include">
        </childnode>
        <childnode refid="7476" relation="include">
        </childnode>
        <childnode refid="7475" relation="include">
        </childnode>
      </node>
      <node id="7477">
        <label>unordered_map</label>
      </node>
      <node id="7435">
        <label>traffic_simulator/traffic_lights/traffic_light_manager.hpp</label>
        <link refid="traffic__light__manager_8hpp_source"/>
        <childnode refid="7436" relation="include">
        </childnode>
        <childnode refid="7437" relation="include">
        </childnode>
        <childnode refid="7438" relation="include">
        </childnode>
        <childnode refid="7439" relation="include">
        </childnode>
        <childnode refid="7440" relation="include">
        </childnode>
        <childnode refid="7441" relation="include">
        </childnode>
        <childnode refid="7442" relation="include">
        </childnode>
        <childnode refid="7482" relation="include">
        </childnode>
        <childnode refid="7477" relation="include">
        </childnode>
        <childnode refid="7476" relation="include">
        </childnode>
        <childnode refid="7475" relation="include">
        </childnode>
        <childnode refid="7481" relation="include">
        </childnode>
      </node>
      <node id="7455">
        <label>autoware_auto_msgs/msg/had_map_bin.hpp</label>
      </node>
      <node id="7481">
        <label>visualization_msgs/msg/marker_array.hpp</label>
      </node>
      <node id="7467">
        <label>mutex</label>
      </node>
      <node id="7446">
        <label>lanelet2_core/primitives/BasicRegulatoryElements.h</label>
      </node>
      <node id="7451">
        <label>lanelet2_routing/RoutingGraphContainer.h</label>
      </node>
      <node id="7457">
        <label>boost/optional.hpp</label>
      </node>
      <node id="7453">
        <label>tf2/LinearMath/Matrix3x3.h</label>
      </node>
      <node id="7438">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__traffic__light__manager_8cpp_1ab1c5272980a8ab4e4c37692f19a3e654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(TrafficLightManager, getIds)</argsstring>
        <name>TEST</name>
        <param>
          <type>TrafficLightManager</type>
        </param>
        <param>
          <type>getIds</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/traffic_lights/test_traffic_light_manager.cpp" line="21" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/traffic_lights/test_traffic_light_manager.cpp" bodystart="21" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="test__traffic__light__manager_8cpp_1a6ae8359d5bf4716921ec532a13a38b37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(TrafficLightManager, setColor)</argsstring>
        <name>TEST</name>
        <param>
          <type>TrafficLightManager</type>
        </param>
        <param>
          <type>setColor</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/traffic_lights/test_traffic_light_manager.cpp" line="36" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/traffic_lights/test_traffic_light_manager.cpp" bodystart="36" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="test__traffic__light__manager_8cpp_1a2e0688ce15823e45a86740f9c4c9e8ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(TrafficLightManager, setArrow)</argsstring>
        <name>TEST</name>
        <param>
          <type>TrafficLightManager</type>
        </param>
        <param>
          <type>setArrow</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/traffic_lights/test_traffic_light_manager.cpp" line="59" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/traffic_lights/test_traffic_light_manager.cpp" bodystart="59" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="test__traffic__light__manager_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/traffic_lights/test_traffic_light_manager.cpp" line="82" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/traffic_lights/test_traffic_light_manager.cpp" bodystart="82" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ament_index_cpp/get_package_share_directory.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;scenario_simulator_exception/exception.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/traffic_lights/traffic_light_manager.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">TEST(TrafficLightManager,<sp/>getIds)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>std::string<sp/>path<sp/>=</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>ament_index_cpp::get_package_share_directory(</highlight><highlight class="stringliteral">&quot;traffic_simulator&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/map/lanelet2_map.osm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>geographic_msgs::msg::GeoPoint<sp/>origin;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>origin.latitude<sp/>=<sp/>35.61836750154;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>origin.longitude<sp/>=<sp/>139.78066608243;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdmap_utils_ptr<sp/>=<sp/>std::make_shared&lt;hdmap_utils::HdMapUtils&gt;(path,<sp/>origin);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="classtraffic__simulator_1_1TrafficLightManager" kindref="compound">traffic_simulator::TrafficLightManager</ref><sp/>manager(hdmap_utils_ptr,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ids<sp/>=<sp/>manager.getIds();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(std::find(ids.begin(),<sp/>ids.end(),<sp/>34836)<sp/>==<sp/>ids.end());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(std::find(ids.begin(),<sp/>ids.end(),<sp/>34802)<sp/>==<sp/>ids.end());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>EXPECT_EQ(ids.size(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(2));</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">TEST(TrafficLightManager,<sp/>setColor)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>std::string<sp/>path<sp/>=</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>ament_index_cpp::get_package_share_directory(</highlight><highlight class="stringliteral">&quot;traffic_simulator&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/map/lanelet2_map.osm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>geographic_msgs::msg::GeoPoint<sp/>origin;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>origin.latitude<sp/>=<sp/>35.61836750154;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>origin.longitude<sp/>=<sp/>139.78066608243;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdmap_utils_ptr<sp/>=<sp/>std::make_shared&lt;hdmap_utils::HdMapUtils&gt;(path,<sp/>origin);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classtraffic__simulator_1_1TrafficLightManager" kindref="compound">traffic_simulator::TrafficLightManager</ref><sp/>manager(hdmap_utils_ptr,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ids<sp/>=<sp/>manager.getIds();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>:<sp/>ids)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(manager.getColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>traffic_simulator::TrafficLightColor::NONE);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.setColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>traffic_simulator::TrafficLightColor::GREEN);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(manager.getColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>traffic_simulator::TrafficLightColor::GREEN);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.setColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>traffic_simulator::TrafficLightColor::YELLOW);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(manager.getColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>traffic_simulator::TrafficLightColor::YELLOW);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.setColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>traffic_simulator::TrafficLightColor::RED);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(manager.getColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>traffic_simulator::TrafficLightColor::RED);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.setColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>traffic_simulator::TrafficLightColor::NONE);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(manager.getColor(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>traffic_simulator::TrafficLightColor::NONE);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">TEST(TrafficLightManager,<sp/>setArrow)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>std::string<sp/>path<sp/>=</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ament_index_cpp::get_package_share_directory(</highlight><highlight class="stringliteral">&quot;traffic_simulator&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/map/lanelet2_map.osm&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>geographic_msgs::msg::GeoPoint<sp/>origin;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>origin.latitude<sp/>=<sp/>35.61836750154;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>origin.longitude<sp/>=<sp/>139.78066608243;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hdmap_utils_ptr<sp/>=<sp/>std::make_shared&lt;hdmap_utils::HdMapUtils&gt;(path,<sp/>origin);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="classtraffic__simulator_1_1TrafficLightManager" kindref="compound">traffic_simulator::TrafficLightManager</ref><sp/>manager(hdmap_utils_ptr,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ids<sp/>=<sp/>manager.getIds();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>:<sp/>ids)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(manager.getArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>traffic_simulator::TrafficLightArrow::NONE);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.setArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>traffic_simulator::TrafficLightArrow::LEFT);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(manager.getArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>traffic_simulator::TrafficLightArrow::LEFT);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.setArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>traffic_simulator::TrafficLightArrow::RIGHT);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(manager.getArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>traffic_simulator::TrafficLightArrow::RIGHT);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.setArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>traffic_simulator::TrafficLightArrow::STRAIGHT);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(manager.getArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>traffic_simulator::TrafficLightArrow::STRAIGHT);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.setArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>traffic_simulator::TrafficLightArrow::NONE);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(manager.getArrow(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>traffic_simulator::TrafficLightArrow::NONE);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/traffic_lights/test_traffic_light_manager.cpp"/>
  </compounddef>
</doxygen>
