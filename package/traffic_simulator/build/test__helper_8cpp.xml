<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="test__helper_8cpp" kind="file" language="C++">
    <compoundname>test_helper.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes local="no">regex</includes>
    <includes local="no">scenario_simulator_exception/exception.hpp</includes>
    <includes refid="helper_8hpp" local="no">traffic_simulator/helper/helper.hpp</includes>
    <includes refid="expect__eq__macros_8hpp" local="yes">../expect_eq_macros.hpp</includes>
    <incdepgraph>
      <node id="7536">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="7537">
        <label>traffic_simulator/helper/helper.hpp</label>
        <link refid="helper_8hpp_source"/>
        <childnode refid="7538" relation="include">
        </childnode>
        <childnode refid="7539" relation="include">
        </childnode>
        <childnode refid="7540" relation="include">
        </childnode>
        <childnode refid="7541" relation="include">
        </childnode>
        <childnode refid="7542" relation="include">
        </childnode>
        <childnode refid="7543" relation="include">
        </childnode>
        <childnode refid="7544" relation="include">
        </childnode>
        <childnode refid="7545" relation="include">
        </childnode>
      </node>
      <node id="7544">
        <label>openscenario_msgs/msg/lanelet_pose.hpp</label>
      </node>
      <node id="7543">
        <label>openscenario_msgs/msg/action_status.hpp</label>
      </node>
      <node id="7540">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="7539">
        <label>cmath</label>
      </node>
      <node id="7545">
        <label>string</label>
      </node>
      <node id="7535">
        <label>regex</label>
      </node>
      <node id="7548">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="7547">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="7534">
        <label>gtest/gtest.h</label>
      </node>
      <node id="7542">
        <label>iostream</label>
      </node>
      <node id="7541">
        <label>geometry_msgs/msg/quaternion.hpp</label>
      </node>
      <node id="7546">
        <label>../expect_eq_macros.hpp</label>
        <link refid="expect__eq__macros_8hpp_source"/>
        <childnode refid="7534" relation="include">
        </childnode>
        <childnode refid="7547" relation="include">
        </childnode>
        <childnode refid="7548" relation="include">
        </childnode>
      </node>
      <node id="7533">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp</label>
        <link refid="test__helper_8cpp"/>
        <childnode refid="7534" relation="include">
        </childnode>
        <childnode refid="7535" relation="include">
        </childnode>
        <childnode refid="7536" relation="include">
        </childnode>
        <childnode refid="7537" relation="include">
        </childnode>
        <childnode refid="7546" relation="include">
        </childnode>
      </node>
      <node id="7538">
        <label>simulation_api_schema.pb.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__helper_8cpp_1a48fdce19f2e6b4c9578053a16b4d9127" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(HELPER, RPY)</argsstring>
        <name>TEST</name>
        <param>
          <type>HELPER</type>
        </param>
        <param>
          <type>RPY</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" line="23" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" bodystart="23" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="test__helper_8cpp_1aaa1a54bbec0cb5ce572a6094e8dcb1d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(HELPER, QUATERNION)</argsstring>
        <name>TEST</name>
        <param>
          <type>HELPER</type>
        </param>
        <param>
          <type>QUATERNION</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" line="33" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="test__helper_8cpp_1a07cfee9e9ce3db38626a8e88c55f9585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(HELPER, POSE)</argsstring>
        <name>TEST</name>
        <param>
          <type>HELPER</type>
        </param>
        <param>
          <type>POSE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" line="40" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="test__helper_8cpp_1a252698dc36e07147044b22874b8586e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(HELPER, LANELET_POSE)</argsstring>
        <name>TEST</name>
        <param>
          <type>HELPER</type>
        </param>
        <param>
          <type>LANELET_POSE</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" line="50" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" bodystart="50" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="test__helper_8cpp_1aad8ab1cb7da5c56bec6b86cb4744b0d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(HELPER, ACTION_STATUS)</argsstring>
        <name>TEST</name>
        <param>
          <type>HELPER</type>
        </param>
        <param>
          <type>ACTION_STATUS</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" line="66" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="test__helper_8cpp_1a3e6f445c021f350292b46b41459ed936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(HELPER, DETECTION_SENSOR_CONFIGURATION)</argsstring>
        <name>TEST</name>
        <param>
          <type>HELPER</type>
        </param>
        <param>
          <type>DETECTION_SENSOR_CONFIGURATION</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" line="77" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" bodystart="77" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="test__helper_8cpp_1ac203fa6abd6c230a05657a8c4d9e8b0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(HELPER, LIDAR_SENSOR_CONFIGURATION)</argsstring>
        <name>TEST</name>
        <param>
          <type>HELPER</type>
        </param>
        <param>
          <type>LIDAR_SENSOR_CONFIGURATION</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" line="88" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="test__helper_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" line="96" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp" bodystart="96" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;regex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;scenario_simulator_exception/exception.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/helper/helper.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../expect_eq_macros.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">TEST(HELPER,<sp/>RPY)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rpy<sp/>=<sp/>traffic_simulator::helper::constructRPY(1,<sp/>2,<sp/>1);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Vector3<sp/>vec;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>vec.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>vec.y<sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>vec.z<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>EXPECT_VECTOR3_EQ(rpy,<sp/>vec);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">TEST(HELPER,<sp/>QUATERNION)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rpy<sp/>=</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>traffic_simulator::helper::constructRPYfromQuaternion(geometry_msgs::msg::Quaternion());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>EXPECT_VECTOR3_EQ(rpy,<sp/>geometry_msgs::msg::Vector3());</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">TEST(HELPER,<sp/>POSE)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pose<sp/>=<sp/>traffic_simulator::helper::constructPose(1,<sp/>1,<sp/>1,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>expect_pose;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>expect_pose.position.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>expect_pose.position.y<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>expect_pose.position.z<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>EXPECT_POSE_EQ(pose,<sp/>expect_pose);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">TEST(HELPER,<sp/>LANELET_POSE)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lanelet_pose<sp/>=<sp/>traffic_simulator::helper::constructLaneletPose(5,<sp/>10,<sp/>2,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::LaneletPose<sp/>expected_pose;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>expected_pose.lanelet_id<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>expected_pose.s<sp/>=<sp/>10.0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>expected_pose.offset<sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>expected_pose.rpy.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>expected_pose.rpy.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>expected_pose.rpy.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>EXPECT_LANELET_POSE_EQ(lanelet_pose,<sp/>expected_pose);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>lanelet_pose;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>EXPECT_STREQ(ss.str().c_str(),<sp/></highlight><highlight class="stringliteral">&quot;lanelet<sp/>id<sp/>:<sp/>5\ns<sp/>:<sp/>10&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">TEST(HELPER,<sp/>ACTION_STATUS)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>action_status<sp/>=<sp/>traffic_simulator::helper::constructActionStatus(3,<sp/>4,<sp/>5,<sp/>1);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::ActionStatus<sp/>expect_action_status;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>expect_action_status.twist.linear.x<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>expect_action_status.twist.angular.z<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>expect_action_status.accel.linear.x<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>expect_action_status.accel.angular.z<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>EXPECT_ACTION_STATUS_EQ(action_status,<sp/>expect_action_status);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">TEST(HELPER,<sp/>DETECTION_SENSOR_CONFIGURATION)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>configuration<sp/>=</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>traffic_simulator::helper::constructDetectionSensorConfiguration(</highlight><highlight class="stringliteral">&quot;ego&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">,<sp/>3);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>simulation_api_schema::DetectionSensorConfiguration<sp/>expect_configuration;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>expect_configuration.set_topic_name(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>expect_configuration.set_entity(</highlight><highlight class="stringliteral">&quot;ego&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>expect_configuration.set_update_duration(3.0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>EXPECT_DETECTION_SENSOR_CONFIGURATION_EQ(configuration,<sp/>expect_configuration);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">TEST(HELPER,<sp/>LIDAR_SENSOR_CONFIGURATION)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(traffic_simulator::helper::constructLidarConfiguration(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>traffic_simulator::helper::LidarType::VLP16,<sp/></highlight><highlight class="stringliteral">&quot;ego&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(traffic_simulator::helper::constructLidarConfiguration(</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>traffic_simulator::helper::LidarType::VLP32,<sp/></highlight><highlight class="stringliteral">&quot;ego&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/test/src/helper/test_helper.cpp"/>
  </compounddef>
</doxygen>
