<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pedestrian__entity_8cpp" kind="file" language="C++">
    <compoundname>pedestrian_entity.cpp</compoundname>
    <includes local="no">quaternion_operation/quaternion_operation.h</includes>
    <includes local="no">boost/algorithm/clamp.hpp</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes refid="pedestrian__entity_8hpp" local="no">traffic_simulator/entity/pedestrian_entity.hpp</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="5823">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="5861">
        <label>traffic_simulator/behavior/route_planner.hpp</label>
        <link refid="route__planner_8hpp_source"/>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5799" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5835">
        <label>traffic_simulator/traffic_lights/traffic_light_state.hpp</label>
        <link refid="traffic__light__state_8hpp_source"/>
        <childnode refid="5836" relation="include">
        </childnode>
        <childnode refid="5837" relation="include">
        </childnode>
        <childnode refid="5838" relation="include">
        </childnode>
      </node>
      <node id="5856">
        <label>boost/property_tree/xml_parser.hpp</label>
      </node>
      <node id="5842">
        <label>iomanip</label>
      </node>
      <node id="5782">
        <label>functional</label>
      </node>
      <node id="5799">
        <label>queue</label>
      </node>
      <node id="5770">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/entity/pedestrian_entity.cpp</label>
        <link refid="pedestrian__entity_8cpp"/>
        <childnode refid="5771" relation="include">
        </childnode>
        <childnode refid="5772" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5775" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5860">
        <label>traffic_simulator/behavior/pedestrian/walk_straight_action.hpp</label>
        <link refid="walk__straight__action_8hpp"/>
        <childnode refid="5787" relation="include">
        </childnode>
        <childnode refid="5780" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5785" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5788" relation="include">
        </childnode>
        <childnode refid="5853" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5845">
        <label>limits</label>
      </node>
      <node id="5816">
        <label>geometry_msgs/msg/pose_stamped.hpp</label>
      </node>
      <node id="5797">
        <label>openscenario_msgs/msg/entity_type.hpp</label>
      </node>
      <node id="5849">
        <label>std_msgs/msg/color_rgba.hpp</label>
      </node>
      <node id="5781">
        <label>behaviortree_cpp_v3/loggers/bt_cout_logger.h</label>
      </node>
      <node id="5779">
        <label>traffic_simulator/behavior/pedestrian/behavior_tree.hpp</label>
        <link refid="pedestrian_2behavior__tree_8hpp_source"/>
        <childnode refid="5780" relation="include">
        </childnode>
        <childnode refid="5781" relation="include">
        </childnode>
        <childnode refid="5782" relation="include">
        </childnode>
        <childnode refid="5783" relation="include">
        </childnode>
        <childnode refid="5784" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5785" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5786" relation="include">
        </childnode>
        <childnode refid="5860" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5815">
        <label>geographic_msgs/msg/geo_point.hpp</label>
      </node>
      <node id="5792">
        <label>openscenario_msgs/msg/waypoints_array.hpp</label>
      </node>
      <node id="5808">
        <label>lanelet2_routing/RoutingGraph.h</label>
      </node>
      <node id="5850">
        <label>traffic_simulator/traffic_lights/traffic_light_phase.hpp</label>
        <link refid="traffic__light__phase_8hpp_source"/>
        <childnode refid="5845" relation="include">
        </childnode>
        <childnode refid="5823" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5833" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5775">
        <label>traffic_simulator/entity/pedestrian_entity.hpp</label>
        <link refid="pedestrian__entity_8hpp_source"/>
        <childnode refid="5776" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5777" relation="include">
        </childnode>
        <childnode refid="5778" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5779" relation="include">
        </childnode>
        <childnode refid="5861" relation="include">
        </childnode>
        <childnode refid="5862" relation="include">
        </childnode>
        <childnode refid="5793" relation="include">
        </childnode>
        <childnode refid="5853" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5803">
        <label>lanelet2_core/geometry/Lanelet.h</label>
      </node>
      <node id="5841">
        <label>autoware_perception_msgs/msg/traffic_light_state_array.hpp</label>
      </node>
      <node id="5790">
        <label>traffic_simulator/behavior/action_node.hpp</label>
        <link refid="action__node_8hpp_source"/>
        <childnode refid="5789" relation="include">
        </childnode>
        <childnode refid="5772" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5791" relation="include">
        </childnode>
        <childnode refid="5792" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5793" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5851" relation="include">
        </childnode>
        <childnode refid="5824" relation="include">
        </childnode>
        <childnode refid="5840" relation="include">
        </childnode>
        <childnode refid="5834" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5862">
        <label>traffic_simulator/behavior/target_speed_planner.hpp</label>
        <link refid="target__speed__planner_8hpp_source"/>
        <childnode refid="5776" relation="include">
        </childnode>
      </node>
      <node id="5785">
        <label>openscenario_msgs/msg/entity_status.hpp</label>
      </node>
      <node id="5836">
        <label>autoware_perception_msgs/msg/lamp_state.hpp</label>
      </node>
      <node id="5778">
        <label>pugixml.hpp</label>
      </node>
      <node id="5854">
        <label>boost/foreach.hpp</label>
      </node>
      <node id="5828">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="5859">
        <label>openscenario_msgs.pb.h</label>
      </node>
      <node id="5798">
        <label>openscenario_msgs/msg/vehicle_parameters.hpp</label>
      </node>
      <node id="5847">
        <label>cassert</label>
      </node>
      <node id="5838">
        <label>stdexcept</label>
      </node>
      <node id="5830">
        <label>openscenario_msgs/msg/hermite_curve.hpp</label>
      </node>
      <node id="5780">
        <label>behaviortree_cpp_v3/bt_factory.h</label>
      </node>
      <node id="5774">
        <label>string</label>
      </node>
      <node id="5791">
        <label>openscenario_msgs/msg/obstacle.hpp</label>
      </node>
      <node id="5819">
        <label>lanelet2_extension_psim/utility/utilities.hpp</label>
      </node>
      <node id="5821">
        <label>traffic_simulator/hdmap_utils/cache.hpp</label>
        <link refid="cache_8hpp_source"/>
        <childnode refid="5776" relation="include">
        </childnode>
        <childnode refid="5783" relation="include">
        </childnode>
        <childnode refid="5822" relation="include">
        </childnode>
        <childnode refid="5823" relation="include">
        </childnode>
        <childnode refid="5824" relation="include">
        </childnode>
        <childnode refid="5834" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5784">
        <label>map</label>
      </node>
      <node id="5827">
        <label>traffic_simulator/math/hermite_curve.hpp</label>
        <link refid="hermite__curve_8hpp_source"/>
        <childnode refid="5771" relation="include">
        </childnode>
        <childnode refid="5776" relation="include">
        </childnode>
        <childnode refid="5783" relation="include">
        </childnode>
        <childnode refid="5828" relation="include">
        </childnode>
        <childnode refid="5829" relation="include">
        </childnode>
        <childnode refid="5830" relation="include">
        </childnode>
        <childnode refid="5831" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5846">
        <label>traffic_simulator/color_utils/color_utils.hpp</label>
        <link refid="color__utils_8hpp_source"/>
        <childnode refid="5847" relation="include">
        </childnode>
        <childnode refid="5848" relation="include">
        </childnode>
        <childnode refid="5784" relation="include">
        </childnode>
        <childnode refid="5849" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
      </node>
      <node id="5795">
        <label>openscenario_msgs/msg/bounding_box.hpp</label>
      </node>
      <node id="5858">
        <label>traffic_simulator/entity/vehicle_parameter.hpp</label>
        <link refid="vehicle__parameter_8hpp_source"/>
        <childnode refid="5859" relation="include">
        </childnode>
        <childnode refid="5854" relation="include">
        </childnode>
        <childnode refid="5855" relation="include">
        </childnode>
        <childnode refid="5856" relation="include">
        </childnode>
        <childnode refid="5829" relation="include">
        </childnode>
        <childnode refid="5795" relation="include">
        </childnode>
        <childnode refid="5798" relation="include">
        </childnode>
        <childnode refid="5778" relation="include">
        </childnode>
        <childnode refid="5820" relation="include">
        </childnode>
        <childnode refid="5857" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
      </node>
      <node id="5820">
        <label>rclcpp/rclcpp.hpp</label>
      </node>
      <node id="5807">
        <label>lanelet2_routing/RoutingCost.h</label>
      </node>
      <node id="5812">
        <label>tf2_geometry_msgs/tf2_geometry_msgs.h</label>
      </node>
      <node id="5800">
        <label>traffic_simulator/hdmap_utils/hdmap_utils.hpp</label>
        <link refid="hdmap__utils_8hpp_source"/>
        <childnode refid="5801" relation="include">
        </childnode>
        <childnode refid="5802" relation="include">
        </childnode>
        <childnode refid="5803" relation="include">
        </childnode>
        <childnode refid="5804" relation="include">
        </childnode>
        <childnode refid="5805" relation="include">
        </childnode>
        <childnode refid="5806" relation="include">
        </childnode>
        <childnode refid="5807" relation="include">
        </childnode>
        <childnode refid="5808" relation="include">
        </childnode>
        <childnode refid="5809" relation="include">
        </childnode>
        <childnode refid="5810" relation="include">
        </childnode>
        <childnode refid="5811" relation="include">
        </childnode>
        <childnode refid="5812" relation="include">
        </childnode>
        <childnode refid="5813" relation="include">
        </childnode>
        <childnode refid="5814" relation="include">
        </childnode>
        <childnode refid="5776" relation="include">
        </childnode>
        <childnode refid="5815" relation="include">
        </childnode>
        <childnode refid="5816" relation="include">
        </childnode>
        <childnode refid="5817" relation="include">
        </childnode>
        <childnode refid="5818" relation="include">
        </childnode>
        <childnode refid="5819" relation="include">
        </childnode>
        <childnode refid="5784" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5785" relation="include">
        </childnode>
        <childnode refid="5820" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5821" relation="include">
        </childnode>
        <childnode refid="5827" relation="include">
        </childnode>
        <childnode refid="5835" relation="include">
        </childnode>
        <childnode refid="5834" relation="include">
        </childnode>
        <childnode refid="5833" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
        <childnode refid="5839" relation="include">
        </childnode>
      </node>
      <node id="5825">
        <label>exception</label>
      </node>
      <node id="5851">
        <label>traffic_simulator/helper/stop_watch.hpp</label>
        <link refid="stop__watch_8hpp_source"/>
        <childnode refid="5776" relation="include">
        </childnode>
        <childnode refid="5852" relation="include">
        </childnode>
        <childnode refid="5837" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
      </node>
      <node id="5853">
        <label>traffic_simulator/entity/pedestrian_parameter.hpp</label>
        <link refid="pedestrian__parameter_8hpp_source"/>
        <childnode refid="5854" relation="include">
        </childnode>
        <childnode refid="5855" relation="include">
        </childnode>
        <childnode refid="5856" relation="include">
        </childnode>
        <childnode refid="5829" relation="include">
        </childnode>
        <childnode refid="5777" relation="include">
        </childnode>
        <childnode refid="5778" relation="include">
        </childnode>
        <childnode refid="5820" relation="include">
        </childnode>
        <childnode refid="5857" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5858" relation="include">
        </childnode>
      </node>
      <node id="5801">
        <label>geometry_msgs/msg/vector3.h</label>
      </node>
      <node id="5829">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="5796">
        <label>openscenario_msgs/msg/driver_model.hpp</label>
      </node>
      <node id="5844">
        <label>autoware_perception_msgs/msg/traffic_light_state.hpp</label>
      </node>
      <node id="5806">
        <label>lanelet2_routing/Route.h</label>
      </node>
      <node id="5818">
        <label>lanelet2_extension_psim/utility/query.hpp</label>
      </node>
      <node id="5771">
        <label>quaternion_operation/quaternion_operation.h</label>
      </node>
      <node id="5789">
        <label>behaviortree_cpp_v3/action_node.h</label>
      </node>
      <node id="5817">
        <label>lanelet2_extension_psim/utility/message_conversion.hpp</label>
      </node>
      <node id="5783">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="5848">
        <label>cstdio</label>
      </node>
      <node id="5772">
        <label>boost/algorithm/clamp.hpp</label>
      </node>
      <node id="5826">
        <label>openscenario_msgs/msg/catmull_rom_spline.hpp</label>
      </node>
      <node id="5832">
        <label>vector</label>
      </node>
      <node id="5814">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="5794">
        <label>autoware_vehicle_msgs/msg/vehicle_command.hpp</label>
      </node>
      <node id="5833">
        <label>utility</label>
      </node>
      <node id="5786">
        <label>traffic_simulator/behavior/pedestrian/follow_lane_action.hpp</label>
        <link refid="pedestrian_2follow__lane__action_8hpp_source"/>
        <childnode refid="5787" relation="include">
        </childnode>
        <childnode refid="5780" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5785" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5788" relation="include">
        </childnode>
        <childnode refid="5853" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5857">
        <label>sstream</label>
      </node>
      <node id="5831">
        <label>traffic_simulator/math/polynomial_solver.hpp</label>
        <link refid="polynomial__solver_8hpp_source"/>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5810">
        <label>lanelet2_traffic_rules/TrafficRulesFactory.h</label>
      </node>
      <node id="5824">
        <label>traffic_simulator/math/catmull_rom_spline.hpp</label>
        <link refid="catmull__rom__spline_8hpp_source"/>
        <childnode refid="5825" relation="include">
        </childnode>
        <childnode refid="5783" relation="include">
        </childnode>
        <childnode refid="5826" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5827" relation="include">
        </childnode>
        <childnode refid="5833" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5805">
        <label>lanelet2_core/primitives/LaneletSequence.h</label>
      </node>
      <node id="5855">
        <label>boost/property_tree/ptree.hpp</label>
      </node>
      <node id="5837">
        <label>iostream</label>
      </node>
      <node id="5788">
        <label>traffic_simulator/behavior/pedestrian/pedestrian_action_node.hpp</label>
        <link refid="pedestrian__action__node_8hpp_source"/>
        <childnode refid="5789" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5777" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5790" relation="include">
        </childnode>
        <childnode refid="5853" relation="include">
        </childnode>
      </node>
      <node id="5802">
        <label>lanelet2_core/LaneletMap.h</label>
      </node>
      <node id="5843">
        <label>traffic_simulator/traffic_lights/traffic_light.hpp</label>
        <link refid="traffic__light_8hpp_source"/>
        <childnode refid="5844" relation="include">
        </childnode>
        <childnode refid="5837" relation="include">
        </childnode>
        <childnode refid="5845" relation="include">
        </childnode>
        <childnode refid="5838" relation="include">
        </childnode>
        <childnode refid="5846" relation="include">
        </childnode>
        <childnode refid="5850" relation="include">
        </childnode>
        <childnode refid="5835" relation="include">
        </childnode>
        <childnode refid="5834" relation="include">
        </childnode>
        <childnode refid="5833" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
      </node>
      <node id="5840">
        <label>traffic_simulator/traffic_lights/traffic_light_manager.hpp</label>
        <link refid="traffic__light__manager_8hpp_source"/>
        <childnode refid="5841" relation="include">
        </childnode>
        <childnode refid="5842" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5820" relation="include">
        </childnode>
        <childnode refid="5838" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5843" relation="include">
        </childnode>
        <childnode refid="5834" relation="include">
        </childnode>
        <childnode refid="5833" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
        <childnode refid="5839" relation="include">
        </childnode>
      </node>
      <node id="5834">
        <label>unordered_map</label>
      </node>
      <node id="5813">
        <label>autoware_auto_msgs/msg/had_map_bin.hpp</label>
      </node>
      <node id="5787">
        <label>behaviortree_cpp_v3/behavior_tree.h</label>
      </node>
      <node id="5839">
        <label>visualization_msgs/msg/marker_array.hpp</label>
      </node>
      <node id="5822">
        <label>mutex</label>
      </node>
      <node id="5804">
        <label>lanelet2_core/primitives/BasicRegulatoryElements.h</label>
      </node>
      <node id="5793">
        <label>traffic_simulator/entity/entity_base.hpp</label>
        <link refid="entity__base_8hpp_source"/>
        <childnode refid="5794" relation="include">
        </childnode>
        <childnode refid="5776" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5795" relation="include">
        </childnode>
        <childnode refid="5796" relation="include">
        </childnode>
        <childnode refid="5785" relation="include">
        </childnode>
        <childnode refid="5797" relation="include">
        </childnode>
        <childnode refid="5791" relation="include">
        </childnode>
        <childnode refid="5798" relation="include">
        </childnode>
        <childnode refid="5792" relation="include">
        </childnode>
        <childnode refid="5799" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5800" relation="include">
        </childnode>
        <childnode refid="5840" relation="include">
        </childnode>
        <childnode refid="5834" relation="include">
        </childnode>
        <childnode refid="5832" relation="include">
        </childnode>
        <childnode refid="5839" relation="include">
        </childnode>
      </node>
      <node id="5809">
        <label>lanelet2_routing/RoutingGraphContainer.h</label>
      </node>
      <node id="5852">
        <label>chrono</label>
      </node>
      <node id="5776">
        <label>boost/optional.hpp</label>
      </node>
      <node id="5811">
        <label>tf2/LinearMath/Matrix3x3.h</label>
      </node>
      <node id="5777">
        <label>openscenario_msgs/msg/pedestrian_parameters.hpp</label>
      </node>
      <node id="5773">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetraffic__simulator">traffic_simulator</innernamespace>
    <innernamespace refid="namespacetraffic__simulator_1_1entity">traffic_simulator::entity</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;quaternion_operation/quaternion_operation.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/algorithm/clamp.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;traffic_simulator/entity/pedestrian_entity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetraffic__simulator" kindref="compound">traffic_simulator</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">entity</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal">PedestrianEntity::PedestrianEntity(</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::EntityStatus<sp/>&amp;<sp/>initial_state,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::PedestrianParameters<sp/>&amp;<sp/>params)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">:<sp/>EntityBase(params.pedestrian_category,<sp/>name,<sp/>initial_state),<sp/>parameters(params)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>entity_type_.type<sp/>=<sp/>openscenario_msgs::msg::EntityType::PEDESTRIAN;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>tree_ptr_<sp/>=<sp/>std::make_shared&lt;entity_behavior::pedestrian::BehaviorTree&gt;();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>tree_ptr_-&gt;setValueToBlackBoard(</highlight><highlight class="stringliteral">&quot;pedestrian_parameters&quot;</highlight><highlight class="normal">,<sp/>parameters);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">PedestrianEntity::PedestrianEntity(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::PedestrianParameters<sp/>&amp;<sp/>params)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">:<sp/>EntityBase(params.pedestrian_category,<sp/>name),<sp/>parameters(params)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>entity_type_.type<sp/>=<sp/>openscenario_msgs::msg::EntityType::PEDESTRIAN;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>tree_ptr_<sp/>=<sp/>std::make_shared&lt;entity_behavior::pedestrian::BehaviorTree&gt;();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>tree_ptr_-&gt;setValueToBlackBoard(</highlight><highlight class="stringliteral">&quot;pedestrian_parameters&quot;</highlight><highlight class="normal">,<sp/>parameters);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PedestrianEntity::requestAssignRoute(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;openscenario_msgs::msg::LaneletPose&gt;<sp/>&amp;<sp/>waypoints)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>tree_ptr_-&gt;setRequest(</highlight><highlight class="stringliteral">&quot;follow_lane&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status_)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status_-&gt;lanelet_pose_valid)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>route_planner_ptr_-&gt;getRouteLanelets(status_-&gt;lanelet_pose,<sp/>waypoints);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PedestrianEntity::requestWalkStraight()<sp/>{<sp/>tree_ptr_-&gt;setRequest(</highlight><highlight class="stringliteral">&quot;walk_straight&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PedestrianEntity::requestAcquirePosition(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>openscenario_msgs::msg::LaneletPose<sp/>&amp;<sp/>lanelet_pose)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>tree_ptr_-&gt;setRequest(</highlight><highlight class="stringliteral">&quot;follow_lane&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status_)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status_-&gt;lanelet_pose_valid)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>route_planner_ptr_-&gt;getRouteLanelets(status_-&gt;lanelet_pose,<sp/>lanelet_pose);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PedestrianEntity::cancelRequest()<sp/>{<sp/>tree_ptr_-&gt;setRequest(</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PedestrianEntity::setTargetSpeed(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target_speed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>continuous)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>target_speed_planner_.setTargetSpeed(target_speed,<sp/>continuous);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PedestrianEntity::onUpdate(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step_time)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>EntityBase::onUpdate(current_time,<sp/>step_time);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status_)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_time<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>updateEntityStatusTimestamp(current_time);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>tree_ptr_-&gt;setValueToBlackBoard(</highlight><highlight class="stringliteral">&quot;other_entity_status&quot;</highlight><highlight class="normal">,<sp/>other_status_);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>tree_ptr_-&gt;setValueToBlackBoard(</highlight><highlight class="stringliteral">&quot;entity_type_list&quot;</highlight><highlight class="normal">,<sp/>entity_type_list_);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>tree_ptr_-&gt;setValueToBlackBoard(</highlight><highlight class="stringliteral">&quot;entity_status&quot;</highlight><highlight class="normal">,<sp/>status_.get());</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>target_speed_planner_.update(status_-&gt;action_status.twist.linear.x);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>tree_ptr_-&gt;setValueToBlackBoard(</highlight><highlight class="stringliteral">&quot;target_speed&quot;</highlight><highlight class="normal">,<sp/>target_speed_planner_.getTargetSpeed());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status_-&gt;lanelet_pose_valid)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>route<sp/>=<sp/>route_planner_ptr_-&gt;getRouteLanelets(status_-&gt;lanelet_pose);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tree_ptr_-&gt;setValueToBlackBoard(</highlight><highlight class="stringliteral">&quot;route_lanelets&quot;</highlight><highlight class="normal">,<sp/>route);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::int64_t&gt;<sp/>empty<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tree_ptr_-&gt;setValueToBlackBoard(</highlight><highlight class="stringliteral">&quot;route_lanelets&quot;</highlight><highlight class="normal">,<sp/>empty);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>tree_ptr_-&gt;tick(current_time,<sp/>step_time);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>status_updated<sp/>=<sp/>tree_ptr_-&gt;getUpdatedStatus();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status_updated.lanelet_pose_valid)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>following_lanelets<sp/>=</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hdmap_utils_ptr_-&gt;getFollowingLanelets(status_updated.lanelet_pose.lanelet_id);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>hdmap_utils_ptr_-&gt;getLaneletLength(status_updated.lanelet_pose.lanelet_id);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(following_lanelets.size()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>l<sp/>&lt;=<sp/>status_updated.lanelet_pose.s)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stopAtEndOfRoad();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!status_)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linear_jerk_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linear_jerk_<sp/>=</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(status_updated.action_status.accel.linear.x<sp/>-<sp/>status_-&gt;action_status.accel.linear.x)<sp/>/</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step_time;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>setStatus(status_updated);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>updateStandStillDuration(step_time);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>traffic_simulator</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/traffic_simulator/src/entity/pedestrian_entity.cpp"/>
  </compounddef>
</doxygen>
