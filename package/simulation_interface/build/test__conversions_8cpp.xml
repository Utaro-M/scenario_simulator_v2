<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="test__conversions_8cpp" kind="file" language="C++">
    <compoundname>test_conversions.cpp</compoundname>
    <includes local="no">geometry_msgs.pb.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="expect__equal__macros_8hpp" local="yes">expect_equal_macros.hpp</includes>
    <incdepgraph>
      <node id="185">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="176">
        <label>geometry_msgs.pb.h</label>
      </node>
      <node id="212">
        <label>rosgraph_msgs/msg/clock.hpp</label>
      </node>
      <node id="206">
        <label>openscenario_msgs/msg/entity_type.hpp</label>
      </node>
      <node id="183">
        <label>geometry_msgs/msg/twist.hpp</label>
      </node>
      <node id="194">
        <label>autoware_control_msgs/msg/control_command.hpp</label>
      </node>
      <node id="198">
        <label>builtin_interfaces/msg/duration.hpp</label>
      </node>
      <node id="208">
        <label>openscenario_msgs/msg/misc_object_parameters.hpp</label>
      </node>
      <node id="191">
        <label>rosgraph_msgs.pb.h</label>
      </node>
      <node id="207">
        <label>openscenario_msgs/msg/lanelet_pose.hpp</label>
      </node>
      <node id="201">
        <label>openscenario_msgs/msg/action_status.hpp</label>
      </node>
      <node id="205">
        <label>openscenario_msgs/msg/entity_status.hpp</label>
      </node>
      <node id="181">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="190">
        <label>openscenario_msgs.pb.h</label>
      </node>
      <node id="211">
        <label>openscenario_msgs/msg/vehicle_parameters.hpp</label>
      </node>
      <node id="188">
        <label>autoware_vehicle_msgs.pb.h</label>
      </node>
      <node id="214">
        <label>string</label>
      </node>
      <node id="204">
        <label>openscenario_msgs/msg/bounding_box.hpp</label>
      </node>
      <node id="215">
        <label>std_msgs/msg/header.hpp</label>
      </node>
      <node id="199">
        <label>builtin_interfaces/msg/time.hpp</label>
      </node>
      <node id="184">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="195">
        <label>autoware_perception_msgs/msg/traffic_light_state.hpp</label>
      </node>
      <node id="202">
        <label>openscenario_msgs/msg/axle.hpp</label>
      </node>
      <node id="203">
        <label>openscenario_msgs/msg/axles.hpp</label>
      </node>
      <node id="196">
        <label>autoware_vehicle_msgs/msg/shift.hpp</label>
      </node>
      <node id="180">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="193">
        <label>std_msgs.pb.h</label>
      </node>
      <node id="216">
        <label>vector</label>
      </node>
      <node id="189">
        <label>builtin_interfaces.pb.h</label>
      </node>
      <node id="177">
        <label>gtest/gtest.h</label>
      </node>
      <node id="197">
        <label>autoware_vehicle_msgs/msg/vehicle_command.hpp</label>
      </node>
      <node id="187">
        <label>autoware_control_msgs.pb.h</label>
      </node>
      <node id="200">
        <label>iostream</label>
      </node>
      <node id="213">
        <label>simulation_interface/constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="214" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>geometry_msgs/msg/accel.hpp</label>
      </node>
      <node id="210">
        <label>openscenario_msgs/msg/performance.hpp</label>
      </node>
      <node id="182">
        <label>geometry_msgs/msg/quaternion.hpp</label>
      </node>
      <node id="178">
        <label>expect_equal_macros.hpp</label>
        <link refid="expect__equal__macros_8hpp_source"/>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp</label>
        <link refid="test__conversions_8cpp"/>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>openscenario_msgs/msg/pedestrian_parameters.hpp</label>
      </node>
      <node id="186">
        <label>simulation_interface/conversions.hpp</label>
        <link refid="conversions_8hpp_source"/>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>simulation_api_schema.pb.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__conversions_8cpp_1a7e8afe2c10e97ee466718ef756bd3d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Point)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Point</type>
        </param>
        <briefdescription>
<para>Test cases. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="23" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="23" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a26d3cc653605d010a317f1318523f245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Quaternion)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Quaternion</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="38" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="38" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a082888043bf9bfaa1f106fefa2ce6d8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Pose)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Pose</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="54" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="54" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1aa3c927f0e7c5c894947cd7ad53b0bb41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Vector)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Vector</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="73" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="73" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a7ba57acc8779c505963ed4a94089ec35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Twist)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Twist</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="88" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="88" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1afc2fc5137d4aa80709260416a8fb9b5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Accel)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Accel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="103" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="103" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a5e531842a05276854111c4af8001d822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Performance)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Performance</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="118" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="118" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a7f53098e6d4c02dd459581378acbbe1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Axle)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Axle</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="135" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="135" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1ad8b5070d17a804f5bd24f36848e50e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Axles)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Axles</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="152" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="152" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a5d47dce2b51193230548e28299244967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, BoundingBox)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>BoundingBox</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="174" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="174" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a7002395ead869e7378ab161dd0712c36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, VehicleParameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>VehicleParameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="192" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="192" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1aea2f7db70b476cc038abbb12409d2c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, PedestrianParameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>PedestrianParameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="226" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="226" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1af9df96875dcf4deafe9669581f2001ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, MiscObjectParameters)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>MiscObjectParameters</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="248" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="248" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a31ad728844d3c2ce1b214dd9bc80215f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, ActionStatus)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>ActionStatus</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="269" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="269" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a62966f933b1687ce2c722d20c9e2020b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, EntityStatus)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>EntityStatus</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="294" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="294" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1ae15342d98a6b6d4174cd7b9a451abbf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Time)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Time</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="349" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="349" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a939f91fe0d928e05414f346ff1319a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Duration)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Duration</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="363" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="363" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a0a5553385278f43ef3cfd0745b08f688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Header)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Header</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="377" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="377" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a9a4ad85ad05c33f79c3ca787d4f984a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Clock)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Clock</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="393" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="393" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1ae5fc3c6b03e480a763431b7fb86381c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, ControlCommand)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>ControlCommand</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="407" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="407" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1ad54812cf101ba5b82b31deaf521db290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, Shift)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>Shift</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><simplesect kind="note"><para>Convert low shift value</para></simplesect>
<simplesect kind="note"><para>Convert parking shift value</para></simplesect>
<simplesect kind="note"><para>Convert drive shift value</para></simplesect>
<simplesect kind="note"><para>Convert reverse shift value</para></simplesect>
<simplesect kind="note"><para>Convert none shift value</para></simplesect>
<simplesect kind="note"><para>Invalid value input</para></simplesect>
</para>        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="425" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="425" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a6d1253fa622e5fc142893815417c57e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, VehicleCommand)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>VehicleCommand</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="493" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="493" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1ad5878066258ba7f53cafa76336d9b1ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, EntityType)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>EntityType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="525" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="525" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a2458e3eca4b74b2064d02236cd60972f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, LaneletPose)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>LaneletPose</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="552" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="552" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1afb349ea36c14101c2fe4e4bc8eb79f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TEST</definition>
        <argsstring>(Conversion, TrafficLights)</argsstring>
        <name>TEST</name>
        <param>
          <type>Conversion</type>
        </param>
        <param>
          <type>TrafficLights</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="569" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="569" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="test__conversions_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" line="616" column="1" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp" bodystart="616" bodyend="620"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs.pb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;expect_equal_macros.hpp&quot;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">TEST(Conversion,<sp/>Point)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>geometry_msgs::Point<sp/>proto;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Point<sp/>p;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>p.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>p.y<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>p.z<sp/>=<sp/>3.1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(p,<sp/>proto);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>EXPECT_POINT_EQ(p,<sp/>proto);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>geometry_msgs::msg::Point();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(p.x,<sp/>0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>p);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>EXPECT_POINT_EQ(p,<sp/>proto);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">TEST(Conversion,<sp/>Quaternion)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>geometry_msgs::Quaternion<sp/>proto;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Quaternion<sp/>q;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>q.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>q.y<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>q.z<sp/>=<sp/>3.1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>q.w<sp/>=<sp/>-10;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(q,<sp/>proto);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>EXPECT_QUATERNION_EQ(q,<sp/>proto);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>q<sp/>=<sp/>geometry_msgs::msg::Quaternion();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(q.x,<sp/>0);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>q);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>EXPECT_QUATERNION_EQ(q,<sp/>proto);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">TEST(Conversion,<sp/>Pose)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>geometry_msgs::Pose<sp/>proto;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>p;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>p.position.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>p.position.y<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>p.position.z<sp/>=<sp/>3.1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>p.orientation.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>p.orientation.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>p.orientation.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>p.orientation.w<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(p,<sp/>proto);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>EXPECT_POSE_EQ(p,<sp/>proto);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>geometry_msgs::msg::Pose();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(p.position.x,<sp/>0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>p);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>EXPECT_POSE_EQ(p,<sp/>proto);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">TEST(Conversion,<sp/>Vector)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>geometry_msgs::Vector3<sp/>proto;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Vector3<sp/>vec;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>vec.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>vec.y<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>vec.z<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(vec,<sp/>proto);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>EXPECT_VECTOR3_EQ(vec,<sp/>proto);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>vec<sp/>=<sp/>geometry_msgs::msg::Vector3();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(vec.x,<sp/>0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>vec);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>EXPECT_VECTOR3_EQ(vec,<sp/>proto);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">TEST(Conversion,<sp/>Twist)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>geometry_msgs::Twist<sp/>proto;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Twist<sp/>twist;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>twist.linear.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>twist.linear.y<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>twist.linear.z<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(twist,<sp/>proto);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>EXPECT_TWIST_EQ(twist,<sp/>proto);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>twist<sp/>=<sp/>geometry_msgs::msg::Twist();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(twist.linear.x,<sp/>0);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>twist);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>EXPECT_TWIST_EQ(twist,<sp/>proto);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">TEST(Conversion,<sp/>Accel)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>geometry_msgs::Accel<sp/>proto;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Accel<sp/>accel;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>accel.linear.x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>accel.linear.y<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>accel.linear.z<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(accel,<sp/>proto);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>EXPECT_ACCEL_EQ(accel,<sp/>proto);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>accel<sp/>=<sp/>geometry_msgs::msg::Accel();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(accel.linear.x,<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>accel);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>EXPECT_ACCEL_EQ(accel,<sp/>proto);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">TEST(Conversion,<sp/>Performance)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>openscenario_msgs::Performance<sp/>proto;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::Performance<sp/>performance;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>performance.max_speed<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>performance.max_deceleration<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(performance,<sp/>proto);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>EXPECT_PERFORMANCE_EQ(performance,<sp/>proto);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(performance.max_acceleration,<sp/>proto.max_acceleration());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(performance.max_deceleration,<sp/>proto.max_deceleration());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(performance.max_speed,<sp/>proto.max_speed());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>performance<sp/>=<sp/>openscenario_msgs::msg::Performance();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(performance.max_speed,<sp/>0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>performance);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>EXPECT_PERFORMANCE_EQ(performance,<sp/>proto);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">TEST(Conversion,<sp/>Axle)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>openscenario_msgs::Axle<sp/>proto;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::Axle<sp/>axle;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>axle.max_steering<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>axle.position_x<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>axle.position_z<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>axle.track_width<sp/>=<sp/>-10;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>axle.wheel_diameter<sp/>=<sp/>53;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(axle,<sp/>proto);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>EXPECT_AXLE_EQ(axle,<sp/>proto);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>axle<sp/>=<sp/>openscenario_msgs::msg::Axle();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(axle.max_steering,<sp/>0);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>axle);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>EXPECT_AXLE_EQ(axle,<sp/>proto);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">TEST(Conversion,<sp/>Axles)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>openscenario_msgs::Axles<sp/>proto;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::Axles<sp/>axles;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>axles.front_axle.max_steering<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>axles.front_axle.position_x<sp/>=<sp/>35;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>axles.front_axle.position_z<sp/>=<sp/>234;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>axles.front_axle.track_width<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>axles.front_axle.wheel_diameter<sp/>=<sp/>123;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>axles.rear_axle.max_steering<sp/>=<sp/>13;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>axles.rear_axle.position_x<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>axles.rear_axle.position_z<sp/>=<sp/>23;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>axles.rear_axle.track_width<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>axles.rear_axle.wheel_diameter<sp/>=<sp/>122;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(axles,<sp/>proto);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>EXPECT_AXLES_EQ(axles,<sp/>proto);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>axles<sp/>=<sp/>openscenario_msgs::msg::Axles();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(axles.front_axle.max_steering,<sp/>0);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>axles);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>EXPECT_AXLES_EQ(axles,<sp/>proto);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">TEST(Conversion,<sp/>BoundingBox)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>openscenario_msgs::BoundingBox<sp/>proto;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>box;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>box.center.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>box.center.y<sp/>=<sp/>1.23;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>box.center.z<sp/>=<sp/>43.0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>box.dimensions.x<sp/>=<sp/>12.3;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>box.dimensions.y<sp/>=<sp/>3.9;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>box.dimensions.z<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(box,<sp/>proto);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>EXPECT_BOUNDING_BOX_EQ(box,<sp/>proto);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>box<sp/>=<sp/>openscenario_msgs::msg::BoundingBox();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(box.center.x,<sp/>0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>box);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>EXPECT_BOUNDING_BOX_EQ(box,<sp/>proto);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">TEST(Conversion,<sp/>VehicleParameters)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>openscenario_msgs::VehicleParameters<sp/>proto;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::VehicleParameters<sp/>p;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>p.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>p.vehicle_category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>box;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>box.center.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>box.center.y<sp/>=<sp/>1.23;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>box.center.z<sp/>=<sp/>43.0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>box.dimensions.x<sp/>=<sp/>12.3;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>box.dimensions.y<sp/>=<sp/>3.9;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>box.dimensions.z<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>p.bounding_box<sp/>=<sp/>box;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::Performance<sp/>performance;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>performance.max_speed<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>performance.max_deceleration<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>p.performance<sp/>=<sp/>performance;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::Axle<sp/>axle;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>axle.max_steering<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>axle.position_x<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>axle.position_z<sp/>=<sp/>14;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>axle.track_width<sp/>=<sp/>-10;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>axle.wheel_diameter<sp/>=<sp/>53;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>p.axles.front_axle<sp/>=<sp/>axle;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>p.axles.rear_axle<sp/>=<sp/>axle;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toProto(p,<sp/>proto));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>EXPECT_VEHICLE_PARAMETERS_EQ(p,<sp/>proto);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>openscenario_msgs::msg::VehicleParameters();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(p.bounding_box.dimensions.x,<sp/>0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toMsg(proto,<sp/>p));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>EXPECT_VEHICLE_PARAMETERS_EQ(p,<sp/>proto);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">TEST(Conversion,<sp/>PedestrianParameters)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>openscenario_msgs::PedestrianParameters<sp/>proto;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::PedestrianParameters<sp/>p;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>p.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>p.pedestrian_category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>box;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>box.center.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>box.center.y<sp/>=<sp/>1.23;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>box.center.z<sp/>=<sp/>43.0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>box.dimensions.x<sp/>=<sp/>12.3;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>box.dimensions.y<sp/>=<sp/>3.9;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>box.dimensions.z<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>p.bounding_box<sp/>=<sp/>box;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toProto(p,<sp/>proto));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>EXPECT_PEDESTRIAN_PARAMETERS_EQ(p,<sp/>proto);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>p<sp/>=<sp/>openscenario_msgs::msg::PedestrianParameters();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(p.bounding_box.dimensions.x,<sp/>0);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toMsg(proto,<sp/>p));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>EXPECT_PEDESTRIAN_PARAMETERS_EQ(p,<sp/>proto);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">TEST(Conversion,<sp/>MiscObjectParameters)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>openscenario_msgs::MiscObjectParameters<sp/>proto;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::MiscObjectParameters<sp/>p;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>box;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>box.center.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>box.center.y<sp/>=<sp/>1.23;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>box.center.z<sp/>=<sp/>43.0;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>box.dimensions.x<sp/>=<sp/>12.3;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>box.dimensions.y<sp/>=<sp/>3.9;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>box.dimensions.z<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>p.bounding_box<sp/>=<sp/>box;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>p.misc_object_category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;obstacle&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toProto(p,<sp/>proto));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>EXPECT_MISC_OBJECT_PARAMETERS_EQ(p,<sp/>proto);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>p.misc_object_category<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toMsg(proto,<sp/>p));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>EXPECT_STREQ(p.misc_object_category.c_str(),<sp/>proto.misc_object_category().c_str());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>EXPECT_MISC_OBJECT_PARAMETERS_EQ(p,<sp/>proto);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">TEST(Conversion,<sp/>ActionStatus)</highlight></codeline>
<codeline lineno="270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>openscenario_msgs::ActionStatus<sp/>proto;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::ActionStatus<sp/>action;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>action.current_action<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>action.twist.linear.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>action.twist.linear.y<sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>action.twist.linear.z<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>action.twist.angular.x<sp/>=<sp/>-20;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>action.twist.angular.y<sp/>=<sp/>-4.2;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>action.twist.angular.z<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>action.accel.linear.x<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>action.accel.linear.y<sp/>=<sp/>908;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>action.accel.linear.z<sp/>=<sp/>987.0;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>action.accel.angular.x<sp/>=<sp/>0.3;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>action.accel.angular.y<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>action.accel.angular.z<sp/>=<sp/>98;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(action,<sp/>proto);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>EXPECT_ACTION_STATUS_EQ(action,<sp/>proto);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>action<sp/>=<sp/>openscenario_msgs::msg::ActionStatus();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>EXPECT_DOUBLE_EQ(action.twist.linear.x,<sp/>0);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>action);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>EXPECT_ACTION_STATUS_EQ(action,<sp/>proto);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">TEST(Conversion,<sp/>EntityStatus)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>openscenario_msgs::EntityStatus<sp/>proto;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::EntityStatus<sp/>status;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>status.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>status.time<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::BoundingBox<sp/>box;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>box.center.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>box.center.y<sp/>=<sp/>1.23;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>box.center.z<sp/>=<sp/>43.0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>box.dimensions.x<sp/>=<sp/>12.3;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>box.dimensions.y<sp/>=<sp/>3.9;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>box.dimensions.z<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>status.bounding_box<sp/>=<sp/>box;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::ActionStatus<sp/>action;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>action.current_action<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>action.twist.linear.x<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>action.twist.linear.y<sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>action.twist.linear.z<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>action.twist.angular.x<sp/>=<sp/>-20;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>action.twist.angular.y<sp/>=<sp/>-4.2;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>action.twist.angular.z<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>action.accel.linear.x<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>action.accel.linear.y<sp/>=<sp/>908;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>action.accel.linear.z<sp/>=<sp/>987.0;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>action.accel.angular.x<sp/>=<sp/>0.3;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>action.accel.angular.y<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>action.accel.angular.z<sp/>=<sp/>98;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>status.action_status<sp/>=<sp/>action;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>geometry_msgs::msg::Pose<sp/>pose;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>pose.position.x<sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>pose.position.y<sp/>=<sp/>1.2;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>pose.position.z<sp/>=<sp/>5.1;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>pose.orientation.x<sp/>=<sp/>0.3;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>pose.orientation.y<sp/>=<sp/>8.3;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>pose.orientation.z<sp/>=<sp/>9.3;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>pose.orientation.w<sp/>=<sp/>10.2;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>status.pose<sp/>=<sp/>pose;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::LaneletPose<sp/>lanelet_pose;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>lanelet_pose.lanelet_id<sp/>=<sp/>23;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>lanelet_pose.s<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>lanelet_pose.offset<sp/>=<sp/>3.5;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>lanelet_pose.rpy.x<sp/>=<sp/>3.4;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>lanelet_pose.rpy.y<sp/>=<sp/>5.1;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>lanelet_pose.rpy.z<sp/>=<sp/>1.3;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>status.lanelet_pose<sp/>=<sp/>lanelet_pose;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>status.lanelet_pose_valid<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(status,<sp/>proto);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>EXPECT_ENTITY_STATUS_EQ(status,<sp/>proto);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/>openscenario_msgs::msg::EntityStatus();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>EXPECT_TRUE(status.lanelet_pose_valid);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>status);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>EXPECT_ENTITY_STATUS_EQ(status,<sp/>proto);</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">TEST(Conversion,<sp/>Time)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>builtin_interfaces::Time<sp/>proto;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>builtin_interfaces::msg::Time<sp/>msg;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>msg.nanosec<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>msg.sec<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>EXPECT_TIME_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>msg.nanosec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>msg.sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>EXPECT_TIME_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal">TEST(Conversion,<sp/>Duration)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>builtin_interfaces::Duration<sp/>proto;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>builtin_interfaces::msg::Duration<sp/>msg;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>msg.nanosec<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>msg.sec<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>EXPECT_DURATION_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>msg.nanosec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>msg.sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>EXPECT_DURATION_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">TEST(Conversion,<sp/>Header)</highlight></codeline>
<codeline lineno="378"><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>std_msgs::Header<sp/>proto;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>std_msgs::msg::Header<sp/>msg;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>msg.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;base_link&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>msg.stamp.nanosec<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>msg.stamp.sec<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>EXPECT_HEADER_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>msg.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>msg.stamp.nanosec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>msg.stamp.sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>EXPECT_HEADER_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">TEST(Conversion,<sp/>Clock)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>rosgraph_msgs::msg::Clock<sp/>msg;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>rosgraph_msgs::Clock<sp/>proto;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>msg.clock.nanosec<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>msg.clock.sec<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>EXPECT_CLOCK_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>msg<sp/>=<sp/>rosgraph_msgs::msg::Clock();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.clock.nanosec,<sp/>static_cast&lt;uint32_t&gt;(0));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>EXPECT_CLOCK_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal">TEST(Conversion,<sp/>ControlCommand)</highlight></codeline>
<codeline lineno="408"><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>autoware_control_msgs::ControlCommand<sp/>proto;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>autoware_control_msgs::msg::ControlCommand<sp/>msg;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>msg.acceleration<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>msg.steering_angle<sp/>=<sp/>1.4;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>msg.steering_angle_velocity<sp/>=<sp/>13.4;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>msg.velocity<sp/>=<sp/>11.3;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>EXPECT_CONTROL_COMMAND_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>msg.acceleration<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>msg.steering_angle<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>msg.steering_angle_velocity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>msg.velocity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>EXPECT_CONTROL_COMMAND_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">TEST(Conversion,<sp/>Shift)</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>autoware_vehicle_msgs::Shift<sp/>proto;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>proto.set_data(autoware_vehicle_msgs::SHIFT_POSITIONS::PARKING);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>autoware_vehicle_msgs::msg::Shift<sp/>msg;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::LOW;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.data,<sp/>proto.data());</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::NEUTRAL;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(msg.data<sp/>==<sp/>proto.data());</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.data,<sp/>proto.data());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::PARKING;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(msg.data<sp/>==<sp/>proto.data());</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.data,<sp/>proto.data());</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::LOW;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(msg.data<sp/>==<sp/>proto.data());</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.data,<sp/>proto.data());</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::DRIVE;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(msg.data<sp/>==<sp/>proto.data());</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.data,<sp/>proto.data());</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::LOW;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(msg.data<sp/>==<sp/>proto.data());</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.data,<sp/>proto.data());</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::REVERSE;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(msg.data<sp/>==<sp/>proto.data());</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.data,<sp/>proto.data());</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::LOW;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(msg.data<sp/>==<sp/>proto.data());</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.data,<sp/>proto.data());</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::NONE;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(msg.data<sp/>==<sp/>proto.data());</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.data,<sp/>proto.data());</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::LOW;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>EXPECT_FALSE(msg.data<sp/>==<sp/>proto.data());</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.data,<sp/>proto.data());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>msg.data<sp/>=<sp/>1023;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>EXPECT_THROW(</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto),</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>common::scenario_simulator_exception::SimulationError);</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal">TEST(Conversion,<sp/>VehicleCommand)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>autoware_vehicle_msgs::VehicleCommand<sp/>proto;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>autoware_vehicle_msgs::msg::VehicleCommand<sp/>msg;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>msg.control.velocity<sp/>=<sp/>1.2;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>msg.control.steering_angle_velocity<sp/>=<sp/>19.3;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>msg.control.steering_angle<sp/>=<sp/>12.0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>msg.control.steering_angle_velocity<sp/>=<sp/>192.4;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>msg.shift.data<sp/>=<sp/>autoware_vehicle_msgs::msg::Shift::NEUTRAL;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>msg.emergency<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>msg.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;base_link&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>msg.header.stamp.nanosec<sp/>=<sp/>99;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>msg.header.stamp.sec<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>EXPECT_VEHICLE_COMMAND_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>msg.shift.data<sp/>=<sp/>1023;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>EXPECT_THROW(</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto),</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>common::scenario_simulator_exception::SimulationError);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>EXPECT_HEADER_EQ(msg.header,<sp/>proto.header());</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.emergency,<sp/>proto.emergency());</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>msg<sp/>=<sp/>autoware_vehicle_msgs::msg::VehicleCommand();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>simulation_interface::toMsg(proto,<sp/>msg);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>EXPECT_VEHICLE_COMMAND_EQ(msg,<sp/>proto);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>msg.shift.data<sp/>=<sp/>1023;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>EXPECT_THROW(</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>simulation_interface::toProto(msg,<sp/>proto),</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>common::scenario_simulator_exception::SimulationError);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>EXPECT_HEADER_EQ(msg.header,<sp/>proto.header());</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.emergency,<sp/>proto.emergency());</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">TEST(Conversion,<sp/>EntityType)</highlight></codeline>
<codeline lineno="526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>openscenario_msgs::EntityType<sp/>proto;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::EntityType<sp/>msg;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>msg.type<sp/>=<sp/>msg.VEHICLE;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toProto(msg,<sp/>proto));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>EXPECT_EQ(proto,<sp/>openscenario_msgs::EntityType::VEHICLE);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>msg.type<sp/>=<sp/>msg.MISC_OBJECT;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toProto(msg,<sp/>proto));</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>EXPECT_EQ(proto,<sp/>openscenario_msgs::EntityType::MISC_OBJECT);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>proto<sp/>=<sp/>openscenario_msgs::EntityType::VEHICLE;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>msg.type<sp/>=<sp/>msg.EGO;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toMsg(proto,<sp/>msg));</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.type,<sp/>openscenario_msgs::msg::EntityType::VEHICLE);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>msg.type<sp/>=<sp/>msg.VEHICLE;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>proto<sp/>=<sp/>openscenario_msgs::EntityType::EGO;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toMsg(proto,<sp/>msg));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.type,<sp/>openscenario_msgs::msg::EntityType::EGO);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>msg.type<sp/>=<sp/>msg.VEHICLE;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>proto<sp/>=<sp/>openscenario_msgs::EntityType::PEDESTRIAN;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toMsg(proto,<sp/>msg));</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.type,<sp/>openscenario_msgs::msg::EntityType::PEDESTRIAN);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>proto<sp/>=<sp/>openscenario_msgs::EntityType::MISC_OBJECT;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toMsg(proto,<sp/>msg));</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>EXPECT_EQ(msg.type,<sp/>openscenario_msgs::msg::EntityType::MISC_OBJECT);</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal">TEST(Conversion,<sp/>LaneletPose)</highlight></codeline>
<codeline lineno="553"><highlight class="normal">{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>openscenario_msgs::msg::LaneletPose<sp/>pose;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>openscenario_msgs::LaneletPose<sp/>proto;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>pose.lanelet_id<sp/>=<sp/>23;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>pose.s<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>pose.offset<sp/>=<sp/>3.5;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>pose.rpy.x<sp/>=<sp/>3.4;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>pose.rpy.y<sp/>=<sp/>5.1;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>pose.rpy.z<sp/>=<sp/>1.3;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toProto(pose,<sp/>proto));</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>EXPECT_LANELET_POSE_EQ(pose,<sp/>proto);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>pose<sp/>=<sp/>openscenario_msgs::msg::LaneletPose();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toMsg(proto,<sp/>pose));</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>EXPECT_LANELET_POSE_EQ(pose,<sp/>proto);</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal">TEST(Conversion,<sp/>TrafficLights)</highlight></codeline>
<codeline lineno="570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>simulation_api_schema::TrafficLightState<sp/>proto;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>autoware_perception_msgs::msg::TrafficLightState<sp/>msg;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>msg.id<sp/>=<sp/>123;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>autoware_perception_msgs::msg::LampState<sp/>ls0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>autoware_perception_msgs::msg::LampState<sp/>ls1;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>autoware_perception_msgs::msg::LampState<sp/>ls2;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>autoware_perception_msgs::msg::LampState<sp/>ls3;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>autoware_perception_msgs::msg::LampState<sp/>ls4;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>autoware_perception_msgs::msg::LampState<sp/>ls5;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>autoware_perception_msgs::msg::LampState<sp/>ls6;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>autoware_perception_msgs::msg::LampState<sp/>ls7;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>ls0.type<sp/>=<sp/>ls0.UNKNOWN;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>ls0.confidence<sp/>=<sp/>12.12;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>ls1.type<sp/>=<sp/>ls1.RED;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>ls2.type<sp/>=<sp/>ls2.GREEN;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>ls3.type<sp/>=<sp/>ls3.YELLOW;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>ls4.type<sp/>=<sp/>ls4.LEFT;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>ls5.type<sp/>=<sp/>ls5.RIGHT;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>ls6.type<sp/>=<sp/>ls6.UP;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>ls7.type<sp/>=<sp/>ls7.DOWN;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>msg.lamp_states<sp/>=<sp/>{ls0,<sp/>ls1,<sp/>ls2,<sp/>ls3,<sp/>ls4,<sp/>ls5,<sp/>ls6,<sp/>ls7};</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>EXPECT_NO_THROW(simulation_interface::toProto(msg,<sp/>proto));</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>EXPECT_EQ(proto.id(),<sp/>123);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>EXPECT_NE(proto.lamp_states()[0].confidence(),<sp/>12.12);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>proto.lamp_states()[0].type(),<sp/>simulation_api_schema::TrafficLightState::LampState::UNKNOWN);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>proto.lamp_states()[1].type(),<sp/>simulation_api_schema::TrafficLightState::LampState::RED);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>proto.lamp_states()[2].type(),<sp/>simulation_api_schema::TrafficLightState::LampState::GREEN);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>proto.lamp_states()[3].type(),<sp/>simulation_api_schema::TrafficLightState::LampState::YELLOW);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>proto.lamp_states()[4].type(),<sp/>simulation_api_schema::TrafficLightState::LampState::LEFT);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>proto.lamp_states()[5].type(),<sp/>simulation_api_schema::TrafficLightState::LampState::RIGHT);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>EXPECT_EQ(proto.lamp_states()[6].type(),<sp/>simulation_api_schema::TrafficLightState::LampState::UP);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>EXPECT_EQ(</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>proto.lamp_states()[7].type(),<sp/>simulation_api_schema::TrafficLightState::LampState::DOWN);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<sp/>argv)</highlight></codeline>
<codeline lineno="617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>testing::InitGoogleTest(&amp;argc,<sp/>argv);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RUN_ALL_TESTS();</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp"/>
  </compounddef>
</doxygen>
