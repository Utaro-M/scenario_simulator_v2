<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="expect__equal__macros_8hpp" kind="file" language="C++">
    <compoundname>expect_equal_macros.hpp</compoundname>
    <includes local="no">geometry_msgs.pb.h</includes>
    <includes local="no">gtest/gtest.h</includes>
    <includes local="no">geometry_msgs/msg/accel.hpp</includes>
    <includes local="no">geometry_msgs/msg/point.hpp</includes>
    <includes local="no">geometry_msgs/msg/pose.hpp</includes>
    <includes local="no">geometry_msgs/msg/quaternion.hpp</includes>
    <includes local="no">geometry_msgs/msg/twist.hpp</includes>
    <includes local="no">geometry_msgs/msg/vector3.hpp</includes>
    <includes local="no">scenario_simulator_exception/exception.hpp</includes>
    <includes refid="conversions_8hpp" local="no">simulation_interface/conversions.hpp</includes>
    <includes local="no">string</includes>
    <includedby refid="test__conversions_8cpp" local="yes">/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/test_conversions.cpp</includedby>
    <incdepgraph>
      <node id="140">
        <label>scenario_simulator_exception/exception.hpp</label>
      </node>
      <node id="132">
        <label>geometry_msgs.pb.h</label>
      </node>
      <node id="166">
        <label>rosgraph_msgs/msg/clock.hpp</label>
      </node>
      <node id="160">
        <label>openscenario_msgs/msg/entity_type.hpp</label>
      </node>
      <node id="138">
        <label>geometry_msgs/msg/twist.hpp</label>
      </node>
      <node id="149">
        <label>autoware_control_msgs/msg/control_command.hpp</label>
      </node>
      <node id="152">
        <label>builtin_interfaces/msg/duration.hpp</label>
      </node>
      <node id="162">
        <label>openscenario_msgs/msg/misc_object_parameters.hpp</label>
      </node>
      <node id="146">
        <label>rosgraph_msgs.pb.h</label>
      </node>
      <node id="161">
        <label>openscenario_msgs/msg/lanelet_pose.hpp</label>
      </node>
      <node id="155">
        <label>openscenario_msgs/msg/action_status.hpp</label>
      </node>
      <node id="159">
        <label>openscenario_msgs/msg/entity_status.hpp</label>
      </node>
      <node id="136">
        <label>geometry_msgs/msg/pose.hpp</label>
      </node>
      <node id="145">
        <label>openscenario_msgs.pb.h</label>
      </node>
      <node id="165">
        <label>openscenario_msgs/msg/vehicle_parameters.hpp</label>
      </node>
      <node id="143">
        <label>autoware_vehicle_msgs.pb.h</label>
      </node>
      <node id="168">
        <label>string</label>
      </node>
      <node id="158">
        <label>openscenario_msgs/msg/bounding_box.hpp</label>
      </node>
      <node id="169">
        <label>std_msgs/msg/header.hpp</label>
      </node>
      <node id="153">
        <label>builtin_interfaces/msg/time.hpp</label>
      </node>
      <node id="139">
        <label>geometry_msgs/msg/vector3.hpp</label>
      </node>
      <node id="156">
        <label>openscenario_msgs/msg/axle.hpp</label>
      </node>
      <node id="157">
        <label>openscenario_msgs/msg/axles.hpp</label>
      </node>
      <node id="150">
        <label>autoware_vehicle_msgs/msg/shift.hpp</label>
      </node>
      <node id="135">
        <label>geometry_msgs/msg/point.hpp</label>
      </node>
      <node id="148">
        <label>std_msgs.pb.h</label>
      </node>
      <node id="170">
        <label>vector</label>
      </node>
      <node id="144">
        <label>builtin_interfaces.pb.h</label>
      </node>
      <node id="133">
        <label>gtest/gtest.h</label>
      </node>
      <node id="151">
        <label>autoware_vehicle_msgs/msg/vehicle_command.hpp</label>
      </node>
      <node id="142">
        <label>autoware_control_msgs.pb.h</label>
      </node>
      <node id="154">
        <label>iostream</label>
      </node>
      <node id="167">
        <label>simulation_interface/constants.hpp</label>
        <link refid="constants_8hpp_source"/>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="134">
        <label>geometry_msgs/msg/accel.hpp</label>
      </node>
      <node id="164">
        <label>openscenario_msgs/msg/performance.hpp</label>
      </node>
      <node id="137">
        <label>geometry_msgs/msg/quaternion.hpp</label>
      </node>
      <node id="131">
        <label>/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp</label>
        <link refid="expect__equal__macros_8hpp"/>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>openscenario_msgs/msg/pedestrian_parameters.hpp</label>
      </node>
      <node id="141">
        <label>simulation_interface/conversions.hpp</label>
        <link refid="conversions_8hpp_source"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>simulation_api_schema.pb.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="expect__equal__macros_8hpp_1afe4591cb0e8a88573b879edfa7ed8b59" prot="public" static="no">
        <name>EXPECT_HEADER_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_STREQ(MSG.frame_id.c_str(), PROTO.frame_id().c_str()); \
  EXPECT_EQ(MSG.stamp.sec, PROTO.stamp().sec());                \
  EXPECT_EQ(MSG.stamp.nanosec, PROTO.stamp().nanosec());</initializer>
        <briefdescription>
<para>Expect equal macros for std_msgs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="35" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1adc8c456ab7ff4cbe7b6f71136e6cd783" prot="public" static="no">
        <name>EXPECT_TIME_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_EQ(MSG.nanosec, PROTO.nanosec()); \
  EXPECT_EQ(MSG.sec, PROTO.sec());</initializer>
        <briefdescription>
<para>Expect equal macros for builtin_interfaces. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="43" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a5c830ba8b93d82a43ce06db8ee29bf74" prot="public" static="no">
        <name>EXPECT_DURATION_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_EQ(MSG.nanosec, PROTO.nanosec()); \
  EXPECT_EQ(MSG.sec, PROTO.sec());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="47" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a07746aacc9856f479f8abfd8c7de94b4" prot="public" static="no">
        <name>EXPECT_CLOCK_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_TIME_EQ(MSG.clock, PROTO.clock());</initializer>
        <briefdescription>
<para>Expect equal macro for rosgraph_msgs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="54" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1aa45afb2ef138b1507628869576246fde" prot="public" static="no">
        <name>EXPECT_POINT_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_DOUBLE_EQ(MSG.x, PROTO.x()); \
  EXPECT_DOUBLE_EQ(MSG.y, PROTO.y()); \
  EXPECT_DOUBLE_EQ(MSG.z, PROTO.z());</initializer>
        <briefdescription>
<para>Expect equal macros for geometry_msgs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="60" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a6d38c598ec04bb977e0d7dc86af991cb" prot="public" static="no">
        <name>EXPECT_QUATERNION_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_DOUBLE_EQ(MSG.x, PROTO.x());    \
  EXPECT_DOUBLE_EQ(MSG.y, PROTO.y());    \
  EXPECT_DOUBLE_EQ(MSG.z, PROTO.z());    \
  EXPECT_DOUBLE_EQ(MSG.w, PROTO.w());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="65" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a7dbf5c0a7fb6b35ae1c1a1fa58efce6c" prot="public" static="no">
        <name>EXPECT_POSE_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_QUATERNION_EQ(MSG.orientation, PROTO.orientation()); \
  EXPECT_POINT_EQ(MSG.position, PROTO.position());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="71" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1affa78cb6f8729fe4e141ac4d5ac682d8" prot="public" static="no">
        <name>EXPECT_VECTOR3_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_DOUBLE_EQ(MSG.x, PROTO.x()); \
  EXPECT_DOUBLE_EQ(MSG.y, PROTO.y()); \
  EXPECT_DOUBLE_EQ(MSG.z, PROTO.z());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="75" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a0b64d3d9026584b109aa9d7b820ffa9e" prot="public" static="no">
        <name>EXPECT_TWIST_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_VECTOR3_EQ(MSG.linear, PROTO.linear()); \
  EXPECT_VECTOR3_EQ(MSG.angular, PROTO.angular());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="80" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a499a8ad9e7d4c687639a9f54fff83c49" prot="public" static="no">
        <name>EXPECT_ACCEL_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_VECTOR3_EQ(MSG.linear, PROTO.linear()); \
  EXPECT_VECTOR3_EQ(MSG.angular, PROTO.angular());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="84" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a8638718e88d2e24be119730f101ef19d" prot="public" static="no">
        <name>EXPECT_PERFORMANCE_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_DOUBLE_EQ(MSG.max_speed, PROTO.max_speed());               \
  EXPECT_DOUBLE_EQ(MSG.max_acceleration, PROTO.max_acceleration()); \
  EXPECT_DOUBLE_EQ(MSG.max_deceleration, PROTO.max_deceleration());</initializer>
        <briefdescription>
<para>Expect equal macros for openscenario_msgs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="92" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a4930a624212ba530465a1b725591b232" prot="public" static="no">
        <name>EXPECT_AXLE_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_DOUBLE_EQ(MSG.max_steering, PROTO.max_steering());     \
  EXPECT_DOUBLE_EQ(MSG.wheel_diameter, PROTO.wheel_diameter()); \
  EXPECT_DOUBLE_EQ(MSG.track_width, PROTO.track_width());       \
  EXPECT_DOUBLE_EQ(MSG.position_x, PROTO.position_x());         \
  EXPECT_DOUBLE_EQ(MSG.position_z, PROTO.position_z());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="97" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a35372ad25b3952a55193926c2feb9119" prot="public" static="no">
        <name>EXPECT_AXLES_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_AXLE_EQ(MSG.front_axle, PROTO.front_axle()) \
  EXPECT_AXLE_EQ(MSG.rear_axle, PROTO.rear_axle());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="104" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1ae38663bbec4d412d30269782cab45ed8" prot="public" static="no">
        <name>EXPECT_BOUNDING_BOX_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_POINT_EQ(MSG.center, PROTO.center()); \
  EXPECT_VECTOR3_EQ(MSG.dimensions, PROTO.dimensions());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="108" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1ada899d4f0e7da0a359c3333e2180f6ae" prot="public" static="no">
        <name>EXPECT_VEHICLE_PARAMETERS_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_STREQ(MSG.name.c_str(), PROTO.name().c_str());                         \
  EXPECT_STREQ(MSG.vehicle_category.c_str(), PROTO.vehicle_category().c_str()); \
  EXPECT_BOUNDING_BOX_EQ(MSG.bounding_box, PROTO.bounding_box());               \
  EXPECT_PERFORMANCE_EQ(MSG.performance, PROTO.performance());                  \
  EXPECT_AXLES_EQ(MSG.axles, PROTO.axles());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="112" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a13b4e7d81a3ebbc0ac4198a7593ccdeb" prot="public" static="no">
        <name>EXPECT_PEDESTRIAN_PARAMETERS_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_STREQ(MSG.name.c_str(), PROTO.name().c_str());                               \
  EXPECT_STREQ(MSG.pedestrian_category.c_str(), PROTO.pedestrian_category().c_str()); \
  EXPECT_BOUNDING_BOX_EQ(MSG.bounding_box, PROTO.bounding_box());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="119" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a755813fa28efc46ebf283438c2ac3be8" prot="public" static="no">
        <name>EXPECT_MISC_OBJECT_PARAMETERS_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_STREQ(MSG.name.c_str(), PROTO.name().c_str());                                 \
  EXPECT_STREQ(MSG.misc_object_category.c_str(), PROTO.misc_object_category().c_str()); \
  EXPECT_BOUNDING_BOX_EQ(MSG.bounding_box, PROTO.bounding_box());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="124" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a35c516b61a2cfa85266140fff6409b72" prot="public" static="no">
        <name>EXPECT_ACTION_STATUS_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_STREQ(MSG.current_action.c_str(), PROTO.current_action().c_str()); \
  EXPECT_TWIST_EQ(MSG.twist, PROTO.twist());                                \
  EXPECT_ACCEL_EQ(MSG.accel, PROTO.accel());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="129" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a4861e52eb70b5cf2a580084a103cb710" prot="public" static="no">
        <name>EXPECT_LANELET_POSE_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_EQ(MSG.lanelet_id, PROTO.lanelet_id()); \
  EXPECT_DOUBLE_EQ(MSG.s, PROTO.s());            \
  EXPECT_DOUBLE_EQ(MSG.offset, PROTO.offset());  \
  EXPECT_VECTOR3_EQ(MSG.rpy, PROTO.rpy());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="134" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a1964eed350efb52128c4fab6b7470920" prot="public" static="no">
        <name>EXPECT_ENTITY_STATUS_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_DOUBLE_EQ(MSG.time, PROTO.time());                          \
  EXPECT_STREQ(MSG.name.c_str(), PROTO.name().c_str());              \
  EXPECT_BOUNDING_BOX_EQ(MSG.bounding_box, PROTO.bounding_box());    \
  EXPECT_ACTION_STATUS_EQ(MSG.action_status, PROTO.action_status()); \
  EXPECT_POSE_EQ(MSG.pose, PROTO.pose());                            \
  EXPECT_LANELET_POSE_EQ(MSG.lanelet_pose, PROTO.lanelet_pose());    \
  EXPECT_EQ(MSG.lanelet_pose_valid, PROTO.lanelet_pose_valid());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="140" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1a293debd9d58826b78e26c46912183267" prot="public" static="no">
        <name>EXPECT_CONTROL_COMMAND_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_DOUBLE_EQ(MSG.velocity, PROTO.velocity());                               \
  EXPECT_DOUBLE_EQ(MSG.steering_angle_velocity, PROTO.steering_angle_velocity()); \
  EXPECT_DOUBLE_EQ(MSG.steering_angle, PROTO.steering_angle());                   \
  EXPECT_DOUBLE_EQ(MSG.acceleration, PROTO.acceleration());</initializer>
        <briefdescription>
<para>Expect equal macros for autoware related messages. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="153" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="expect__equal__macros_8hpp_1ae88fb1a1a4494cc2b8c9ef48a9b28992" prot="public" static="no">
        <name>EXPECT_VEHICLE_COMMAND_EQ</name>
        <param><defname>MSG</defname></param>
        <param><defname>PROTO</defname></param>
        <initializer>EXPECT_CONTROL_COMMAND_EQ(MSG.control, PROTO.control()); \
  EXPECT_EQ(MSG.shift.data, PROTO.shift().data());         \
  EXPECT_EQ(MSG.emergency, PROTO.emergency());             \
  EXPECT_HEADER_EQ(MSG.header, PROTO.header());</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" line="159" column="9" bodyfile="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2020<sp/>Tier<sp/>IV,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SIMULATION_INTERFACE__TEST__EXPECT_EQUAL_MACROS_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMULATION_INTERFACE__TEST__EXPECT_EQUAL_MACROS_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs.pb.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/msg/accel.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/msg/point.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/msg/pose.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/msg/quaternion.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/msg/twist.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/msg/vector3.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;scenario_simulator_exception/exception.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;simulation_interface/conversions.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor">#define<sp/>EXPECT_HEADER_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/>EXPECT_STREQ(MSG.frame_id.c_str(),<sp/>PROTO.frame_id().c_str());<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ(MSG.stamp.sec,<sp/>PROTO.stamp().sec());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ(MSG.stamp.nanosec,<sp/>PROTO.stamp().nanosec());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor">#define<sp/>EXPECT_TIME_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ(MSG.nanosec,<sp/>PROTO.nanosec());<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ(MSG.sec,<sp/>PROTO.sec());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_DURATION_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ(MSG.nanosec,<sp/>PROTO.nanosec());<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ(MSG.sec,<sp/>PROTO.sec());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor">#define<sp/>EXPECT_CLOCK_EQ(MSG,<sp/>PROTO)<sp/>EXPECT_TIME_EQ(MSG.clock,<sp/>PROTO.clock());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor">#define<sp/>EXPECT_POINT_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.x,<sp/>PROTO.x());<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.y,<sp/>PROTO.y());<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.z,<sp/>PROTO.z());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_QUATERNION_EQ(MSG,<sp/>PROTO)<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.x,<sp/>PROTO.x());<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.y,<sp/>PROTO.y());<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.z,<sp/>PROTO.z());<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.w,<sp/>PROTO.w());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_POSE_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/>EXPECT_QUATERNION_EQ(MSG.orientation,<sp/>PROTO.orientation());<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/>EXPECT_POINT_EQ(MSG.position,<sp/>PROTO.position());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_VECTOR3_EQ(MSG,<sp/>PROTO)<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.x,<sp/>PROTO.x());<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.y,<sp/>PROTO.y());<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.z,<sp/>PROTO.z());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_TWIST_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/>EXPECT_VECTOR3_EQ(MSG.linear,<sp/>PROTO.linear());<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/>EXPECT_VECTOR3_EQ(MSG.angular,<sp/>PROTO.angular());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_ACCEL_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/>EXPECT_VECTOR3_EQ(MSG.linear,<sp/>PROTO.linear());<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/>EXPECT_VECTOR3_EQ(MSG.angular,<sp/>PROTO.angular());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor">#define<sp/>EXPECT_PERFORMANCE_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.max_speed,<sp/>PROTO.max_speed());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.max_acceleration,<sp/>PROTO.max_acceleration());<sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.max_deceleration,<sp/>PROTO.max_deceleration());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_AXLE_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.max_steering,<sp/>PROTO.max_steering());<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.wheel_diameter,<sp/>PROTO.wheel_diameter());<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.track_width,<sp/>PROTO.track_width());<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.position_x,<sp/>PROTO.position_x());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.position_z,<sp/>PROTO.position_z());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_AXLES_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/>EXPECT_AXLE_EQ(MSG.front_axle,<sp/>PROTO.front_axle())<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/>EXPECT_AXLE_EQ(MSG.rear_axle,<sp/>PROTO.rear_axle());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_BOUNDING_BOX_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/>EXPECT_POINT_EQ(MSG.center,<sp/>PROTO.center());<sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/>EXPECT_VECTOR3_EQ(MSG.dimensions,<sp/>PROTO.dimensions());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_VEHICLE_PARAMETERS_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/>EXPECT_STREQ(MSG.name.c_str(),<sp/>PROTO.name().c_str());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/>EXPECT_STREQ(MSG.vehicle_category.c_str(),<sp/>PROTO.vehicle_category().c_str());<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/>EXPECT_BOUNDING_BOX_EQ(MSG.bounding_box,<sp/>PROTO.bounding_box());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/>EXPECT_PERFORMANCE_EQ(MSG.performance,<sp/>PROTO.performance());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/>EXPECT_AXLES_EQ(MSG.axles,<sp/>PROTO.axles());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_PEDESTRIAN_PARAMETERS_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/>EXPECT_STREQ(MSG.name.c_str(),<sp/>PROTO.name().c_str());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/>EXPECT_STREQ(MSG.pedestrian_category.c_str(),<sp/>PROTO.pedestrian_category().c_str());<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/>EXPECT_BOUNDING_BOX_EQ(MSG.bounding_box,<sp/>PROTO.bounding_box());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_MISC_OBJECT_PARAMETERS_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/>EXPECT_STREQ(MSG.name.c_str(),<sp/>PROTO.name().c_str());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/>EXPECT_STREQ(MSG.misc_object_category.c_str(),<sp/>PROTO.misc_object_category().c_str());<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/>EXPECT_BOUNDING_BOX_EQ(MSG.bounding_box,<sp/>PROTO.bounding_box());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_ACTION_STATUS_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/>EXPECT_STREQ(MSG.current_action.c_str(),<sp/>PROTO.current_action().c_str());<sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/>EXPECT_TWIST_EQ(MSG.twist,<sp/>PROTO.twist());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/>EXPECT_ACCEL_EQ(MSG.accel,<sp/>PROTO.accel());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_LANELET_POSE_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ(MSG.lanelet_id,<sp/>PROTO.lanelet_id());<sp/>\</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.s,<sp/>PROTO.s());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.offset,<sp/>PROTO.offset());<sp/><sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/>EXPECT_VECTOR3_EQ(MSG.rpy,<sp/>PROTO.rpy());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_ENTITY_STATUS_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.time,<sp/>PROTO.time());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/>EXPECT_STREQ(MSG.name.c_str(),<sp/>PROTO.name().c_str());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/>EXPECT_BOUNDING_BOX_EQ(MSG.bounding_box,<sp/>PROTO.bounding_box());<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/>EXPECT_ACTION_STATUS_EQ(MSG.action_status,<sp/>PROTO.action_status());<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/>EXPECT_POSE_EQ(MSG.pose,<sp/>PROTO.pose());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/>EXPECT_LANELET_POSE_EQ(MSG.lanelet_pose,<sp/>PROTO.lanelet_pose());<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ(MSG.lanelet_pose_valid,<sp/>PROTO.lanelet_pose_valid());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor">#define<sp/>EXPECT_CONTROL_COMMAND_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.velocity,<sp/>PROTO.velocity());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.steering_angle_velocity,<sp/>PROTO.steering_angle_velocity());<sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.steering_angle,<sp/>PROTO.steering_angle());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/>EXPECT_DOUBLE_EQ(MSG.acceleration,<sp/>PROTO.acceleration());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXPECT_VEHICLE_COMMAND_EQ(MSG,<sp/>PROTO)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/>EXPECT_CONTROL_COMMAND_EQ(MSG.control,<sp/>PROTO.control());<sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ(MSG.shift.data,<sp/>PROTO.shift().data());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/>EXPECT_EQ(MSG.emergency,<sp/>PROTO.emergency());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/>EXPECT_HEADER_EQ(MSG.header,<sp/>PROTO.header());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SIMULATION_INTERFACE__TEST__EXPECT_EQUAL_MACROS_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/scenario_simulator_v2/scenario_simulator_v2/simulation/simulation_interface/test/expect_equal_macros.hpp"/>
  </compounddef>
</doxygen>
